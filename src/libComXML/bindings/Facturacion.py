# ./Facturacion.py
# PyXB bindings for NamespaceModule
# NSM:a83c9feab95e4a15cdca0fc67c51e0fb9e2c4f25
# Generated 2010-05-28 15:03:25.811215 by PyXB version 1.1.1
import pyxb
import pyxb.binding
import pyxb.binding.saxer
import StringIO
import pyxb.utils.utility
import pyxb.utils.domutils
import sys

# Unique identifier for bindings created at the same time
_GenerationUID = pyxb.utils.utility.UniqueIdentifier('urn:uuid:66957dd2-6a59-11df-9552-0025646a9043')

# Import bindings for namespaces imported into schema
import pyxb.binding.datatypes

Namespace = pyxb.namespace.NamespaceForURI(u'http://localhost/elegibilidad', create_if_missing=True)
Namespace.configureCategories(['typeBinding', 'elementBinding'])
ModuleRecord = Namespace.lookupModuleRecordByUID(_GenerationUID, create_if_missing=True)
ModuleRecord._setModule(sys.modules[__name__])

def CreateFromDocument (xml_text, default_namespace=None, location_base=None):
    """Parse the given XML and use the document element to create a Python instance."""
    if pyxb.XMLStyle_saxer != pyxb._XMLStyle:
        dom = pyxb.utils.domutils.StringToDOM(xml_text)
        return CreateFromDOM(dom.documentElement)
    saxer = pyxb.binding.saxer.make_parser(fallback_namespace=Namespace.fallbackNamespace(), location_base=location_base)
    handler = saxer.getContentHandler()
    saxer.parse(StringIO.StringIO(xml_text))
    instance = handler.rootObject()
    return instance

def CreateFromDOM (node, default_namespace=None):
    """Create a Python instance from the given DOM node.
    The node tag must correspond to an element declaration in this module.

    @deprecated: Forcing use of DOM interface is unnecessary; use L{CreateFromDocument}."""
    if default_namespace is None:
        default_namespace = Namespace.fallbackNamespace()
    return pyxb.binding.basis.element.AnyCreateFromDOM(node, _fallback_namespace=default_namespace)


# Atomic SimpleTypeDefinition
class Codigo (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Codigo')
    _Documentation = None
Codigo._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(22L))
Codigo._InitializeFacetMap(Codigo._CF_length)
Namespace.addCategoryObject('typeBinding', u'Codigo', Codigo)

# Atomic SimpleTypeDefinition
class STD_ANON_1 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_1._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_1._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_1._InitializeFacetMap(STD_ANON_1._CF_totalDigits,
   STD_ANON_1._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class CodigoMotivoRechazo (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """codigo motivo del rechazo
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoMotivoRechazo')
    _Documentation = u'codigo motivo del rechazo\n\t\t\t'
CodigoMotivoRechazo._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=CodigoMotivoRechazo, enum_prefix=None)
CodigoMotivoRechazo.n01 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'01')
CodigoMotivoRechazo.n02 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'02')
CodigoMotivoRechazo.n03 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'03')
CodigoMotivoRechazo.n04 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'04')
CodigoMotivoRechazo.n05 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'05')
CodigoMotivoRechazo.n06 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'06')
CodigoMotivoRechazo.n07 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'07')
CodigoMotivoRechazo.n08 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'08')
CodigoMotivoRechazo.n09 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'09')
CodigoMotivoRechazo.n10 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'10')
CodigoMotivoRechazo.n11 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'11')
CodigoMotivoRechazo.n12 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'12')
CodigoMotivoRechazo.n13 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'13')
CodigoMotivoRechazo.n14 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'14')
CodigoMotivoRechazo.n15 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'15')
CodigoMotivoRechazo.n16 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'16')
CodigoMotivoRechazo.n17 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'17')
CodigoMotivoRechazo.n18 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'18')
CodigoMotivoRechazo.n19 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'19')
CodigoMotivoRechazo.n20 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'20')
CodigoMotivoRechazo.n21 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'21')
CodigoMotivoRechazo.n22 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'22')
CodigoMotivoRechazo.n23 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'23')
CodigoMotivoRechazo.n24 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'24')
CodigoMotivoRechazo.n25 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'25')
CodigoMotivoRechazo.n26 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'26')
CodigoMotivoRechazo.n27 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'27')
CodigoMotivoRechazo.n28 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'28')
CodigoMotivoRechazo.n29 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'29')
CodigoMotivoRechazo.n30 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'30')
CodigoMotivoRechazo.n31 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'31')
CodigoMotivoRechazo.n32 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'32')
CodigoMotivoRechazo.n33 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'33')
CodigoMotivoRechazo.n99 = CodigoMotivoRechazo._CF_enumeration.addEnumeration(unicode_value=u'99')
CodigoMotivoRechazo._InitializeFacetMap(CodigoMotivoRechazo._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'CodigoMotivoRechazo', CodigoMotivoRechazo)

# Atomic SimpleTypeDefinition
class STD_ANON_2 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_2._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_2._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_2._InitializeFacetMap(STD_ANON_2._CF_totalDigits,
   STD_ANON_2._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Potencia (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Potencia')
    _Documentation = None
Potencia._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
Potencia._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Potencia._InitializeFacetMap(Potencia._CF_totalDigits,
   Potencia._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Potencia', Potencia)

# Atomic SimpleTypeDefinition
class AltaBajaModificacion (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'AltaBajaModificacion')
    _Documentation = None
AltaBajaModificacion._CF_pattern = pyxb.binding.facets.CF_pattern()
AltaBajaModificacion._CF_pattern.addPattern(pattern=u'A|B|M')
AltaBajaModificacion._InitializeFacetMap(AltaBajaModificacion._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'AltaBajaModificacion', AltaBajaModificacion)

# Atomic SimpleTypeDefinition
class X10 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X10')
    _Documentation = None
X10._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(10L))
X10._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X10._InitializeFacetMap(X10._CF_maxLength,
   X10._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X10', X10)

# Atomic SimpleTypeDefinition
class Decimal2 (pyxb.binding.datatypes.integer):

    """decimal de dos digitos"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal2')
    _Documentation = u'decimal de dos digitos'
Decimal2._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(2L))
Decimal2._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal2._InitializeFacetMap(Decimal2._CF_totalDigits,
   Decimal2._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal2', Decimal2)

# Atomic SimpleTypeDefinition
class IndicativoNSA (pyxb.binding.datatypes.string):

    """indicativo modificaciones administrativas (N no lleva modificaciones administrativas/ S tiene modificaciones administrativas/ A ambas)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoNSA')
    _Documentation = u'indicativo modificaciones administrativas (N no lleva modificaciones administrativas/ S tiene modificaciones administrativas/ A ambas)'
IndicativoNSA._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoNSA._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoNSA._CF_pattern.addPattern(pattern=u'N|S|A')
IndicativoNSA._InitializeFacetMap(IndicativoNSA._CF_length,
   IndicativoNSA._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoNSA', IndicativoNSA)

# Atomic SimpleTypeDefinition
class MotivoRechazoSolicitudInfRegistroPS (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Motivos de rechazo a solicitud de informacion de registro de Punto de Suministro
			01 - Punto suministro Inexistente
			02 - Inexistencia de contrato regulado previo en vigor
			03 - CUPS no coincide con el CUPS del contrato regulado 
			04 - Numero contrato regulado previo no coincide con el aportado
			05 - Negativa del consumidor
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MotivoRechazoSolicitudInfRegistroPS')
    _Documentation = u'Motivos de rechazo a solicitud de informacion de registro de Punto de Suministro\n\t\t\t01 - Punto suministro Inexistente\n\t\t\t02 - Inexistencia de contrato regulado previo en vigor\n\t\t\t03 - CUPS no coincide con el CUPS del contrato regulado \n\t\t\t04 - Numero contrato regulado previo no coincide con el aportado\n\t\t\t05 - Negativa del consumidor\n\t\t\t'
MotivoRechazoSolicitudInfRegistroPS._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=MotivoRechazoSolicitudInfRegistroPS, enum_prefix=None)
MotivoRechazoSolicitudInfRegistroPS.n01 = MotivoRechazoSolicitudInfRegistroPS._CF_enumeration.addEnumeration(unicode_value=u'01')
MotivoRechazoSolicitudInfRegistroPS.n02 = MotivoRechazoSolicitudInfRegistroPS._CF_enumeration.addEnumeration(unicode_value=u'02')
MotivoRechazoSolicitudInfRegistroPS.n03 = MotivoRechazoSolicitudInfRegistroPS._CF_enumeration.addEnumeration(unicode_value=u'03')
MotivoRechazoSolicitudInfRegistroPS.n04 = MotivoRechazoSolicitudInfRegistroPS._CF_enumeration.addEnumeration(unicode_value=u'04')
MotivoRechazoSolicitudInfRegistroPS.n05 = MotivoRechazoSolicitudInfRegistroPS._CF_enumeration.addEnumeration(unicode_value=u'05')
MotivoRechazoSolicitudInfRegistroPS._InitializeFacetMap(MotivoRechazoSolicitudInfRegistroPS._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'MotivoRechazoSolicitudInfRegistroPS', MotivoRechazoSolicitudInfRegistroPS)

# Atomic SimpleTypeDefinition
class X2 (pyxb.binding.datatypes.string):

    """cadena de dos caracteres"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X2')
    _Documentation = u'cadena de dos caracteres'
X2._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
X2._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X2._InitializeFacetMap(X2._CF_maxLength,
   X2._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X2', X2)

# Atomic SimpleTypeDefinition
class TipoContratoATR (X2):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR')
    _Documentation = None
TipoContratoATR._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', u'TipoContratoATR', TipoContratoATR)

# Atomic SimpleTypeDefinition
class X255 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X255')
    _Documentation = None
X255._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(255L))
X255._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X255._InitializeFacetMap(X255._CF_maxLength,
   X255._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X255', X255)

# Atomic SimpleTypeDefinition
class STD_ANON_3 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_3._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_3, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_3._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
STD_ANON_3._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(8L))
STD_ANON_3._InitializeFacetMap(STD_ANON_3._CF_minInclusive,
   STD_ANON_3._CF_totalDigits,
   STD_ANON_3._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class X45 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X45')
    _Documentation = None
X45._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(45L))
X45._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X45._InitializeFacetMap(X45._CF_maxLength,
   X45._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X45', X45)

# Atomic SimpleTypeDefinition
class X9 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X9')
    _Documentation = None
X9._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(9L))
X9._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X9._InitializeFacetMap(X9._CF_maxLength,
   X9._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X9', X9)

# Atomic SimpleTypeDefinition
class Indicativo (pyxb.binding.datatypes.string):

    """valor de verdad (S o N)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Indicativo')
    _Documentation = u'valor de verdad (S o N)'
Indicativo._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
Indicativo._CF_pattern = pyxb.binding.facets.CF_pattern()
Indicativo._CF_pattern.addPattern(pattern=u'S|N')
Indicativo._InitializeFacetMap(Indicativo._CF_length,
   Indicativo._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'Indicativo', Indicativo)

# Atomic SimpleTypeDefinition
class Decimal3 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal3')
    _Documentation = None
Decimal3._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(3L))
Decimal3._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal3._InitializeFacetMap(Decimal3._CF_totalDigits,
   Decimal3._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal3', Decimal3)

# Atomic SimpleTypeDefinition
class STD_ANON_4 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_4._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_4, value=pyxb.binding.datatypes.integer(0L))
STD_ANON_4._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(9L))
STD_ANON_4._InitializeFacetMap(STD_ANON_4._CF_minInclusive,
   STD_ANON_4._CF_totalDigits)

# Atomic SimpleTypeDefinition
class X25 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X25')
    _Documentation = None
X25._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(25L))
X25._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X25._InitializeFacetMap(X25._CF_maxLength,
   X25._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X25', X25)

# Atomic SimpleTypeDefinition
class STD_ANON_5 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_5._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
STD_ANON_5._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_5._InitializeFacetMap(STD_ANON_5._CF_totalDigits,
   STD_ANON_5._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class EstadoPM (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """  Estado PM Tabla 39 
			 1   Alta
			 2   Baja
			 3   Tramitacion de Alta
			 4   Tramitacion de Baja
			 5   Tramitacion de Modificacion
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'EstadoPM')
    _Documentation = u'  Estado PM Tabla 39 \n\t\t\t 1   Alta\n\t\t\t 2   Baja\n\t\t\t 3   Tramitacion de Alta\n\t\t\t 4   Tramitacion de Baja\n\t\t\t 5   Tramitacion de Modificacion\n\t\t\t'
EstadoPM._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=EstadoPM, enum_prefix=None)
EstadoPM.n1 = EstadoPM._CF_enumeration.addEnumeration(unicode_value=u'1')
EstadoPM.n2 = EstadoPM._CF_enumeration.addEnumeration(unicode_value=u'2')
EstadoPM.n3 = EstadoPM._CF_enumeration.addEnumeration(unicode_value=u'3')
EstadoPM.n4 = EstadoPM._CF_enumeration.addEnumeration(unicode_value=u'4')
EstadoPM.n5 = EstadoPM._CF_enumeration.addEnumeration(unicode_value=u'5')
EstadoPM._InitializeFacetMap(EstadoPM._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'EstadoPM', EstadoPM)

# Atomic SimpleTypeDefinition
class STD_ANON_6 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_6._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_6._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_6._InitializeFacetMap(STD_ANON_6._CF_totalDigits,
   STD_ANON_6._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Decimal13 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal13')
    _Documentation = None
Decimal13._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
Decimal13._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal13._InitializeFacetMap(Decimal13._CF_totalDigits,
   Decimal13._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal13', Decimal13)

# Atomic SimpleTypeDefinition
class Decimal9 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal9')
    _Documentation = None
Decimal9._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(9L))
Decimal9._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal9._InitializeFacetMap(Decimal9._CF_totalDigits,
   Decimal9._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal9', Decimal9)

# Atomic SimpleTypeDefinition
class STD_ANON_7 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_7._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(60L))
STD_ANON_7._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_7._InitializeFacetMap(STD_ANON_7._CF_maxLength,
   STD_ANON_7._CF_minLength)

# Atomic SimpleTypeDefinition
class X3 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X3')
    _Documentation = None
X3._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
X3._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X3._InitializeFacetMap(X3._CF_maxLength,
   X3._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X3', X3)

# Atomic SimpleTypeDefinition
class STD_ANON_8 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_8._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
STD_ANON_8._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_8._InitializeFacetMap(STD_ANON_8._CF_totalDigits,
   STD_ANON_8._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_9 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_9._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(15L))
STD_ANON_9._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_9._InitializeFacetMap(STD_ANON_9._CF_totalDigits,
   STD_ANON_9._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class CodigoDH (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Codigo DH   Tabla 52
			0 Sin Discriminacion
			1 Sin Contador Discriminador
			2 Tarifa 2.0 nocturna o contador con doble tarifa
			3 Con contador triple tarifa sin discriminacion sabados y festivos
			4 Con contador triple tarifa y discriminacion sabados y festivos	
			5 Con contador de quintuple tarifa	
			6 THP
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoDH')
    _Documentation = u'Codigo DH   Tabla 52\n\t\t\t0 Sin Discriminacion\n\t\t\t1 Sin Contador Discriminador\n\t\t\t2 Tarifa 2.0 nocturna o contador con doble tarifa\n\t\t\t3 Con contador triple tarifa sin discriminacion sabados y festivos\n\t\t\t4 Con contador triple tarifa y discriminacion sabados y festivos\t\n\t\t\t5 Con contador de quintuple tarifa\t\n\t\t\t6 THP\n\t\t\t'
CodigoDH._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=CodigoDH, enum_prefix=None)
CodigoDH.n0 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'0')
CodigoDH.n1 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'1')
CodigoDH.n2 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'2')
CodigoDH.n3 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'3')
CodigoDH.n4 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'4')
CodigoDH.n5 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'5')
CodigoDH.n6 = CodigoDH._CF_enumeration.addEnumeration(unicode_value=u'6')
CodigoDH._InitializeFacetMap(CodigoDH._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'CodigoDH', CodigoDH)

# Atomic SimpleTypeDefinition
class Decimal10 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal10')
    _Documentation = None
Decimal10._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(10L))
Decimal10._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal10._InitializeFacetMap(Decimal10._CF_totalDigits,
   Decimal10._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal10', Decimal10)

# Atomic SimpleTypeDefinition
class TipoMoneda (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """
			01	Pesetas
			02	Euros
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda')
    _Documentation = u'\n\t\t\t01\tPesetas\n\t\t\t02\tEuros\n\t\t\t'
TipoMoneda._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoMoneda, enum_prefix=None)
TipoMoneda.n01 = TipoMoneda._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoMoneda.n02 = TipoMoneda._CF_enumeration.addEnumeration(unicode_value=u'02')
TipoMoneda._InitializeFacetMap(TipoMoneda._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoMoneda', TipoMoneda)

# Atomic SimpleTypeDefinition
class MagnitudMedida (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MagnitudMedida')
    _Documentation = None
MagnitudMedida._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=MagnitudMedida, enum_prefix=None)
MagnitudMedida.AE = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'AE')
MagnitudMedida.AS = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'AS')
MagnitudMedida.R1 = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'R1')
MagnitudMedida.R2 = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'R2')
MagnitudMedida.R3 = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'R3')
MagnitudMedida.R4 = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'R4')
MagnitudMedida.PM = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'PM')
MagnitudMedida.EP = MagnitudMedida._CF_enumeration.addEnumeration(unicode_value=u'EP')
MagnitudMedida._InitializeFacetMap(MagnitudMedida._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'MagnitudMedida', MagnitudMedida)

# Atomic SimpleTypeDefinition
class IndicativoNCD (pyxb.binding.datatypes.string):

    """indicativo ICP/Equipo (N no se sabe/ C aportado cliente/ D aportado Distribuidora)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoNCD')
    _Documentation = u'indicativo ICP/Equipo (N no se sabe/ C aportado cliente/ D aportado Distribuidora)'
IndicativoNCD._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoNCD._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoNCD._CF_pattern.addPattern(pattern=u'N|C|D')
IndicativoNCD._InitializeFacetMap(IndicativoNCD._CF_length,
   IndicativoNCD._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoNCD', IndicativoNCD)

# Atomic SimpleTypeDefinition
class TiposEquipoMedida (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """codigo Tipos de Equipos de Medida
			L01	Tipo 1	
			L02	Tipo 2	
			L03	Tipo 3	
			L04	Tipo 4 - 6 per&#237;odos	
			L05	Tipo 4 - horario	
			L06	Tipo 5 - un per&#237;odo	
			L07	Tipo 5 - dos per&#237;odos	
			L08	Tipo 5 - seis per&#237;odos	
			L09	Tipo 5 - horario	
			L10	Tipo 4 - transitorio	
			R00	Sin discriminaci&#243;n Horaria	
			R01	Sin contador discriminador	
			R02	Dos per&#237;odos	
			R03	Tres per&#237;odos, sin discriminaci&#243;n de s&#225;bados y festivos	
			R04	Tres per&#237;odos, con discriminaci&#243;n de s&#225;bados y festivos	
			R05	Cinco per&#237;odos	
			R06	Seis per&#237;odos	
			R07	Siete per&#237;dos
			L00	El que corresponda Reglamentariamente		
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TiposEquipoMedida')
    _Documentation = u'codigo Tipos de Equipos de Medida\n\t\t\tL01\tTipo 1\t\n\t\t\tL02\tTipo 2\t\n\t\t\tL03\tTipo 3\t\n\t\t\tL04\tTipo 4 - 6 per\xedodos\t\n\t\t\tL05\tTipo 4 - horario\t\n\t\t\tL06\tTipo 5 - un per\xedodo\t\n\t\t\tL07\tTipo 5 - dos per\xedodos\t\n\t\t\tL08\tTipo 5 - seis per\xedodos\t\n\t\t\tL09\tTipo 5 - horario\t\n\t\t\tL10\tTipo 4 - transitorio\t\n\t\t\tR00\tSin discriminaci\xf3n Horaria\t\n\t\t\tR01\tSin contador discriminador\t\n\t\t\tR02\tDos per\xedodos\t\n\t\t\tR03\tTres per\xedodos, sin discriminaci\xf3n de s\xe1bados y festivos\t\n\t\t\tR04\tTres per\xedodos, con discriminaci\xf3n de s\xe1bados y festivos\t\n\t\t\tR05\tCinco per\xedodos\t\n\t\t\tR06\tSeis per\xedodos\t\n\t\t\tR07\tSiete per\xeddos\n\t\t\tL00\tEl que corresponda Reglamentariamente\t\t\n\t\t\t'
TiposEquipoMedida._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TiposEquipoMedida, enum_prefix=None)
TiposEquipoMedida.L01 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L01')
TiposEquipoMedida.L02 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L02')
TiposEquipoMedida.L03 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L03')
TiposEquipoMedida.L04 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L04')
TiposEquipoMedida.L05 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L05')
TiposEquipoMedida.L06 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L06')
TiposEquipoMedida.L07 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L07')
TiposEquipoMedida.L08 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L08')
TiposEquipoMedida.L09 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L09')
TiposEquipoMedida.L10 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L10')
TiposEquipoMedida.R00 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R00')
TiposEquipoMedida.R01 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R01')
TiposEquipoMedida.R02 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R02')
TiposEquipoMedida.R03 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R03')
TiposEquipoMedida.R04 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R04')
TiposEquipoMedida.R05 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R05')
TiposEquipoMedida.R06 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R06')
TiposEquipoMedida.R07 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R07')
TiposEquipoMedida.L00 = TiposEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L00')
TiposEquipoMedida._InitializeFacetMap(TiposEquipoMedida._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TiposEquipoMedida', TiposEquipoMedida)

# Atomic SimpleTypeDefinition
class STD_ANON_10 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_10._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_10, value=pyxb.binding.datatypes.integer(0L))
STD_ANON_10._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
STD_ANON_10._InitializeFacetMap(STD_ANON_10._CF_minInclusive,
   STD_ANON_10._CF_totalDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_11 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_11._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_11, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_11._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
STD_ANON_11._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_11._InitializeFacetMap(STD_ANON_11._CF_minInclusive,
   STD_ANON_11._CF_totalDigits,
   STD_ANON_11._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_12 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_12._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_12._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_12._InitializeFacetMap(STD_ANON_12._CF_totalDigits,
   STD_ANON_12._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Energia (pyxb.binding.datatypes.integer):

    """Energia"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Energia')
    _Documentation = u'Energia'
Energia._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
Energia._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Energia._InitializeFacetMap(Energia._CF_totalDigits,
   Energia._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Energia', Energia)

# Atomic SimpleTypeDefinition
class TipoActivacion (pyxb.binding.datatypes.string):

    """S = Activado con las condiciones solicitadas y A = Activado con las condiciones vigentes anteriores a la solicitud"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoActivacion')
    _Documentation = u'S = Activado con las condiciones solicitadas y A = Activado con las condiciones vigentes anteriores a la solicitud'
TipoActivacion._CF_pattern = pyxb.binding.facets.CF_pattern()
TipoActivacion._CF_pattern.addPattern(pattern=u'S|A')
TipoActivacion._InitializeFacetMap(TipoActivacion._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'TipoActivacion', TipoActivacion)

# Atomic SimpleTypeDefinition
class Procedencia (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """10 Telemedida
11 Telemedida corregida
20 TPL
21 TPL corregida
30 Visual
31 Visual corregida
40 Estimada
50 Autolectura
99 Sin lectura"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Procedencia')
    _Documentation = u'10 Telemedida\n11 Telemedida corregida\n20 TPL\n21 TPL corregida\n30 Visual\n31 Visual corregida\n40 Estimada\n50 Autolectura\n99 Sin lectura'
Procedencia._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=Procedencia, enum_prefix=None)
Procedencia.n10 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'10')
Procedencia.n11 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'11')
Procedencia.n20 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'20')
Procedencia.n21 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'21')
Procedencia.n30 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'30')
Procedencia.n31 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'31')
Procedencia.n40 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'40')
Procedencia.n50 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'50')
Procedencia.n99 = Procedencia._CF_enumeration.addEnumeration(unicode_value=u'99')
Procedencia._InitializeFacetMap(Procedencia._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'Procedencia', Procedencia)

# Atomic SimpleTypeDefinition
class TipoAparato (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo Aparato
			BP	BLOQUE PRUEBAS	
			CA	CONTADOR ACTIVA	
			CC	CONTADOR COMBINADO	
			CG	CONTADOR REGISTRADOR	
			CO	CONTACTOR	
			CR	CONTADOR REACTIVA	
			CT	CONTADOR TARIFADOR	
			G	S.V.R.	
			H	U.M.P.	
			IH	INTERRUPTOR HORARIO	
			IP	I.C.P.	
			MO	MODEM	
			P	CONTADOR RPM	
			RG	REGISTRADOR	
			RT	RELE SELECTOR TENSION	
			TA	TARIFADOR	
			TC	TRANSFORMADOR COMBINADO	
			TI	TRANSFORMADOR INTENSIDAD	
			TP	TRNSFORMADOR POTENCIA	
			TT	TRNSFORMADOR DE TENSI&#211;N	
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoAparato')
    _Documentation = u'Tipo Aparato\n\t\t\tBP\tBLOQUE PRUEBAS\t\n\t\t\tCA\tCONTADOR ACTIVA\t\n\t\t\tCC\tCONTADOR COMBINADO\t\n\t\t\tCG\tCONTADOR REGISTRADOR\t\n\t\t\tCO\tCONTACTOR\t\n\t\t\tCR\tCONTADOR REACTIVA\t\n\t\t\tCT\tCONTADOR TARIFADOR\t\n\t\t\tG\tS.V.R.\t\n\t\t\tH\tU.M.P.\t\n\t\t\tIH\tINTERRUPTOR HORARIO\t\n\t\t\tIP\tI.C.P.\t\n\t\t\tMO\tMODEM\t\n\t\t\tP\tCONTADOR RPM\t\n\t\t\tRG\tREGISTRADOR\t\n\t\t\tRT\tRELE SELECTOR TENSION\t\n\t\t\tTA\tTARIFADOR\t\n\t\t\tTC\tTRANSFORMADOR COMBINADO\t\n\t\t\tTI\tTRANSFORMADOR INTENSIDAD\t\n\t\t\tTP\tTRNSFORMADOR POTENCIA\t\n\t\t\tTT\tTRNSFORMADOR DE TENSI\xd3N\t\n\t\t\t'
TipoAparato._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoAparato, enum_prefix=None)
TipoAparato.BP = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'BP')
TipoAparato.CA = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'CA')
TipoAparato.CC = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'CC')
TipoAparato.CG = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'CG')
TipoAparato.CO = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'CO')
TipoAparato.CR = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'CR')
TipoAparato.CT = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'CT')
TipoAparato.G = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'G')
TipoAparato.H = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'H')
TipoAparato.IH = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'IH')
TipoAparato.IP = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'IP')
TipoAparato.MO = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'MO')
TipoAparato.P = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'P')
TipoAparato.RG = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'RG')
TipoAparato.RT = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'RT')
TipoAparato.TA = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'TA')
TipoAparato.TC = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'TC')
TipoAparato.TI = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'TI')
TipoAparato.TP = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'TP')
TipoAparato.TT = TipoAparato._CF_enumeration.addEnumeration(unicode_value=u'TT')
TipoAparato._InitializeFacetMap(TipoAparato._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoAparato', TipoAparato)

# Atomic SimpleTypeDefinition
class TipoPM (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """tipo de punto de medida
			01	Punto de medida tipo 1	
			02	Punto de medida tipo 2	
			03	Punto de medida tipo 3	
			04	Punto de medida tipo 4	
			05	Punto de medida tipo 5	
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoPM')
    _Documentation = u'tipo de punto de medida\n\t\t\t01\tPunto de medida tipo 1\t\n\t\t\t02\tPunto de medida tipo 2\t\n\t\t\t03\tPunto de medida tipo 3\t\n\t\t\t04\tPunto de medida tipo 4\t\n\t\t\t05\tPunto de medida tipo 5\t\n\t\t\t'
TipoPM._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoPM, enum_prefix=None)
TipoPM.n01 = TipoPM._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoPM.n02 = TipoPM._CF_enumeration.addEnumeration(unicode_value=u'02')
TipoPM.n03 = TipoPM._CF_enumeration.addEnumeration(unicode_value=u'03')
TipoPM.n04 = TipoPM._CF_enumeration.addEnumeration(unicode_value=u'04')
TipoPM.n05 = TipoPM._CF_enumeration.addEnumeration(unicode_value=u'05')
TipoPM._InitializeFacetMap(TipoPM._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoPM', TipoPM)

# Atomic SimpleTypeDefinition
class ModoLecturaPM (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """  Modo Lectura Tabla 38
			 1   Lectura Local Manual
			 2   Lectura Local Optoacoplador
			 3   Lectura Local Puerto Serie
			 4   Telemedida Operativa
			 5   Telemedida no Operativa
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ModoLecturaPM')
    _Documentation = u'  Modo Lectura Tabla 38\n\t\t\t 1   Lectura Local Manual\n\t\t\t 2   Lectura Local Optoacoplador\n\t\t\t 3   Lectura Local Puerto Serie\n\t\t\t 4   Telemedida Operativa\n\t\t\t 5   Telemedida no Operativa\n\t\t\t'
ModoLecturaPM._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=ModoLecturaPM, enum_prefix=None)
ModoLecturaPM.n1 = ModoLecturaPM._CF_enumeration.addEnumeration(unicode_value=u'1')
ModoLecturaPM.n2 = ModoLecturaPM._CF_enumeration.addEnumeration(unicode_value=u'2')
ModoLecturaPM.n3 = ModoLecturaPM._CF_enumeration.addEnumeration(unicode_value=u'3')
ModoLecturaPM.n4 = ModoLecturaPM._CF_enumeration.addEnumeration(unicode_value=u'4')
ModoLecturaPM.n5 = ModoLecturaPM._CF_enumeration.addEnumeration(unicode_value=u'5')
ModoLecturaPM._InitializeFacetMap(ModoLecturaPM._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'ModoLecturaPM', ModoLecturaPM)

# Atomic SimpleTypeDefinition
class STD_ANON_13 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_13._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(26L))
STD_ANON_13._InitializeFacetMap(STD_ANON_13._CF_maxLength)

# Atomic SimpleTypeDefinition
class X1 (pyxb.binding.datatypes.string):

    """cadena de un caracter"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X1')
    _Documentation = u'cadena de un caracter'
X1._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X1._InitializeFacetMap(X1._CF_length)
Namespace.addCategoryObject('typeBinding', u'X1', X1)

# Atomic SimpleTypeDefinition
class AnomaliaMedida (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """codigo anomalia Medidas - Activacion
			01	Punto de Medida Inaccesible
			02	Punto de Medida Ilocalizable
			03	Presunto fraude
			04	Registrador apagado
			05	Registrador no comunica
			99	Otras anomalias
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'AnomaliaMedida')
    _Documentation = u'codigo anomalia Medidas - Activacion\n\t\t\t01\tPunto de Medida Inaccesible\n\t\t\t02\tPunto de Medida Ilocalizable\n\t\t\t03\tPresunto fraude\n\t\t\t04\tRegistrador apagado\n\t\t\t05\tRegistrador no comunica\n\t\t\t99\tOtras anomalias\n\t\t\t'
AnomaliaMedida._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=AnomaliaMedida, enum_prefix=None)
AnomaliaMedida.n01 = AnomaliaMedida._CF_enumeration.addEnumeration(unicode_value=u'01')
AnomaliaMedida.n02 = AnomaliaMedida._CF_enumeration.addEnumeration(unicode_value=u'02')
AnomaliaMedida.n03 = AnomaliaMedida._CF_enumeration.addEnumeration(unicode_value=u'03')
AnomaliaMedida.n04 = AnomaliaMedida._CF_enumeration.addEnumeration(unicode_value=u'04')
AnomaliaMedida.n05 = AnomaliaMedida._CF_enumeration.addEnumeration(unicode_value=u'05')
AnomaliaMedida.n99 = AnomaliaMedida._CF_enumeration.addEnumeration(unicode_value=u'99')
AnomaliaMedida._InitializeFacetMap(AnomaliaMedida._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'AnomaliaMedida', AnomaliaMedida)

# Atomic SimpleTypeDefinition
class TiposDocumentacion (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipos de Documentaci&#243;n
			01	CIE
			02	Acta de Puesta en Marcha
			03	Acta de Inspecci&#243;n
			04	Reclamaci&#243;n
			05	Respuesta a reclamaci&#243;n
			06	Facturas
			07	Otra documentaci&#243;n del cliente
			08	Otros			
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TiposDocumentacion')
    _Documentation = u'Tipos de Documentaci\xf3n\n\t\t\t01\tCIE\n\t\t\t02\tActa de Puesta en Marcha\n\t\t\t03\tActa de Inspecci\xf3n\n\t\t\t04\tReclamaci\xf3n\n\t\t\t05\tRespuesta a reclamaci\xf3n\n\t\t\t06\tFacturas\n\t\t\t07\tOtra documentaci\xf3n del cliente\n\t\t\t08\tOtros\t\t\t\n\t\t\t'
TiposDocumentacion._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TiposDocumentacion, enum_prefix=None)
TiposDocumentacion.n01 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'01')
TiposDocumentacion.n02 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'02')
TiposDocumentacion.n03 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'03')
TiposDocumentacion.n04 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'04')
TiposDocumentacion.n05 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'05')
TiposDocumentacion.n06 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'06')
TiposDocumentacion.n07 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'07')
TiposDocumentacion.n08 = TiposDocumentacion._CF_enumeration.addEnumeration(unicode_value=u'08')
TiposDocumentacion._InitializeFacetMap(TiposDocumentacion._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TiposDocumentacion', TiposDocumentacion)

# Atomic SimpleTypeDefinition
class Decimal5 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal5')
    _Documentation = None
Decimal5._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(5L))
Decimal5._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal5._InitializeFacetMap(Decimal5._CF_totalDigits,
   Decimal5._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal5', Decimal5)

# Atomic SimpleTypeDefinition
class CodigoRegistro (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoRegistro')
    _Documentation = None
CodigoRegistro._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
CodigoRegistro._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
CodigoRegistro._InitializeFacetMap(CodigoRegistro._CF_maxLength,
   CodigoRegistro._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'CodigoRegistro', CodigoRegistro)

# Atomic SimpleTypeDefinition
class STD_ANON_14 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_14._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_14, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_14._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
STD_ANON_14._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(8L))
STD_ANON_14._InitializeFacetMap(STD_ANON_14._CF_minInclusive,
   STD_ANON_14._CF_totalDigits,
   STD_ANON_14._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_15 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_15._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(17L))
STD_ANON_15._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_15._InitializeFacetMap(STD_ANON_15._CF_maxLength,
   STD_ANON_15._CF_minLength)

# Atomic SimpleTypeDefinition
class STD_ANON_16 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_16._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_16, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_16._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(6L))
STD_ANON_16._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_16._InitializeFacetMap(STD_ANON_16._CF_minInclusive,
   STD_ANON_16._CF_totalDigits,
   STD_ANON_16._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class X5 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X5')
    _Documentation = None
X5._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(5L))
X5._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X5._InitializeFacetMap(X5._CF_maxLength,
   X5._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X5', X5)

# Atomic SimpleTypeDefinition
class TipoFacturacionATR (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo Facturacion ATR Tabla 105
			1-Regular (Periodo completo)
			2-Irregular (Periodo incompleto)
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoFacturacionATR')
    _Documentation = u'Tipo Facturacion ATR Tabla 105\n\t\t\t1-Regular (Periodo completo)\n\t\t\t2-Irregular (Periodo incompleto)\n\t\t\t'
TipoFacturacionATR._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoFacturacionATR, enum_prefix=None)
TipoFacturacionATR.n1 = TipoFacturacionATR._CF_enumeration.addEnumeration(unicode_value=u'1')
TipoFacturacionATR.n2 = TipoFacturacionATR._CF_enumeration.addEnumeration(unicode_value=u'2')
TipoFacturacionATR._InitializeFacetMap(TipoFacturacionATR._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoFacturacionATR', TipoFacturacionATR)

# Atomic SimpleTypeDefinition
class Decimal4 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal4')
    _Documentation = None
Decimal4._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(4L))
Decimal4._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal4._InitializeFacetMap(Decimal4._CF_totalDigits,
   Decimal4._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal4', Decimal4)

# Atomic SimpleTypeDefinition
class STD_ANON_17 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_17._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_17, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_17._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
STD_ANON_17._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_17._InitializeFacetMap(STD_ANON_17._CF_minInclusive,
   STD_ANON_17._CF_totalDigits,
   STD_ANON_17._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class DecimalS12V3 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DecimalS12V3')
    _Documentation = None
DecimalS12V3._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(15L))
DecimalS12V3._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
DecimalS12V3._InitializeFacetMap(DecimalS12V3._CF_totalDigits,
   DecimalS12V3._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'DecimalS12V3', DecimalS12V3)

# Atomic SimpleTypeDefinition
class Decimal12 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal12')
    _Documentation = None
Decimal12._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
Decimal12._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal12._InitializeFacetMap(Decimal12._CF_totalDigits,
   Decimal12._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal12', Decimal12)

# Atomic SimpleTypeDefinition
class CodigoContrato (Decimal12):

    """codigo contrato ATR"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoContrato')
    _Documentation = u'codigo contrato ATR'
CodigoContrato._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', u'CodigoContrato', CodigoContrato)

# Atomic SimpleTypeDefinition
class InstalacionICP (pyxb.binding.datatypes.integer, pyxb.binding.basis.enumeration_mixin):

    """instalacion y regimen del ICP
			1 - instalado y propiedad del cliente 
			2 - instalado en regimen de alquiler
			3 - no instalado
			4 - desconocido
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'InstalacionICP')
    _Documentation = u'instalacion y regimen del ICP\n\t\t\t1 - instalado y propiedad del cliente \n\t\t\t2 - instalado en regimen de alquiler\n\t\t\t3 - no instalado\n\t\t\t4 - desconocido\n\t\t\t'
InstalacionICP._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=InstalacionICP, enum_prefix=None)
InstalacionICP._CF_enumeration.addEnumeration(unicode_value=u'1')
InstalacionICP._CF_enumeration.addEnumeration(unicode_value=u'2')
InstalacionICP._CF_enumeration.addEnumeration(unicode_value=u'3')
InstalacionICP._CF_enumeration.addEnumeration(unicode_value=u'4')
InstalacionICP._InitializeFacetMap(InstalacionICP._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'InstalacionICP', InstalacionICP)

# Atomic SimpleTypeDefinition
class X120 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X120')
    _Documentation = None
X120._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(120L))
X120._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X120._InitializeFacetMap(X120._CF_maxLength,
   X120._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X120', X120)

# Atomic SimpleTypeDefinition
class IndicativoYCD (pyxb.binding.datatypes.string):

    """indicativo equipo medida (Y Ya instalado/ C Cliente Instala/ D Distribuidora Instala)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoYCD')
    _Documentation = u'indicativo equipo medida (Y Ya instalado/ C Cliente Instala/ D Distribuidora Instala)'
IndicativoYCD._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoYCD._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoYCD._CF_pattern.addPattern(pattern=u'Y|C|D')
IndicativoYCD._InitializeFacetMap(IndicativoYCD._CF_length,
   IndicativoYCD._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoYCD', IndicativoYCD)

# Atomic SimpleTypeDefinition
class STD_ANON_18 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_18._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_18, value=pyxb.binding.datatypes.integer(0L))
STD_ANON_18._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
STD_ANON_18._InitializeFacetMap(STD_ANON_18._CF_minInclusive,
   STD_ANON_18._CF_totalDigits)

# Atomic SimpleTypeDefinition
class TipoDHActiva (pyxb.binding.datatypes.string):

    """tipo de discriminacion horaria activa"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoDHActiva')
    _Documentation = u'tipo de discriminacion horaria activa'
TipoDHActiva._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
TipoDHActiva._InitializeFacetMap(TipoDHActiva._CF_length)
Namespace.addCategoryObject('typeBinding', u'TipoDHActiva', TipoDHActiva)

# Atomic SimpleTypeDefinition
class STD_ANON_19 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_19._CF_pattern = pyxb.binding.facets.CF_pattern()
STD_ANON_19._CF_pattern.addPattern(pattern=u'[0-9]{2}|[*]{2}')
STD_ANON_19._InitializeFacetMap(STD_ANON_19._CF_pattern)

# Atomic SimpleTypeDefinition
class STD_ANON_20 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_20._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
STD_ANON_20._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_20._InitializeFacetMap(STD_ANON_20._CF_totalDigits,
   STD_ANON_20._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class TiposSuministro (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipos de Suministro
			AL	Almac&#233;n
			AP	Alumbrado publico
			AS	Ascensores
			AT	Antena Telefonia Movil
			BA	Bateria de acumuladores
			CM	Centro de maniobra y control
			EA	Escalera-Ascensor
			ES	Escalera
			FT	Fabrica y Talleres sin Riesgo Especifico
			FV	Inst.Fotovoltaica
			GA	Garaje
			GB	Grupo Bombeo, Riego por Goteo
			HP	Loc.H&#250;medos con Riesgo de Corrosi&#243;n o Polv.
			IN	Nave industrial
			IT	Instalaci&#243;n Temporal en Emplazam.Abierto
			KC	Kioscos/cabinas tfno
			LB	Locales a Baja Temperatura
			LC	Local comercial
			OF	Oficina
			PC	Publica concurrenc&#237;a
			RA	Refugio o Albergue Agricola
			RT	Repetidor de Televisi&#243;n
			SA	Servicios Auxiliares
			SC	Sumtro complementario
			SE	Sumtro eventual
			SG	Servicio general vivienda
			SM	Sem&#225;foro
			SO	Sumtro obras
			TL	Telecomunicaciones
			TR	Trastero
			UF	Uso finca
			UV	Usos varios
			VI	Vivienda			
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TiposSuministro')
    _Documentation = u'Tipos de Suministro\n\t\t\tAL\tAlmac\xe9n\n\t\t\tAP\tAlumbrado publico\n\t\t\tAS\tAscensores\n\t\t\tAT\tAntena Telefonia Movil\n\t\t\tBA\tBateria de acumuladores\n\t\t\tCM\tCentro de maniobra y control\n\t\t\tEA\tEscalera-Ascensor\n\t\t\tES\tEscalera\n\t\t\tFT\tFabrica y Talleres sin Riesgo Especifico\n\t\t\tFV\tInst.Fotovoltaica\n\t\t\tGA\tGaraje\n\t\t\tGB\tGrupo Bombeo, Riego por Goteo\n\t\t\tHP\tLoc.H\xfamedos con Riesgo de Corrosi\xf3n o Polv.\n\t\t\tIN\tNave industrial\n\t\t\tIT\tInstalaci\xf3n Temporal en Emplazam.Abierto\n\t\t\tKC\tKioscos/cabinas tfno\n\t\t\tLB\tLocales a Baja Temperatura\n\t\t\tLC\tLocal comercial\n\t\t\tOF\tOficina\n\t\t\tPC\tPublica concurrenc\xeda\n\t\t\tRA\tRefugio o Albergue Agricola\n\t\t\tRT\tRepetidor de Televisi\xf3n\n\t\t\tSA\tServicios Auxiliares\n\t\t\tSC\tSumtro complementario\n\t\t\tSE\tSumtro eventual\n\t\t\tSG\tServicio general vivienda\n\t\t\tSM\tSem\xe1foro\n\t\t\tSO\tSumtro obras\n\t\t\tTL\tTelecomunicaciones\n\t\t\tTR\tTrastero\n\t\t\tUF\tUso finca\n\t\t\tUV\tUsos varios\n\t\t\tVI\tVivienda\t\t\t\n\t\t\t'
TiposSuministro._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TiposSuministro, enum_prefix=None)
TiposSuministro.AL = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'AL')
TiposSuministro.AP = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'AP')
TiposSuministro.AS = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'AS')
TiposSuministro.AT = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'AT')
TiposSuministro.BA = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'BA')
TiposSuministro.CM = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'CM')
TiposSuministro.EA = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'EA')
TiposSuministro.ES = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'ES')
TiposSuministro.FT = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'FT')
TiposSuministro.FV = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'FV')
TiposSuministro.GA = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'GA')
TiposSuministro.GB = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'GB')
TiposSuministro.HP = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'HP')
TiposSuministro.IN = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'IN')
TiposSuministro.IT = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'IT')
TiposSuministro.KC = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'KC')
TiposSuministro.LB = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'LB')
TiposSuministro.LC = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'LC')
TiposSuministro.OF = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'OF')
TiposSuministro.PC = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'PC')
TiposSuministro.RA = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'RA')
TiposSuministro.RT = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'RT')
TiposSuministro.SA = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'SA')
TiposSuministro.SC = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'SC')
TiposSuministro.SE = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'SE')
TiposSuministro.SG = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'SG')
TiposSuministro.SM = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'SM')
TiposSuministro.SO = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'SO')
TiposSuministro.TL = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'TL')
TiposSuministro.TR = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'TR')
TiposSuministro.UF = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'UF')
TiposSuministro.UV = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'UV')
TiposSuministro.VI = TiposSuministro._CF_enumeration.addEnumeration(unicode_value=u'VI')
TiposSuministro._InitializeFacetMap(TiposSuministro._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TiposSuministro', TiposSuministro)

# Atomic SimpleTypeDefinition
class STD_ANON_21 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_21._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(60L))
STD_ANON_21._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_21._InitializeFacetMap(STD_ANON_21._CF_maxLength,
   STD_ANON_21._CF_minLength)

# Atomic SimpleTypeDefinition
class DecimalS10V2 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DecimalS10V2')
    _Documentation = None
DecimalS10V2._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
DecimalS10V2._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
DecimalS10V2._InitializeFacetMap(DecimalS10V2._CF_totalDigits,
   DecimalS10V2._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'DecimalS10V2', DecimalS10V2)

# Atomic SimpleTypeDefinition
class Tarifa (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """tipo Tarifa  
			001	2.0.A	
			002	2.0.N.A 	
			003	3.0A	
			004	2.0DHA					
			005	2.1A
			006	2.1DHA
			011	3.1A	
			012	6.1	
			013	6.2	
			014	6.3	
			015	6.4	
			016	6.5
			027	1.2.P	1.2.P	GRAL. C.U. 36 A 72,5 KV PEAJES
			028	3.0.P	3.0.P	B.T. PEAJES GRAL.UT. NORMAL
			029	4.0.P	4.0.P	B.T. PEAJES GRAL.LARGA UT.
			030	B.0.P	B.0.P	ALUMBRADO PUBLICO PEAJES
			031	B6.4	B6.4	PEAJE AT IMPORTACION  145 KV
			032	D.1.P	D.1.P	A.T. DISTRIB.PEAJ.36KV
			033	D.2.P	D.2.P	A.T. DISTRIB.PEAJ.36-72,5KV
			034	D.3.P	D.3.P	A.T. DISTRIB.PEAJ.72,5-145KV
			035	D.4.P	D.4.P	A.T. DISTRIB.PEAJ.145KV
			036	GAT1P	GAT1P	GRAL. AT 1 KV A . 14 KV PEAJES
			037	GAT2P	GAT2P	GRAL. AT 14 KV A . 36 KV PEAJE
			038	GAT3P	GAT3P	GRAL. AT 36 A. 72,5 KV PEAJES
			039	GAT4P	GAT4P	GRAL. AT 72,5 A . 145 KV PEAJE
			040	GAT5P	GAT5P	GRAL. AT .145 KV. PEAJES
			041	R.0.P	R.0.P	B.T. PEAJES RIEGOS AGRICOLAS
			042	T.1.P	T.1.P	A.T.TRACC.PEAJ . 36 KV
			043	T.2.P	T.2.P	A.T.TRACC.PEAJ. 36,72,5 KV  
			044	T.3.P	T.3.P	A.T.TRACC.PEAJ. 72,5 KV
			045	TAGA1	TAGA1	GRAL AT  PEAJE TRAMO 1 TENSION
			046	TAGA2	TAGA2	GRAL AT  PEAJE TRAMO 2 TENSION
			047	TAGA3	TAGA3	GRAL AT  PEAJE TRAMO 3 TENSION
			048	TAGA4	TAGA4	GRAL AT  PEAJE TRAMO 4 TENSION
			049	TAGA5	TAGA5	GRAL AT  PEAJE TRAMO 5 TENSION
			050	TAGA6	TAGA6	TARIFA CONEXION INTERNACIONAL
			101	T.1	
			102	T.2	
			103	T.3	
			110	1.0	
			111	R.1	
			112	R.2	
			113	R.3	
			120	2.0	
			122	G4, 36 kV  T  72,5 kV	
			123	G4, 72,5 kV , T , 145 kV	
			124	G4, T . 145 kV	
			130	2.0N	
			131	D.1	
			132	D.2	
			133	D.3	
			134	D.4	
			141	T.H.P.  T.36kV	
			142	T.H.P.  36 kV . T . 72,5 kV	
			143	T.H.P.  72,5 kV  T .145 kV	
			144	T.H.P.  T . 145 kV	
			299	PEAJE TAJO.SEGURA	
			300	TRASVASE TAJO SEGURA	
			310	3.0	
			410	4.0	
			500	EMPLEADOS	
			501	CONSUMOS PROPIOS	
			502	CONSUMOS OTRAS ACTIVIDADES	
			503	CONSUMOS GRATUITOS	
			504	CONCESIONES ADMINISTRATIVAS	
			505	CONCESIONES ADMVAS. TAJO.SEGURA	
			510	B.0	
			520	R.0	
			610	1.1	
			620	1.1 INT	
			640	2.1	
			650	2.1 INT	
			660	3.1	
			670	3.1 INT	
			710	1.2		
			720	1.2 INT	
			730	2.2	
			740	2.2 INT	
			750	3.2	
			760	3.2 INT	
			810	1.3	
			820	1.3 INT	
			840	2.3	
			850	2.3 INT	
			860	3.3	
			870	3.3 INT	
			901   Tf. Peaje BT 2.0  Modo 2
			902   Tf. Peaje BT 2.0N Modo 2
			910	1.4	
			920	1.4 INT	
			940	2.4	
			950	2.4 INT	
			960	3.4	
			970	3.4 INT	
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Tarifa')
    _Documentation = u'tipo Tarifa  \n\t\t\t001\t2.0.A\t\n\t\t\t002\t2.0.N.A \t\n\t\t\t003\t3.0A\t\n\t\t\t004\t2.0DHA\t\t\t\t\t\n\t\t\t005\t2.1A\n\t\t\t006\t2.1DHA\n\t\t\t011\t3.1A\t\n\t\t\t012\t6.1\t\n\t\t\t013\t6.2\t\n\t\t\t014\t6.3\t\n\t\t\t015\t6.4\t\n\t\t\t016\t6.5\n\t\t\t027\t1.2.P\t1.2.P\tGRAL. C.U. 36 A 72,5 KV PEAJES\n\t\t\t028\t3.0.P\t3.0.P\tB.T. PEAJES GRAL.UT. NORMAL\n\t\t\t029\t4.0.P\t4.0.P\tB.T. PEAJES GRAL.LARGA UT.\n\t\t\t030\tB.0.P\tB.0.P\tALUMBRADO PUBLICO PEAJES\n\t\t\t031\tB6.4\tB6.4\tPEAJE AT IMPORTACION  145 KV\n\t\t\t032\tD.1.P\tD.1.P\tA.T. DISTRIB.PEAJ.36KV\n\t\t\t033\tD.2.P\tD.2.P\tA.T. DISTRIB.PEAJ.36-72,5KV\n\t\t\t034\tD.3.P\tD.3.P\tA.T. DISTRIB.PEAJ.72,5-145KV\n\t\t\t035\tD.4.P\tD.4.P\tA.T. DISTRIB.PEAJ.145KV\n\t\t\t036\tGAT1P\tGAT1P\tGRAL. AT 1 KV A . 14 KV PEAJES\n\t\t\t037\tGAT2P\tGAT2P\tGRAL. AT 14 KV A . 36 KV PEAJE\n\t\t\t038\tGAT3P\tGAT3P\tGRAL. AT 36 A. 72,5 KV PEAJES\n\t\t\t039\tGAT4P\tGAT4P\tGRAL. AT 72,5 A . 145 KV PEAJE\n\t\t\t040\tGAT5P\tGAT5P\tGRAL. AT .145 KV. PEAJES\n\t\t\t041\tR.0.P\tR.0.P\tB.T. PEAJES RIEGOS AGRICOLAS\n\t\t\t042\tT.1.P\tT.1.P\tA.T.TRACC.PEAJ . 36 KV\n\t\t\t043\tT.2.P\tT.2.P\tA.T.TRACC.PEAJ. 36,72,5 KV  \n\t\t\t044\tT.3.P\tT.3.P\tA.T.TRACC.PEAJ. 72,5 KV\n\t\t\t045\tTAGA1\tTAGA1\tGRAL AT  PEAJE TRAMO 1 TENSION\n\t\t\t046\tTAGA2\tTAGA2\tGRAL AT  PEAJE TRAMO 2 TENSION\n\t\t\t047\tTAGA3\tTAGA3\tGRAL AT  PEAJE TRAMO 3 TENSION\n\t\t\t048\tTAGA4\tTAGA4\tGRAL AT  PEAJE TRAMO 4 TENSION\n\t\t\t049\tTAGA5\tTAGA5\tGRAL AT  PEAJE TRAMO 5 TENSION\n\t\t\t050\tTAGA6\tTAGA6\tTARIFA CONEXION INTERNACIONAL\n\t\t\t101\tT.1\t\n\t\t\t102\tT.2\t\n\t\t\t103\tT.3\t\n\t\t\t110\t1.0\t\n\t\t\t111\tR.1\t\n\t\t\t112\tR.2\t\n\t\t\t113\tR.3\t\n\t\t\t120\t2.0\t\n\t\t\t122\tG4, 36 kV  T  72,5 kV\t\n\t\t\t123\tG4, 72,5 kV , T , 145 kV\t\n\t\t\t124\tG4, T . 145 kV\t\n\t\t\t130\t2.0N\t\n\t\t\t131\tD.1\t\n\t\t\t132\tD.2\t\n\t\t\t133\tD.3\t\n\t\t\t134\tD.4\t\n\t\t\t141\tT.H.P.  T.36kV\t\n\t\t\t142\tT.H.P.  36 kV . T . 72,5 kV\t\n\t\t\t143\tT.H.P.  72,5 kV  T .145 kV\t\n\t\t\t144\tT.H.P.  T . 145 kV\t\n\t\t\t299\tPEAJE TAJO.SEGURA\t\n\t\t\t300\tTRASVASE TAJO SEGURA\t\n\t\t\t310\t3.0\t\n\t\t\t410\t4.0\t\n\t\t\t500\tEMPLEADOS\t\n\t\t\t501\tCONSUMOS PROPIOS\t\n\t\t\t502\tCONSUMOS OTRAS ACTIVIDADES\t\n\t\t\t503\tCONSUMOS GRATUITOS\t\n\t\t\t504\tCONCESIONES ADMINISTRATIVAS\t\n\t\t\t505\tCONCESIONES ADMVAS. TAJO.SEGURA\t\n\t\t\t510\tB.0\t\n\t\t\t520\tR.0\t\n\t\t\t610\t1.1\t\n\t\t\t620\t1.1 INT\t\n\t\t\t640\t2.1\t\n\t\t\t650\t2.1 INT\t\n\t\t\t660\t3.1\t\n\t\t\t670\t3.1 INT\t\n\t\t\t710\t1.2\t\t\n\t\t\t720\t1.2 INT\t\n\t\t\t730\t2.2\t\n\t\t\t740\t2.2 INT\t\n\t\t\t750\t3.2\t\n\t\t\t760\t3.2 INT\t\n\t\t\t810\t1.3\t\n\t\t\t820\t1.3 INT\t\n\t\t\t840\t2.3\t\n\t\t\t850\t2.3 INT\t\n\t\t\t860\t3.3\t\n\t\t\t870\t3.3 INT\t\n\t\t\t901   Tf. Peaje BT 2.0  Modo 2\n\t\t\t902   Tf. Peaje BT 2.0N Modo 2\n\t\t\t910\t1.4\t\n\t\t\t920\t1.4 INT\t\n\t\t\t940\t2.4\t\n\t\t\t950\t2.4 INT\t\n\t\t\t960\t3.4\t\n\t\t\t970\t3.4 INT\t\n\t\t\t'
Tarifa._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=Tarifa, enum_prefix=None)
Tarifa.n001 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'001')
Tarifa.n002 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'002')
Tarifa.n003 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'003')
Tarifa.n004 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'004')
Tarifa.n005 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'005')
Tarifa.n006 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'006')
Tarifa.n011 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'011')
Tarifa.n012 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'012')
Tarifa.n013 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'013')
Tarifa.n014 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'014')
Tarifa.n015 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'015')
Tarifa.n016 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'016')
Tarifa.n027 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'027')
Tarifa.n028 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'028')
Tarifa.n029 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'029')
Tarifa.n030 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'030')
Tarifa.n031 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'031')
Tarifa.n032 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'032')
Tarifa.n033 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'033')
Tarifa.n034 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'034')
Tarifa.n035 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'035')
Tarifa.n036 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'036')
Tarifa.n037 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'037')
Tarifa.n038 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'038')
Tarifa.n039 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'039')
Tarifa.n040 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'040')
Tarifa.n041 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'041')
Tarifa.n042 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'042')
Tarifa.n043 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'043')
Tarifa.n044 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'044')
Tarifa.n045 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'045')
Tarifa.n046 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'046')
Tarifa.n047 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'047')
Tarifa.n048 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'048')
Tarifa.n049 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'049')
Tarifa.n050 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'050')
Tarifa.n101 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'101')
Tarifa.n102 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'102')
Tarifa.n103 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'103')
Tarifa.n110 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'110')
Tarifa.n111 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'111')
Tarifa.n112 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'112')
Tarifa.n113 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'113')
Tarifa.n120 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'120')
Tarifa.n122 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'122')
Tarifa.n123 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'123')
Tarifa.n124 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'124')
Tarifa.n130 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'130')
Tarifa.n131 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'131')
Tarifa.n132 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'132')
Tarifa.n133 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'133')
Tarifa.n134 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'134')
Tarifa.n141 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'141')
Tarifa.n142 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'142')
Tarifa.n143 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'143')
Tarifa.n144 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'144')
Tarifa.n299 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'299')
Tarifa.n300 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'300')
Tarifa.n310 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'310')
Tarifa.n410 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'410')
Tarifa.n500 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'500')
Tarifa.n501 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'501')
Tarifa.n502 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'502')
Tarifa.n503 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'503')
Tarifa.n504 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'504')
Tarifa.n505 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'505')
Tarifa.n510 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'510')
Tarifa.n520 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'520')
Tarifa.n610 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'610')
Tarifa.n620 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'620')
Tarifa.n640 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'640')
Tarifa.n650 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'650')
Tarifa.n660 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'660')
Tarifa.n670 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'670')
Tarifa.n710 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'710')
Tarifa.n720 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'720')
Tarifa.n730 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'730')
Tarifa.n740 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'740')
Tarifa.n750 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'750')
Tarifa.n760 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'760')
Tarifa.n810 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'810')
Tarifa.n820 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'820')
Tarifa.n840 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'840')
Tarifa.n850 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'850')
Tarifa.n860 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'860')
Tarifa.n870 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'870')
Tarifa.n901 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'901')
Tarifa.n902 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'902')
Tarifa.n910 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'910')
Tarifa.n920 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'920')
Tarifa.n940 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'940')
Tarifa.n950 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'950')
Tarifa.n960 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'960')
Tarifa.n970 = Tarifa._CF_enumeration.addEnumeration(unicode_value=u'970')
Tarifa._InitializeFacetMap(Tarifa._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'Tarifa', Tarifa)

# Atomic SimpleTypeDefinition
class MotivoBaja (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Motivo de baja
			01	CESE DEFINITIVO DE SUMINISTRO
			02	RESCISI&#211;N DE CONTRATO DE ENERG&#205;A
			03	CORTE POR IMPAGO
			04	BAJA POR IMPAGO
			05	BAJA SIN DESCONEXION DEFINITIVA DE INSTALACIONES
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MotivoBaja')
    _Documentation = u'Motivo de baja\n\t\t\t01\tCESE DEFINITIVO DE SUMINISTRO\n\t\t\t02\tRESCISI\xd3N DE CONTRATO DE ENERG\xcdA\n\t\t\t03\tCORTE POR IMPAGO\n\t\t\t04\tBAJA POR IMPAGO\n\t\t\t05\tBAJA SIN DESCONEXION DEFINITIVA DE INSTALACIONES\n\t\t\t'
MotivoBaja._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=MotivoBaja, enum_prefix=None)
MotivoBaja.n01 = MotivoBaja._CF_enumeration.addEnumeration(unicode_value=u'01')
MotivoBaja.n02 = MotivoBaja._CF_enumeration.addEnumeration(unicode_value=u'02')
MotivoBaja.n03 = MotivoBaja._CF_enumeration.addEnumeration(unicode_value=u'03')
MotivoBaja.n04 = MotivoBaja._CF_enumeration.addEnumeration(unicode_value=u'04')
MotivoBaja.n05 = MotivoBaja._CF_enumeration.addEnumeration(unicode_value=u'05')
MotivoBaja._InitializeFacetMap(MotivoBaja._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'MotivoBaja', MotivoBaja)

# Atomic SimpleTypeDefinition
class EstadoTelefono (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Estado Telefono Tabla 41
			1	CORRECTO	
			2	NO PROBADO	
			3	L&#205;NEA TELEF. FUERA SERVICIO	
			4	M&#211;DEM NO ENLAZA	
			5	REGISTRADOR DESPROGRAMADO	
			6	FALLA LA DIRE DE ENLACE	
			7	FALLA EL PTO Y CLAVE MEDIDA	
			8	EL REGISTRAD O MIDE CEROS	
			9	OTRAS	
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono')
    _Documentation = u'Estado Telefono Tabla 41\n\t\t\t1\tCORRECTO\t\n\t\t\t2\tNO PROBADO\t\n\t\t\t3\tL\xcdNEA TELEF. FUERA SERVICIO\t\n\t\t\t4\tM\xd3DEM NO ENLAZA\t\n\t\t\t5\tREGISTRADOR DESPROGRAMADO\t\n\t\t\t6\tFALLA LA DIRE DE ENLACE\t\n\t\t\t7\tFALLA EL PTO Y CLAVE MEDIDA\t\n\t\t\t8\tEL REGISTRAD O MIDE CEROS\t\n\t\t\t9\tOTRAS\t\n\t\t\t'
EstadoTelefono._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=EstadoTelefono, enum_prefix=None)
EstadoTelefono.n1 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'1')
EstadoTelefono.n2 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'2')
EstadoTelefono.n3 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'3')
EstadoTelefono.n4 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'4')
EstadoTelefono.n5 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'5')
EstadoTelefono.n6 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'6')
EstadoTelefono.n7 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'7')
EstadoTelefono.n8 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'8')
EstadoTelefono.n9 = EstadoTelefono._CF_enumeration.addEnumeration(unicode_value=u'9')
EstadoTelefono._InitializeFacetMap(EstadoTelefono._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'EstadoTelefono', EstadoTelefono)

# Atomic SimpleTypeDefinition
class TipoVia (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo de Identificador de los datos del usuario
			AC	ACCESO
			AF	AFUERAS
			AG	AGRUPACI&#211;N
			AL	ALAMEDA
			AR	ARRABAL
			AU	AUTOP/AUTOV&#205;A
			AV	AVENIDA
			BC	BARRANCO
			BD	BARRIADA
			BL	BLOQUE
			BO	BARRIO
			CA	COLONIA
			CF	CALLEJ&#211;N
			CI	CARRIL
			CL	CALLE
			CM	COMPLEJO
			CN	CAMINO
			CO	COOPERATIVA
			CR	CARRETERA
			CS	CASA
			CT	CUESTA
			DI	DISEMINADO EXTRARRADIO
			ED	EDIFICIO
			EN	ENTRADA
			FC	FINCA
			FI	FICTICIO
			GL	GLORIETA
			GR	GRUPO
			MA	MAS&#205;A
			MU	MUELLE
			MZ	MANZANA
			NU	NUCLEO
			PA	PARQUE
			PB	POBLADO
			PD	PARTIDA
			PE	PASEO
			PI	POL.INDUSTRIAL
			PJ	PARAJE
			PL	PANTALAN
			PO	POL&#205;GONO
			PQ	PARQUE
			PR	PROLONGACI&#211;N
			PS	PASAJE
			PT	PLAZOLETA
			PY	PLAYA
			PZ	PLAZA
			RA	RAMBLA
			RD	RONDA
			RS	RESIDENCIAL
			SD	SENDA
			TR	TRAVES&#205;A
			UR	URBANIZACI&#211;N
			VI	VIAL
			ZN	ZONA
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoVia')
    _Documentation = u'Tipo de Identificador de los datos del usuario\n\t\t\tAC\tACCESO\n\t\t\tAF\tAFUERAS\n\t\t\tAG\tAGRUPACI\xd3N\n\t\t\tAL\tALAMEDA\n\t\t\tAR\tARRABAL\n\t\t\tAU\tAUTOP/AUTOV\xcdA\n\t\t\tAV\tAVENIDA\n\t\t\tBC\tBARRANCO\n\t\t\tBD\tBARRIADA\n\t\t\tBL\tBLOQUE\n\t\t\tBO\tBARRIO\n\t\t\tCA\tCOLONIA\n\t\t\tCF\tCALLEJ\xd3N\n\t\t\tCI\tCARRIL\n\t\t\tCL\tCALLE\n\t\t\tCM\tCOMPLEJO\n\t\t\tCN\tCAMINO\n\t\t\tCO\tCOOPERATIVA\n\t\t\tCR\tCARRETERA\n\t\t\tCS\tCASA\n\t\t\tCT\tCUESTA\n\t\t\tDI\tDISEMINADO EXTRARRADIO\n\t\t\tED\tEDIFICIO\n\t\t\tEN\tENTRADA\n\t\t\tFC\tFINCA\n\t\t\tFI\tFICTICIO\n\t\t\tGL\tGLORIETA\n\t\t\tGR\tGRUPO\n\t\t\tMA\tMAS\xcdA\n\t\t\tMU\tMUELLE\n\t\t\tMZ\tMANZANA\n\t\t\tNU\tNUCLEO\n\t\t\tPA\tPARQUE\n\t\t\tPB\tPOBLADO\n\t\t\tPD\tPARTIDA\n\t\t\tPE\tPASEO\n\t\t\tPI\tPOL.INDUSTRIAL\n\t\t\tPJ\tPARAJE\n\t\t\tPL\tPANTALAN\n\t\t\tPO\tPOL\xcdGONO\n\t\t\tPQ\tPARQUE\n\t\t\tPR\tPROLONGACI\xd3N\n\t\t\tPS\tPASAJE\n\t\t\tPT\tPLAZOLETA\n\t\t\tPY\tPLAYA\n\t\t\tPZ\tPLAZA\n\t\t\tRA\tRAMBLA\n\t\t\tRD\tRONDA\n\t\t\tRS\tRESIDENCIAL\n\t\t\tSD\tSENDA\n\t\t\tTR\tTRAVES\xcdA\n\t\t\tUR\tURBANIZACI\xd3N\n\t\t\tVI\tVIAL\n\t\t\tZN\tZONA\n\t\t\t'
TipoVia._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoVia, enum_prefix=None)
TipoVia.AC = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AC')
TipoVia.AF = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AF')
TipoVia.AG = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AG')
TipoVia.AL = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AL')
TipoVia.AR = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AR')
TipoVia.AU = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AU')
TipoVia.AV = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'AV')
TipoVia.BC = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'BC')
TipoVia.BD = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'BD')
TipoVia.BL = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'BL')
TipoVia.BO = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'BO')
TipoVia.CA = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CA')
TipoVia.CF = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CF')
TipoVia.CI = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CI')
TipoVia.CL = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CL')
TipoVia.CM = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CM')
TipoVia.CN = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CN')
TipoVia.CO = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CO')
TipoVia.CR = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CR')
TipoVia.CS = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CS')
TipoVia.CT = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'CT')
TipoVia.DI = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'DI')
TipoVia.ED = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'ED')
TipoVia.EN = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'EN')
TipoVia.FC = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'FC')
TipoVia.FI = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'FI')
TipoVia.GL = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'GL')
TipoVia.GR = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'GR')
TipoVia.MA = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'MA')
TipoVia.MU = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'MU')
TipoVia.MZ = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'MZ')
TipoVia.NU = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'NU')
TipoVia.PA = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PA')
TipoVia.PB = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PB')
TipoVia.PD = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PD')
TipoVia.PE = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PE')
TipoVia.PI = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PI')
TipoVia.PJ = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PJ')
TipoVia.PL = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PL')
TipoVia.PO = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PO')
TipoVia.PQ = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PQ')
TipoVia.PR = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PR')
TipoVia.PS = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PS')
TipoVia.PT = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PT')
TipoVia.PY = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PY')
TipoVia.PZ = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'PZ')
TipoVia.RA = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'RA')
TipoVia.RD = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'RD')
TipoVia.RS = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'RS')
TipoVia.SD = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'SD')
TipoVia.TR = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'TR')
TipoVia.UR = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'UR')
TipoVia.VI = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'VI')
TipoVia.ZN = TipoVia._CF_enumeration.addEnumeration(unicode_value=u'ZN')
TipoVia._InitializeFacetMap(TipoVia._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoVia', TipoVia)

# Atomic SimpleTypeDefinition
class STD_ANON_22 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_22._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_22, value=pyxb.binding.datatypes.integer(0L))
STD_ANON_22._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(2L))
STD_ANON_22._InitializeFacetMap(STD_ANON_22._CF_minInclusive,
   STD_ANON_22._CF_totalDigits)

# Atomic SimpleTypeDefinition
class X32 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X32')
    _Documentation = None
X32._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(32L))
X32._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X32._InitializeFacetMap(X32._CF_maxLength,
   X32._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X32', X32)

# Atomic SimpleTypeDefinition
class TipoConcepto (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """
			01	Indemnizacion
			02	Derechos de extensi&#243;n
			03	Derechos de acceso
			04	Derechos de enganche
			05	Derechos de verificaci&#243;n
			06	Dep&#243;sito de garant&#237;a
			07	Gastos de anulaci&#243;n de contratos
			08	Actuaciones en la medida
			09	Reparametrizaci&#243;n de la medida
			10	2 &#186; Cambio de Comercializador en el periodo de un a&#241;o
			11	Intereses de demora
			12	Verificacion de Equipos de Medida
			13	Derechos de Reconexion
			14	Varios
			15	Gastos de acometida
			16	Abonos
			17	Abono por calidad de suministro
			18	Abono por calidad individual
			19	Coste de reposici&#243;n
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoConcepto')
    _Documentation = u'\n\t\t\t01\tIndemnizacion\n\t\t\t02\tDerechos de extensi\xf3n\n\t\t\t03\tDerechos de acceso\n\t\t\t04\tDerechos de enganche\n\t\t\t05\tDerechos de verificaci\xf3n\n\t\t\t06\tDep\xf3sito de garant\xeda\n\t\t\t07\tGastos de anulaci\xf3n de contratos\n\t\t\t08\tActuaciones en la medida\n\t\t\t09\tReparametrizaci\xf3n de la medida\n\t\t\t10\t2 \xba Cambio de Comercializador en el periodo de un a\xf1o\n\t\t\t11\tIntereses de demora\n\t\t\t12\tVerificacion de Equipos de Medida\n\t\t\t13\tDerechos de Reconexion\n\t\t\t14\tVarios\n\t\t\t15\tGastos de acometida\n\t\t\t16\tAbonos\n\t\t\t17\tAbono por calidad de suministro\n\t\t\t18\tAbono por calidad individual\n\t\t\t19\tCoste de reposici\xf3n\n\t\t\t'
TipoConcepto._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoConcepto, enum_prefix=None)
TipoConcepto.n01 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoConcepto.n02 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'02')
TipoConcepto.n03 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'03')
TipoConcepto.n04 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'04')
TipoConcepto.n05 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'05')
TipoConcepto.n06 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'06')
TipoConcepto.n07 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'07')
TipoConcepto.n08 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'08')
TipoConcepto.n09 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'09')
TipoConcepto.n10 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'10')
TipoConcepto.n11 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'11')
TipoConcepto.n12 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'12')
TipoConcepto.n13 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'13')
TipoConcepto.n14 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'14')
TipoConcepto.n15 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'15')
TipoConcepto.n16 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'16')
TipoConcepto.n17 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'17')
TipoConcepto.n18 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'18')
TipoConcepto.n19 = TipoConcepto._CF_enumeration.addEnumeration(unicode_value=u'19')
TipoConcepto._InitializeFacetMap(TipoConcepto._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoConcepto', TipoConcepto)

# Atomic SimpleTypeDefinition
class CUPS (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CUPS')
    _Documentation = None
CUPS._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(22L))
CUPS._InitializeFacetMap(CUPS._CF_length)
Namespace.addCategoryObject('typeBinding', u'CUPS', CUPS)

# Atomic SimpleTypeDefinition
class CodigoDeSolicitud (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoDeSolicitud')
    _Documentation = None
CodigoDeSolicitud._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(12L))
CodigoDeSolicitud._InitializeFacetMap(CodigoDeSolicitud._CF_length)
Namespace.addCategoryObject('typeBinding', u'CodigoDeSolicitud', CodigoDeSolicitud)

# Atomic SimpleTypeDefinition
class IndicativoLFC (pyxb.binding.datatypes.string):

    """indicativo Tipo Activaci&#243;n prevista (L con ciclo de lectura/ F fecha fija/ C tras actuaci&#243;n en campo)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoLFC')
    _Documentation = u'indicativo Tipo Activaci\xf3n prevista (L con ciclo de lectura/ F fecha fija/ C tras actuaci\xf3n en campo)'
IndicativoLFC._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoLFC._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoLFC._CF_pattern.addPattern(pattern=u'L|F|C')
IndicativoLFC._InitializeFacetMap(IndicativoLFC._CF_length,
   IndicativoLFC._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoLFC', IndicativoLFC)

# Atomic SimpleTypeDefinition
class X30 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X30')
    _Documentation = None
X30._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(30L))
X30._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X30._InitializeFacetMap(X30._CF_maxLength,
   X30._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X30', X30)

# Atomic SimpleTypeDefinition
class DecimalS9V3 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DecimalS9V3')
    _Documentation = None
DecimalS9V3._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
DecimalS9V3._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
DecimalS9V3._InitializeFacetMap(DecimalS9V3._CF_totalDigits,
   DecimalS9V3._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'DecimalS9V3', DecimalS9V3)

# Atomic SimpleTypeDefinition
class IndicativoSi (pyxb.binding.datatypes.string):

    """ Siempre Si """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoSi')
    _Documentation = u' Siempre Si '
IndicativoSi._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoSi._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoSi._CF_pattern.addPattern(pattern=u'S')
IndicativoSi._InitializeFacetMap(IndicativoSi._CF_length,
   IndicativoSi._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoSi', IndicativoSi)

# Atomic SimpleTypeDefinition
class X11 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X11')
    _Documentation = None
X11._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(11L))
X11._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X11._InitializeFacetMap(X11._CF_maxLength,
   X11._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X11', X11)

# Atomic SimpleTypeDefinition
class CodigoDePaso (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoDePaso')
    _Documentation = None
CodigoDePaso._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
CodigoDePaso._InitializeFacetMap(CodigoDePaso._CF_length)
Namespace.addCategoryObject('typeBinding', u'CodigoDePaso', CodigoDePaso)

# Atomic SimpleTypeDefinition
class FuncionAparato (pyxb.binding.datatypes.string):

    """C = control y M = Medicion"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato')
    _Documentation = u'C = control y M = Medicion'
FuncionAparato._CF_pattern = pyxb.binding.facets.CF_pattern()
FuncionAparato._CF_pattern.addPattern(pattern=u'C|M')
FuncionAparato._InitializeFacetMap(FuncionAparato._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'FuncionAparato', FuncionAparato)

# Atomic SimpleTypeDefinition
class STD_ANON_23 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_23._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_23, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_23._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(5L))
STD_ANON_23._InitializeFacetMap(STD_ANON_23._CF_minInclusive,
   STD_ANON_23._CF_totalDigits)

# Atomic SimpleTypeDefinition
class DecimalS9V2 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DecimalS9V2')
    _Documentation = None
DecimalS9V2._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
DecimalS9V2._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
DecimalS9V2._InitializeFacetMap(DecimalS9V2._CF_totalDigits,
   DecimalS9V2._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'DecimalS9V2', DecimalS9V2)

# Atomic SimpleTypeDefinition
class X250 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X250')
    _Documentation = None
X250._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(250L))
X250._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X250._InitializeFacetMap(X250._CF_maxLength,
   X250._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X250', X250)

# Atomic SimpleTypeDefinition
class STD_ANON_24 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_24._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(60L))
STD_ANON_24._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_24._InitializeFacetMap(STD_ANON_24._CF_maxLength,
   STD_ANON_24._CF_minLength)

# Atomic SimpleTypeDefinition
class Reactiva (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Reactiva')
    _Documentation = None
Reactiva._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
Reactiva._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Reactiva._InitializeFacetMap(Reactiva._CF_totalDigits,
   Reactiva._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Reactiva', Reactiva)

# Atomic SimpleTypeDefinition
class TipoMotivoAjuste (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """
			01	Veriicaci&#243;n equipo de medida
			02	Aver&#237;a en contador
			03	Aver&#237;a en Trafo de Tensi&#243;n
			04	Aver&#237;a en Trafo de intensidad
			05	Desbordamiento del Registrador
			06	Problemas en la sincronizaci&#243;n del registrador
			07	P&#233;rdida de alimentaci&#243;n del registrador
			08	Manipulaci&#243;n de equipos
			09	Servicio Directo (sin EM)
			10	Punto de medida inaccesible
			11	Punto de medida ilocalizable
			99	Otros
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoMotivoAjuste')
    _Documentation = u'\n\t\t\t01\tVeriicaci\xf3n equipo de medida\n\t\t\t02\tAver\xeda en contador\n\t\t\t03\tAver\xeda en Trafo de Tensi\xf3n\n\t\t\t04\tAver\xeda en Trafo de intensidad\n\t\t\t05\tDesbordamiento del Registrador\n\t\t\t06\tProblemas en la sincronizaci\xf3n del registrador\n\t\t\t07\tP\xe9rdida de alimentaci\xf3n del registrador\n\t\t\t08\tManipulaci\xf3n de equipos\n\t\t\t09\tServicio Directo (sin EM)\n\t\t\t10\tPunto de medida inaccesible\n\t\t\t11\tPunto de medida ilocalizable\n\t\t\t99\tOtros\n\t\t\t'
TipoMotivoAjuste._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoMotivoAjuste, enum_prefix=None)
TipoMotivoAjuste.n01 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoMotivoAjuste.n02 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'02')
TipoMotivoAjuste.n03 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'03')
TipoMotivoAjuste.n04 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'04')
TipoMotivoAjuste.n05 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'05')
TipoMotivoAjuste.n06 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'06')
TipoMotivoAjuste.n07 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'07')
TipoMotivoAjuste.n08 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'08')
TipoMotivoAjuste.n09 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'09')
TipoMotivoAjuste.n10 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'10')
TipoMotivoAjuste.n11 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'11')
TipoMotivoAjuste.n99 = TipoMotivoAjuste._CF_enumeration.addEnumeration(unicode_value=u'99')
TipoMotivoAjuste._InitializeFacetMap(TipoMotivoAjuste._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoMotivoAjuste', TipoMotivoAjuste)

# Atomic SimpleTypeDefinition
class TipoFactura (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """
			01	Normal
			02	Modificaci&#243;n de Contrato
			03	Baja de Contrato
			04	Derechos de Contratacion
			05	Deposito de garant&#237;a
			06	Inspecci&#243;n
			07	Atenciones (verificaciones, )
			08	Indemnizacion
			09	Intereses de demora
			10	Servicios
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoFactura')
    _Documentation = u'\n\t\t\t01\tNormal\n\t\t\t02\tModificaci\xf3n de Contrato\n\t\t\t03\tBaja de Contrato\n\t\t\t04\tDerechos de Contratacion\n\t\t\t05\tDeposito de garant\xeda\n\t\t\t06\tInspecci\xf3n\n\t\t\t07\tAtenciones (verificaciones, )\n\t\t\t08\tIndemnizacion\n\t\t\t09\tIntereses de demora\n\t\t\t10\tServicios\n\t\t\t'
TipoFactura._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoFactura, enum_prefix=None)
TipoFactura.n01 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoFactura.n02 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'02')
TipoFactura.n03 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'03')
TipoFactura.n04 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'04')
TipoFactura.n05 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'05')
TipoFactura.n06 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'06')
TipoFactura.n07 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'07')
TipoFactura.n08 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'08')
TipoFactura.n09 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'09')
TipoFactura.n10 = TipoFactura._CF_enumeration.addEnumeration(unicode_value=u'10')
TipoFactura._InitializeFacetMap(TipoFactura._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoFactura', TipoFactura)

# Atomic SimpleTypeDefinition
class STD_ANON_25 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_25._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(12L))
STD_ANON_25._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_25._InitializeFacetMap(STD_ANON_25._CF_maxLength,
   STD_ANON_25._CF_minLength)

# Atomic SimpleTypeDefinition
class STD_ANON_26 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_26._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(240L))
STD_ANON_26._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_26._InitializeFacetMap(STD_ANON_26._CF_maxLength,
   STD_ANON_26._CF_minLength)

# Atomic SimpleTypeDefinition
class STD_ANON_27 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_27._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_27, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_27._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
STD_ANON_27._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_27._InitializeFacetMap(STD_ANON_27._CF_minInclusive,
   STD_ANON_27._CF_totalDigits,
   STD_ANON_27._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Decimal7 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal7')
    _Documentation = None
Decimal7._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(7L))
Decimal7._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal7._InitializeFacetMap(Decimal7._CF_totalDigits,
   Decimal7._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal7', Decimal7)

# Atomic SimpleTypeDefinition
class STD_ANON_28 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_28._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_28, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_28._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
STD_ANON_28._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_28._InitializeFacetMap(STD_ANON_28._CF_minInclusive,
   STD_ANON_28._CF_totalDigits,
   STD_ANON_28._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class TipoIdentificador (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo de Identificador de los datos del usuario
				CI	CIF
				CT	Carta trabajo
				DN	DNI
				NI	NIF
				NV	N.I.V.A.
				OT	N
				PS	Pasaporte
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoIdentificador')
    _Documentation = u'Tipo de Identificador de los datos del usuario\n\t\t\t\tCI\tCIF\n\t\t\t\tCT\tCarta trabajo\n\t\t\t\tDN\tDNI\n\t\t\t\tNI\tNIF\n\t\t\t\tNV\tN.I.V.A.\n\t\t\t\tOT\tN\n\t\t\t\tPS\tPasaporte\n\t\t\t'
TipoIdentificador._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoIdentificador, enum_prefix=None)
TipoIdentificador.CI = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'CI')
TipoIdentificador.CT = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'CT')
TipoIdentificador.DN = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'DN')
TipoIdentificador.NI = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'NI')
TipoIdentificador.NV = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'NV')
TipoIdentificador.OT = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'OT')
TipoIdentificador.PS = TipoIdentificador._CF_enumeration.addEnumeration(unicode_value=u'PS')
TipoIdentificador._InitializeFacetMap(TipoIdentificador._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoIdentificador', TipoIdentificador)

# Atomic SimpleTypeDefinition
class Decimal1 (pyxb.binding.datatypes.integer):

    """decimal de un digito"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal1')
    _Documentation = u'decimal de un digito'
Decimal1._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(1L))
Decimal1._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal1._InitializeFacetMap(Decimal1._CF_totalDigits,
   Decimal1._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal1', Decimal1)

# Atomic SimpleTypeDefinition
class STD_ANON_29 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_29._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_29._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_29._InitializeFacetMap(STD_ANON_29._CF_totalDigits,
   STD_ANON_29._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_30 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_30._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_30._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_30._InitializeFacetMap(STD_ANON_30._CF_totalDigits,
   STD_ANON_30._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class IndicativoNo (pyxb.binding.datatypes.string):

    """ Siempre NO """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoNo')
    _Documentation = u' Siempre NO '
IndicativoNo._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoNo._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoNo._CF_pattern.addPattern(pattern=u'N')
IndicativoNo._InitializeFacetMap(IndicativoNo._CF_length,
   IndicativoNo._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoNo', IndicativoNo)

# Atomic SimpleTypeDefinition
class X6 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X6')
    _Documentation = None
X6._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(6L))
X6._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X6._InitializeFacetMap(X6._CF_maxLength,
   X6._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X6', X6)

# Atomic SimpleTypeDefinition
class ModoFacturacionPotencia (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Modo facturacion potencia Tabla 50
			Modo 1 Sin Maximetro
			Modo 2 Con un maximetro
			Modo 3 Con dos maximetros
			Modo 4 Con tres maximetros
			Modo 5 Estacional Tipo A
			Modo 6 Estacional Tipo B
			THP
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ModoFacturacionPotencia')
    _Documentation = u'Modo facturacion potencia Tabla 50\n\t\t\tModo 1 Sin Maximetro\n\t\t\tModo 2 Con un maximetro\n\t\t\tModo 3 Con dos maximetros\n\t\t\tModo 4 Con tres maximetros\n\t\t\tModo 5 Estacional Tipo A\n\t\t\tModo 6 Estacional Tipo B\n\t\t\tTHP\n\t\t\t'
ModoFacturacionPotencia._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=ModoFacturacionPotencia, enum_prefix=None)
ModoFacturacionPotencia.n1 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'1')
ModoFacturacionPotencia.n2 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'2')
ModoFacturacionPotencia.n3 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'3')
ModoFacturacionPotencia.n4 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'4')
ModoFacturacionPotencia.n5 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'5')
ModoFacturacionPotencia.n6 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'6')
ModoFacturacionPotencia.n7 = ModoFacturacionPotencia._CF_enumeration.addEnumeration(unicode_value=u'7')
ModoFacturacionPotencia._InitializeFacetMap(ModoFacturacionPotencia._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'ModoFacturacionPotencia', ModoFacturacionPotencia)

# Atomic SimpleTypeDefinition
class CodigoDelProceso (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoDelProceso')
    _Documentation = None
CodigoDelProceso._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
CodigoDelProceso._InitializeFacetMap(CodigoDelProceso._CF_length)
Namespace.addCategoryObject('typeBinding', u'CodigoDelProceso', CodigoDelProceso)

# Atomic SimpleTypeDefinition
class STD_ANON_31 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_31._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(12L))
STD_ANON_31._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_31._InitializeFacetMap(STD_ANON_31._CF_totalDigits,
   STD_ANON_31._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_32 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_32._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_32._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_32._InitializeFacetMap(STD_ANON_32._CF_totalDigits,
   STD_ANON_32._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class TipoFacturacion (pyxb.binding.datatypes.integer, pyxb.binding.basis.enumeration_mixin):

    """Tipo Facturacion
			0000 Facturacion Normal
			1001 Refacturacion positiva
			2001 Refacturacion negativa
			3001 Facturacion complementaria	
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoFacturacion')
    _Documentation = u'Tipo Facturacion\n\t\t\t0000 Facturacion Normal\n\t\t\t1001 Refacturacion positiva\n\t\t\t2001 Refacturacion negativa\n\t\t\t3001 Facturacion complementaria\t\n\t\t\t'
TipoFacturacion._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoFacturacion, enum_prefix=None)
TipoFacturacion._CF_enumeration.addEnumeration(unicode_value=u'0000')
TipoFacturacion._CF_enumeration.addEnumeration(unicode_value=u'1001')
TipoFacturacion._CF_enumeration.addEnumeration(unicode_value=u'2001')
TipoFacturacion._CF_enumeration.addEnumeration(unicode_value=u'3001')
TipoFacturacion._InitializeFacetMap(TipoFacturacion._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoFacturacion', TipoFacturacion)

# Atomic SimpleTypeDefinition
class CodigoRetorno (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """codigo de retorno
			O	OK         Todo bien
			E	Error      No se puede continuar
			W	Warning    Se ha producido una incidencia pero se puede continuar
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoRetorno')
    _Documentation = u'codigo de retorno\n\t\t\tO\tOK         Todo bien\n\t\t\tE\tError      No se puede continuar\n\t\t\tW\tWarning    Se ha producido una incidencia pero se puede continuar\n\t\t\t'
CodigoRetorno._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=CodigoRetorno, enum_prefix=None)
CodigoRetorno.O = CodigoRetorno._CF_enumeration.addEnumeration(unicode_value=u'O')
CodigoRetorno.E = CodigoRetorno._CF_enumeration.addEnumeration(unicode_value=u'E')
CodigoRetorno.W = CodigoRetorno._CF_enumeration.addEnumeration(unicode_value=u'W')
CodigoRetorno._InitializeFacetMap(CodigoRetorno._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'CodigoRetorno', CodigoRetorno)

# Atomic SimpleTypeDefinition
class STD_ANON_33 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_33._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_33, value=pyxb.binding.datatypes.integer(0L))
STD_ANON_33._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(2L))
STD_ANON_33._InitializeFacetMap(STD_ANON_33._CF_minInclusive,
   STD_ANON_33._CF_totalDigits)

# Atomic SimpleTypeDefinition
class TipoContrato (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """tipo de contrato  ATR  Tabla 9
			01	Anual
			02	Eventual
			03	Temporada
			04	Energia Adicional
			05	Suministro a instalaciones acogidos al regimen especial
			06	Interconexiones internacionales
			07	Suministro de Obras
			08	Suministro de Socorros
			09	Eventual a tanto alzado
			10	Pruebas
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoContrato')
    _Documentation = u'tipo de contrato  ATR  Tabla 9\n\t\t\t01\tAnual\n\t\t\t02\tEventual\n\t\t\t03\tTemporada\n\t\t\t04\tEnergia Adicional\n\t\t\t05\tSuministro a instalaciones acogidos al regimen especial\n\t\t\t06\tInterconexiones internacionales\n\t\t\t07\tSuministro de Obras\n\t\t\t08\tSuministro de Socorros\n\t\t\t09\tEventual a tanto alzado\n\t\t\t10\tPruebas\n\t\t\t'
TipoContrato._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoContrato, enum_prefix=None)
TipoContrato.n01 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoContrato.n02 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'02')
TipoContrato.n03 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'03')
TipoContrato.n04 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'04')
TipoContrato.n05 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'05')
TipoContrato.n06 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'06')
TipoContrato.n07 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'07')
TipoContrato.n08 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'08')
TipoContrato.n09 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'09')
TipoContrato.n10 = TipoContrato._CF_enumeration.addEnumeration(unicode_value=u'10')
TipoContrato._InitializeFacetMap(TipoContrato._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoContrato', TipoContrato)

# Atomic SimpleTypeDefinition
class SecuencialDeSolicitud (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'SecuencialDeSolicitud')
    _Documentation = None
SecuencialDeSolicitud._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
SecuencialDeSolicitud._InitializeFacetMap(SecuencialDeSolicitud._CF_length)
Namespace.addCategoryObject('typeBinding', u'SecuencialDeSolicitud', SecuencialDeSolicitud)

# Atomic SimpleTypeDefinition
class IndSustitutoMandatario (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Sustituto o Mandatario  
			S	Sustituto	
			M	Mandatario
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndSustitutoMandatario')
    _Documentation = u'Sustituto o Mandatario  \n\t\t\tS\tSustituto\t\n\t\t\tM\tMandatario\n\t\t\t'
IndSustitutoMandatario._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=IndSustitutoMandatario, enum_prefix=None)
IndSustitutoMandatario.S = IndSustitutoMandatario._CF_enumeration.addEnumeration(unicode_value=u'S')
IndSustitutoMandatario.M = IndSustitutoMandatario._CF_enumeration.addEnumeration(unicode_value=u'M')
IndSustitutoMandatario._InitializeFacetMap(IndSustitutoMandatario._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'IndSustitutoMandatario', IndSustitutoMandatario)

# Atomic SimpleTypeDefinition
class X20 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X20')
    _Documentation = None
X20._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(20L))
X20._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X20._InitializeFacetMap(X20._CF_maxLength,
   X20._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X20', X20)

# Atomic SimpleTypeDefinition
class CodigoTarifa (pyxb.binding.datatypes.integer):

    """Codigo Tipo Tarifa (se utilizara una tabla de codigos)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoTarifa')
    _Documentation = u'Codigo Tipo Tarifa (se utilizara una tabla de codigos)'
CodigoTarifa._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(3L))
CodigoTarifa._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
CodigoTarifa._InitializeFacetMap(CodigoTarifa._CF_totalDigits,
   CodigoTarifa._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'CodigoTarifa', CodigoTarifa)

# Atomic SimpleTypeDefinition
class CodPM (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodPM')
    _Documentation = None
CodPM._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(22L))
CodPM._InitializeFacetMap(CodPM._CF_length)
Namespace.addCategoryObject('typeBinding', u'CodPM', CodPM)

# Atomic SimpleTypeDefinition
class X40 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X40')
    _Documentation = None
X40._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(40L))
X40._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X40._InitializeFacetMap(X40._CF_maxLength,
   X40._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X40', X40)

# Atomic SimpleTypeDefinition
class STD_ANON_34 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_34._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(26L))
STD_ANON_34._InitializeFacetMap(STD_ANON_34._CF_maxLength)

# Atomic SimpleTypeDefinition
class TipoPerfilDeConsumo (pyxb.binding.datatypes.string):

    """tipo de Perfil de consumo Valores posibles por determinar por equipo de trabajo de perfiles """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoPerfilDeConsumo')
    _Documentation = u'tipo de Perfil de consumo Valores posibles por determinar por equipo de trabajo de perfiles '
TipoPerfilDeConsumo._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
TipoPerfilDeConsumo._InitializeFacetMap(TipoPerfilDeConsumo._CF_length)
Namespace.addCategoryObject('typeBinding', u'TipoPerfilDeConsumo', TipoPerfilDeConsumo)

# Atomic SimpleTypeDefinition
class Agente (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Agente')
    _Documentation = None
Agente._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
Agente._InitializeFacetMap(Agente._CF_maxLength)
Namespace.addCategoryObject('typeBinding', u'Agente', Agente)

# Atomic SimpleTypeDefinition
class TipoAclaradorFinca (pyxb.binding.datatypes.string):

    """Tipo aclarador de finca	"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca')
    _Documentation = u'Tipo aclarador de finca\t'
TipoAclaradorFinca._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
TipoAclaradorFinca._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
TipoAclaradorFinca._InitializeFacetMap(TipoAclaradorFinca._CF_maxLength,
   TipoAclaradorFinca._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'TipoAclaradorFinca', TipoAclaradorFinca)

# Atomic SimpleTypeDefinition
class STD_ANON_35 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_35._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(15L))
STD_ANON_35._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_35._InitializeFacetMap(STD_ANON_35._CF_totalDigits,
   STD_ANON_35._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class TipoDH (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo discriminacion horaria (Tabla 35)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoDH')
    _Documentation = u'Tipo discriminacion horaria (Tabla 35)'
TipoDH._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoDH, enum_prefix=None)
TipoDH.n0 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'0')
TipoDH.n1 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'1')
TipoDH.n2 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'2')
TipoDH.n3 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'3')
TipoDH.n4 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'4')
TipoDH.n5 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'5')
TipoDH.n6 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'6')
TipoDH.n7 = TipoDH._CF_enumeration.addEnumeration(unicode_value=u'7')
TipoDH._InitializeFacetMap(TipoDH._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoDH', TipoDH)

# Atomic SimpleTypeDefinition
class STD_ANON_36 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_36._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_36, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_36._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
STD_ANON_36._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(8L))
STD_ANON_36._InitializeFacetMap(STD_ANON_36._CF_minInclusive,
   STD_ANON_36._CF_totalDigits,
   STD_ANON_36._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_37 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_37._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(26L))
STD_ANON_37._InitializeFacetMap(STD_ANON_37._CF_maxLength)

# Atomic SimpleTypeDefinition
class Nombre (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Nombre')
    _Documentation = None
Nombre._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(45L))
Nombre._InitializeFacetMap(Nombre._CF_maxLength)
Namespace.addCategoryObject('typeBinding', u'Nombre', Nombre)

# Atomic SimpleTypeDefinition
class STD_ANON_38 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_38._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_38._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_38._InitializeFacetMap(STD_ANON_38._CF_totalDigits,
   STD_ANON_38._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class TipoPropiedadAparato (pyxb.binding.datatypes.string):

    """tipo de propiedad del aparato 1-Distribuidora 2-Cliente 3-Comercializadora 4-Otros"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoPropiedadAparato')
    _Documentation = u'tipo de propiedad del aparato 1-Distribuidora 2-Cliente 3-Comercializadora 4-Otros'
TipoPropiedadAparato._CF_pattern = pyxb.binding.facets.CF_pattern()
TipoPropiedadAparato._CF_pattern.addPattern(pattern=u'[1-4]')
TipoPropiedadAparato._InitializeFacetMap(TipoPropiedadAparato._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'TipoPropiedadAparato', TipoPropiedadAparato)

# Atomic SimpleTypeDefinition
class STD_ANON_39 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_39._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(22L))
STD_ANON_39._InitializeFacetMap(STD_ANON_39._CF_length)

# Atomic SimpleTypeDefinition
class STD_ANON_40 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_40._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(40L))
STD_ANON_40._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_40._InitializeFacetMap(STD_ANON_40._CF_maxLength,
   STD_ANON_40._CF_minLength)

# Atomic SimpleTypeDefinition
class Decimal11 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal11')
    _Documentation = None
Decimal11._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
Decimal11._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal11._InitializeFacetMap(Decimal11._CF_totalDigits,
   Decimal11._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal11', Decimal11)

# Atomic SimpleTypeDefinition
class TipoCodigoPeriodoDH (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """
			00	Totalizador
			01	Punta+Llano
			03	Valle
			10	Totalizador
			20	Totalizador
			21	Punta
			22	Llano+Valle
			30	Totalizador
			31	Punta
			32	Llano
			33	Valle
			40	Totalizador
			41	Punta
			42	Llano
			43	Valle
			50	Totalizador
			51	Punta Alto
			52	Llano
			53	Valle
			54	Supervalle
			55	Punta Pico
			60	Totalizador
			61	Periodo 1
			62	Per&#237;odo 2
			63	Per&#237;odo 3
			64	Per&#237;odo 4
			65	Per&#237;odo 5
			66	Per&#237;odo 6
			70	Totalizador
			71	Periodo 1
			72	Per&#237;odo 2
			73	Per&#237;odo 3
			74	Per&#237;odo 4
			75	Per&#237;odo 5
			76	Per&#237;odo 6
			77	Per&#237;odo 7
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoCodigoPeriodoDH')
    _Documentation = u'\n\t\t\t00\tTotalizador\n\t\t\t01\tPunta+Llano\n\t\t\t03\tValle\n\t\t\t10\tTotalizador\n\t\t\t20\tTotalizador\n\t\t\t21\tPunta\n\t\t\t22\tLlano+Valle\n\t\t\t30\tTotalizador\n\t\t\t31\tPunta\n\t\t\t32\tLlano\n\t\t\t33\tValle\n\t\t\t40\tTotalizador\n\t\t\t41\tPunta\n\t\t\t42\tLlano\n\t\t\t43\tValle\n\t\t\t50\tTotalizador\n\t\t\t51\tPunta Alto\n\t\t\t52\tLlano\n\t\t\t53\tValle\n\t\t\t54\tSupervalle\n\t\t\t55\tPunta Pico\n\t\t\t60\tTotalizador\n\t\t\t61\tPeriodo 1\n\t\t\t62\tPer\xedodo 2\n\t\t\t63\tPer\xedodo 3\n\t\t\t64\tPer\xedodo 4\n\t\t\t65\tPer\xedodo 5\n\t\t\t66\tPer\xedodo 6\n\t\t\t70\tTotalizador\n\t\t\t71\tPeriodo 1\n\t\t\t72\tPer\xedodo 2\n\t\t\t73\tPer\xedodo 3\n\t\t\t74\tPer\xedodo 4\n\t\t\t75\tPer\xedodo 5\n\t\t\t76\tPer\xedodo 6\n\t\t\t77\tPer\xedodo 7\n\t\t\t'
TipoCodigoPeriodoDH._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoCodigoPeriodoDH, enum_prefix=None)
TipoCodigoPeriodoDH.n00 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'00')
TipoCodigoPeriodoDH.n01 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'01')
TipoCodigoPeriodoDH.n03 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'03')
TipoCodigoPeriodoDH.n10 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'10')
TipoCodigoPeriodoDH.n20 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'20')
TipoCodigoPeriodoDH.n21 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'21')
TipoCodigoPeriodoDH.n22 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'22')
TipoCodigoPeriodoDH.n30 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'30')
TipoCodigoPeriodoDH.n31 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'31')
TipoCodigoPeriodoDH.n32 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'32')
TipoCodigoPeriodoDH.n33 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'33')
TipoCodigoPeriodoDH.n40 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'40')
TipoCodigoPeriodoDH.n41 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'41')
TipoCodigoPeriodoDH.n42 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'42')
TipoCodigoPeriodoDH.n43 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'43')
TipoCodigoPeriodoDH.n50 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'50')
TipoCodigoPeriodoDH.n51 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'51')
TipoCodigoPeriodoDH.n52 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'52')
TipoCodigoPeriodoDH.n53 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'53')
TipoCodigoPeriodoDH.n54 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'54')
TipoCodigoPeriodoDH.n55 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'55')
TipoCodigoPeriodoDH.n60 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'60')
TipoCodigoPeriodoDH.n61 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'61')
TipoCodigoPeriodoDH.n62 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'62')
TipoCodigoPeriodoDH.n63 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'63')
TipoCodigoPeriodoDH.n64 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'64')
TipoCodigoPeriodoDH.n65 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'65')
TipoCodigoPeriodoDH.n66 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'66')
TipoCodigoPeriodoDH.n70 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'70')
TipoCodigoPeriodoDH.n71 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'71')
TipoCodigoPeriodoDH.n72 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'72')
TipoCodigoPeriodoDH.n73 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'73')
TipoCodigoPeriodoDH.n74 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'74')
TipoCodigoPeriodoDH.n75 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'75')
TipoCodigoPeriodoDH.n76 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'76')
TipoCodigoPeriodoDH.n77 = TipoCodigoPeriodoDH._CF_enumeration.addEnumeration(unicode_value=u'77')
TipoCodigoPeriodoDH._InitializeFacetMap(TipoCodigoPeriodoDH._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoCodigoPeriodoDH', TipoCodigoPeriodoDH)

# Atomic SimpleTypeDefinition
class STD_ANON_41 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_41._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_41._InitializeFacetMap(STD_ANON_41._CF_length)

# Atomic SimpleTypeDefinition
class STD_ANON_42 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_42._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(8L))
STD_ANON_42._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(6L))
STD_ANON_42._InitializeFacetMap(STD_ANON_42._CF_totalDigits,
   STD_ANON_42._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_43 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_43._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_43._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_43._InitializeFacetMap(STD_ANON_43._CF_totalDigits,
   STD_ANON_43._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class FuncionPM (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Funcion Tabla 40
			 C   Comprobante
			 P   Principal
			 R   Redundante					
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'FuncionPM')
    _Documentation = u'Funcion Tabla 40\n\t\t\t C   Comprobante\n\t\t\t P   Principal\n\t\t\t R   Redundante\t\t\t\t\t\n\t\t\t'
FuncionPM._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=FuncionPM, enum_prefix=None)
FuncionPM.C = FuncionPM._CF_enumeration.addEnumeration(unicode_value=u'C')
FuncionPM.P = FuncionPM._CF_enumeration.addEnumeration(unicode_value=u'P')
FuncionPM.R = FuncionPM._CF_enumeration.addEnumeration(unicode_value=u'R')
FuncionPM._InitializeFacetMap(FuncionPM._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'FuncionPM', FuncionPM)

# Atomic SimpleTypeDefinition
class Puerta (pyxb.binding.datatypes.string):

    """Puerta"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Puerta')
    _Documentation = u'Puerta'
Puerta._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
Puerta._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
Puerta._InitializeFacetMap(Puerta._CF_maxLength,
   Puerta._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'Puerta', Puerta)

# Atomic SimpleTypeDefinition
class STD_ANON_44 (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_44._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_44, enum_prefix=None)
STD_ANON_44.F = STD_ANON_44._CF_enumeration.addEnumeration(unicode_value=u'F')
STD_ANON_44.S = STD_ANON_44._CF_enumeration.addEnumeration(unicode_value=u'S')
STD_ANON_44.O = STD_ANON_44._CF_enumeration.addEnumeration(unicode_value=u'O')
STD_ANON_44._InitializeFacetMap(STD_ANON_44._CF_enumeration)

# Atomic SimpleTypeDefinition
class Version (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Version')
    _Documentation = None
Version._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
Version._InitializeFacetMap(Version._CF_length)
Namespace.addCategoryObject('typeBinding', u'Version', Version)

# Atomic SimpleTypeDefinition
class STD_ANON_45 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_45._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_45, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_45._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(9L))
STD_ANON_45._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
STD_ANON_45._InitializeFacetMap(STD_ANON_45._CF_minInclusive,
   STD_ANON_45._CF_totalDigits,
   STD_ANON_45._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class MarcaAparato (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MarcaAparato')
    _Documentation = None
MarcaAparato._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
MarcaAparato._InitializeFacetMap(MarcaAparato._CF_length)
Namespace.addCategoryObject('typeBinding', u'MarcaAparato', MarcaAparato)

# Atomic SimpleTypeDefinition
class Decimal14 (pyxb.binding.datatypes.long):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Decimal14')
    _Documentation = None
Decimal14._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
Decimal14._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(0L))
Decimal14._InitializeFacetMap(Decimal14._CF_totalDigits,
   Decimal14._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', u'Decimal14', Decimal14)

# Atomic SimpleTypeDefinition
class STD_ANON_46 (pyxb.binding.datatypes.integer):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_46._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_46, value=pyxb.binding.datatypes.integer(0L))
STD_ANON_46._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(11L))
STD_ANON_46._InitializeFacetMap(STD_ANON_46._CF_minInclusive,
   STD_ANON_46._CF_totalDigits)

# Atomic SimpleTypeDefinition
class TipoFacturaRectificadora (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """
			A	Anuladora
			B	Anuladora con Sustituyente
			N	Normal
			R	Rectificadora
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoFacturaRectificadora')
    _Documentation = u'\n\t\t\tA\tAnuladora\n\t\t\tB\tAnuladora con Sustituyente\n\t\t\tN\tNormal\n\t\t\tR\tRectificadora\n\t\t\t'
TipoFacturaRectificadora._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoFacturaRectificadora, enum_prefix=None)
TipoFacturaRectificadora.A = TipoFacturaRectificadora._CF_enumeration.addEnumeration(unicode_value=u'A')
TipoFacturaRectificadora.B = TipoFacturaRectificadora._CF_enumeration.addEnumeration(unicode_value=u'B')
TipoFacturaRectificadora.N = TipoFacturaRectificadora._CF_enumeration.addEnumeration(unicode_value=u'N')
TipoFacturaRectificadora.R = TipoFacturaRectificadora._CF_enumeration.addEnumeration(unicode_value=u'R')
TipoFacturaRectificadora._InitializeFacetMap(TipoFacturaRectificadora._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoFacturaRectificadora', TipoFacturaRectificadora)

# Atomic SimpleTypeDefinition
class TipoEquipoMedida (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """tipo de equipo de medida"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida')
    _Documentation = u'tipo de equipo de medida'
TipoEquipoMedida._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoEquipoMedida, enum_prefix=None)
TipoEquipoMedida.L01 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L01')
TipoEquipoMedida.L02 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L02')
TipoEquipoMedida.L03 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L03')
TipoEquipoMedida.L04 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L04')
TipoEquipoMedida.L05 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L05')
TipoEquipoMedida.L06 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L06')
TipoEquipoMedida.L07 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L07')
TipoEquipoMedida.L08 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L08')
TipoEquipoMedida.L09 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L09')
TipoEquipoMedida.L10 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'L10')
TipoEquipoMedida.R00 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R00')
TipoEquipoMedida.R01 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R01')
TipoEquipoMedida.R02 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R02')
TipoEquipoMedida.R03 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R03')
TipoEquipoMedida.R04 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R04')
TipoEquipoMedida.R05 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R05')
TipoEquipoMedida.R06 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R06')
TipoEquipoMedida.R07 = TipoEquipoMedida._CF_enumeration.addEnumeration(unicode_value=u'R07')
TipoEquipoMedida._InitializeFacetMap(TipoEquipoMedida._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoEquipoMedida', TipoEquipoMedida)

# Atomic SimpleTypeDefinition
class STD_ANON_47 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_47._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_47._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_47._InitializeFacetMap(STD_ANON_47._CF_totalDigits,
   STD_ANON_47._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_48 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_48._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(10L))
STD_ANON_48._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_48._InitializeFacetMap(STD_ANON_48._CF_maxLength,
   STD_ANON_48._CF_minLength)

# Atomic SimpleTypeDefinition
class STD_ANON_49 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_49._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_49, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_49._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(5L))
STD_ANON_49._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_49._InitializeFacetMap(STD_ANON_49._CF_minInclusive,
   STD_ANON_49._CF_totalDigits,
   STD_ANON_49._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Servicio (pyxb.binding.datatypes.integer, pyxb.binding.basis.enumeration_mixin):

    """servicio administrativo"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Servicio')
    _Documentation = u'servicio administrativo'
Servicio._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=Servicio, enum_prefix=None)
Servicio._CF_enumeration.addEnumeration(unicode_value=u'001')
Servicio._CF_enumeration.addEnumeration(unicode_value=u'002')
Servicio._CF_enumeration.addEnumeration(unicode_value=u'003')
Servicio._CF_enumeration.addEnumeration(unicode_value=u'004')
Servicio._CF_enumeration.addEnumeration(unicode_value=u'005')
Servicio._CF_enumeration.addEnumeration(unicode_value=u'006')
Servicio._InitializeFacetMap(Servicio._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'Servicio', Servicio)

# Atomic SimpleTypeDefinition
class LineaNegocio (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """ 01 Electrico
 02 Gas """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'LineaNegocio')
    _Documentation = u' 01 Electrico\n 02 Gas '
LineaNegocio._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=LineaNegocio, enum_prefix=None)
LineaNegocio.n01 = LineaNegocio._CF_enumeration.addEnumeration(unicode_value=u'01')
LineaNegocio.n02 = LineaNegocio._CF_enumeration.addEnumeration(unicode_value=u'02')
LineaNegocio._InitializeFacetMap(LineaNegocio._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'LineaNegocio', LineaNegocio)

# Atomic SimpleTypeDefinition
class STD_ANON_50 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_50._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_50._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_50._InitializeFacetMap(STD_ANON_50._CF_totalDigits,
   STD_ANON_50._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_51 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_51._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_51._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_51._InitializeFacetMap(STD_ANON_51._CF_totalDigits,
   STD_ANON_51._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_52 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_52._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_52, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_52._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(13L))
STD_ANON_52._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(8L))
STD_ANON_52._InitializeFacetMap(STD_ANON_52._CF_minInclusive,
   STD_ANON_52._CF_totalDigits,
   STD_ANON_52._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Piso (pyxb.binding.datatypes.string):

    """Piso"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Piso')
    _Documentation = u'Piso'
Piso._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
Piso._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
Piso._InitializeFacetMap(Piso._CF_maxLength,
   Piso._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'Piso', Piso)

# Atomic SimpleTypeDefinition
class STD_ANON_53 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_53._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_53, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_53._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_53._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_53._InitializeFacetMap(STD_ANON_53._CF_minInclusive,
   STD_ANON_53._CF_totalDigits,
   STD_ANON_53._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class IndicativoTipoCambioTitular (pyxb.binding.datatypes.string):

    """indicativo de tipo de cambio de titular (T Traspaso/ S Subrogaci&#243;n/ J   Justo t&#237;tulo o cambio a su nombre/ B Baja y alta simult&#225;nea sin ruptura de ciclo/ H Baja y alta simult&#225;nea con lectura real y ruptura de facturaci&#243;n/ A Cambia solo datos administrativos: cuando se pide modificar datos del cliente que no afectan a la titularidad: direcci&#243;n de env&#237;o, tel&#233;fono de contacto...etc
)"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IndicativoTipoCambioTitular')
    _Documentation = u'indicativo de tipo de cambio de titular (T Traspaso/ S Subrogaci\xf3n/ J   Justo t\xedtulo o cambio a su nombre/ B Baja y alta simult\xe1nea sin ruptura de ciclo/ H Baja y alta simult\xe1nea con lectura real y ruptura de facturaci\xf3n/ A Cambia solo datos administrativos: cuando se pide modificar datos del cliente que no afectan a la titularidad: direcci\xf3n de env\xedo, tel\xe9fono de contacto...etc\n)'
IndicativoTipoCambioTitular._CF_length = pyxb.binding.facets.CF_length(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
IndicativoTipoCambioTitular._CF_pattern = pyxb.binding.facets.CF_pattern()
IndicativoTipoCambioTitular._CF_pattern.addPattern(pattern=u'T|S|J|B|H|A')
IndicativoTipoCambioTitular._InitializeFacetMap(IndicativoTipoCambioTitular._CF_length,
   IndicativoTipoCambioTitular._CF_pattern)
Namespace.addCategoryObject('typeBinding', u'IndicativoTipoCambioTitular', IndicativoTipoCambioTitular)

# Atomic SimpleTypeDefinition
class TipoPropiedad (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo propietario
			1	Distribuidor	
			2	Cliente	
			3	Comercializador	
			4	Otros
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoPropiedad')
    _Documentation = u'Tipo propietario\n\t\t\t1\tDistribuidor\t\n\t\t\t2\tCliente\t\n\t\t\t3\tComercializador\t\n\t\t\t4\tOtros\n\t\t\t'
TipoPropiedad._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoPropiedad, enum_prefix=None)
TipoPropiedad.n1 = TipoPropiedad._CF_enumeration.addEnumeration(unicode_value=u'1')
TipoPropiedad.n2 = TipoPropiedad._CF_enumeration.addEnumeration(unicode_value=u'2')
TipoPropiedad.n3 = TipoPropiedad._CF_enumeration.addEnumeration(unicode_value=u'3')
TipoPropiedad.n4 = TipoPropiedad._CF_enumeration.addEnumeration(unicode_value=u'4')
TipoPropiedad._InitializeFacetMap(TipoPropiedad._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoPropiedad', TipoPropiedad)

# Atomic SimpleTypeDefinition
class X8 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'X8')
    _Documentation = None
X8._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(8L))
X8._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
X8._InitializeFacetMap(X8._CF_maxLength,
   X8._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'X8', X8)

# Atomic SimpleTypeDefinition
class STD_ANON_54 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_54._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(40L))
STD_ANON_54._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_54._InitializeFacetMap(STD_ANON_54._CF_maxLength,
   STD_ANON_54._CF_minLength)

# Atomic SimpleTypeDefinition
class CodigoMotivoIncidencia (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """codigo motivo de la incidencia
			01	Cliente ausente
			02	Acceso imposibilitado 
			03	Deficiencias en la instalaci&#243;n
			04	Posible anormalidad/fraude
			05	El cliente aporta el equipo y no lo ha puesto a disposici&#243;n la distribuidora
			06	El equipo aportado por el cliente no es el adecuado
			07	Inexistencia de ICP y no se informa sobre quien lo aporta
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CodigoMotivoIncidencia')
    _Documentation = u'codigo motivo de la incidencia\n\t\t\t01\tCliente ausente\n\t\t\t02\tAcceso imposibilitado \n\t\t\t03\tDeficiencias en la instalaci\xf3n\n\t\t\t04\tPosible anormalidad/fraude\n\t\t\t05\tEl cliente aporta el equipo y no lo ha puesto a disposici\xf3n la distribuidora\n\t\t\t06\tEl equipo aportado por el cliente no es el adecuado\n\t\t\t07\tInexistencia de ICP y no se informa sobre quien lo aporta\n\t\t\t'
CodigoMotivoIncidencia._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=CodigoMotivoIncidencia, enum_prefix=None)
CodigoMotivoIncidencia.n01 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'01')
CodigoMotivoIncidencia.n02 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'02')
CodigoMotivoIncidencia.n03 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'03')
CodigoMotivoIncidencia.n04 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'04')
CodigoMotivoIncidencia.n05 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'05')
CodigoMotivoIncidencia.n06 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'06')
CodigoMotivoIncidencia.n07 = CodigoMotivoIncidencia._CF_enumeration.addEnumeration(unicode_value=u'07')
CodigoMotivoIncidencia._InitializeFacetMap(CodigoMotivoIncidencia._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'CodigoMotivoIncidencia', CodigoMotivoIncidencia)

# Atomic SimpleTypeDefinition
class TipoDHMaximas (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Tipo de discriminacion horaria maximas Tabla 50
			Modo 1 Sin Maximetro
			Modo 2 Con un maximetro
			Modo 3 Con dos maximetros
			Modo 4 Con tres maximetros
			Modo 5 Estacional Tipo A
			Modo 6 Estacional Tipo B
			THP
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoDHMaximas')
    _Documentation = u'Tipo de discriminacion horaria maximas Tabla 50\n\t\t\tModo 1 Sin Maximetro\n\t\t\tModo 2 Con un maximetro\n\t\t\tModo 3 Con dos maximetros\n\t\t\tModo 4 Con tres maximetros\n\t\t\tModo 5 Estacional Tipo A\n\t\t\tModo 6 Estacional Tipo B\n\t\t\tTHP\n\t\t\t'
TipoDHMaximas._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoDHMaximas, enum_prefix=None)
TipoDHMaximas.n1 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'1')
TipoDHMaximas.n2 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'2')
TipoDHMaximas.n3 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'3')
TipoDHMaximas.n4 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'4')
TipoDHMaximas.n5 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'5')
TipoDHMaximas.n6 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'6')
TipoDHMaximas.n7 = TipoDHMaximas._CF_enumeration.addEnumeration(unicode_value=u'7')
TipoDHMaximas._InitializeFacetMap(TipoDHMaximas._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoDHMaximas', TipoDHMaximas)

# Atomic SimpleTypeDefinition
class TarifaATR (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """tipo Tarifa  
			001	2.0.A	
			002	2.0.N.A 	
			003	3.0A	
			004	2.0DHA	
			005	2.1A
			006	2.1DHA
			011	3.1A	
			012	6.1	
			013	6.2	
			014	6.3	
			015	6.4	
			016	6.5
			901   Tf. Peaje BT 2.0  Modo 2
			902   Tf. Peaje BT 2.0N Modo 2		
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TarifaATR')
    _Documentation = u'tipo Tarifa  \n\t\t\t001\t2.0.A\t\n\t\t\t002\t2.0.N.A \t\n\t\t\t003\t3.0A\t\n\t\t\t004\t2.0DHA\t\n\t\t\t005\t2.1A\n\t\t\t006\t2.1DHA\n\t\t\t011\t3.1A\t\n\t\t\t012\t6.1\t\n\t\t\t013\t6.2\t\n\t\t\t014\t6.3\t\n\t\t\t015\t6.4\t\n\t\t\t016\t6.5\n\t\t\t901   Tf. Peaje BT 2.0  Modo 2\n\t\t\t902   Tf. Peaje BT 2.0N Modo 2\t\t\n\t\t\t'
TarifaATR._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TarifaATR, enum_prefix=None)
TarifaATR.n001 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'001')
TarifaATR.n002 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'002')
TarifaATR.n003 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'003')
TarifaATR.n004 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'004')
TarifaATR.n005 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'005')
TarifaATR.n006 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'006')
TarifaATR.n011 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'011')
TarifaATR.n012 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'012')
TarifaATR.n013 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'013')
TarifaATR.n014 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'014')
TarifaATR.n015 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'015')
TarifaATR.n016 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'016')
TarifaATR.n901 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'901')
TarifaATR.n902 = TarifaATR._CF_enumeration.addEnumeration(unicode_value=u'902')
TarifaATR._InitializeFacetMap(TarifaATR._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TarifaATR', TarifaATR)

# Atomic SimpleTypeDefinition
class TipoMovimiento (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """Funcion Tabla 31
			CX	Conexi&#243;n y precintado	
			MO	Montaje	
			RE	Reparametrizaci&#243;n	
			DX	Desconexion	
			"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento')
    _Documentation = u'Funcion Tabla 31\n\t\t\tCX\tConexi\xf3n y precintado\t\n\t\t\tMO\tMontaje\t\n\t\t\tRE\tReparametrizaci\xf3n\t\n\t\t\tDX\tDesconexion\t\n\t\t\t'
TipoMovimiento._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TipoMovimiento, enum_prefix=None)
TipoMovimiento.CX = TipoMovimiento._CF_enumeration.addEnumeration(unicode_value=u'CX')
TipoMovimiento.MO = TipoMovimiento._CF_enumeration.addEnumeration(unicode_value=u'MO')
TipoMovimiento.RE = TipoMovimiento._CF_enumeration.addEnumeration(unicode_value=u'RE')
TipoMovimiento.DX = TipoMovimiento._CF_enumeration.addEnumeration(unicode_value=u'DX')
TipoMovimiento._InitializeFacetMap(TipoMovimiento._CF_enumeration)
Namespace.addCategoryObject('typeBinding', u'TipoMovimiento', TipoMovimiento)

# Atomic SimpleTypeDefinition
class STD_ANON_55 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_55._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=STD_ANON_55, value=pyxb.binding.datatypes.decimal(0.0))
STD_ANON_55._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_55._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_55._InitializeFacetMap(STD_ANON_55._CF_minInclusive,
   STD_ANON_55._CF_totalDigits,
   STD_ANON_55._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_56 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_56._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(8L))
STD_ANON_56._InitializeFacetMap(STD_ANON_56._CF_maxLength)

# Atomic SimpleTypeDefinition
class STD_ANON_57 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_57._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(15L))
STD_ANON_57._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2L))
STD_ANON_57._InitializeFacetMap(STD_ANON_57._CF_totalDigits,
   STD_ANON_57._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class STD_ANON_58 (pyxb.binding.datatypes.string, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_58._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_58, enum_prefix=None)
STD_ANON_58.F = STD_ANON_58._CF_enumeration.addEnumeration(unicode_value=u'F')
STD_ANON_58.S = STD_ANON_58._CF_enumeration.addEnumeration(unicode_value=u'S')
STD_ANON_58._InitializeFacetMap(STD_ANON_58._CF_enumeration)

# Atomic SimpleTypeDefinition
class Mes (Decimal12):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Mes')
    _Documentation = None
Mes._CF_minInclusive = pyxb.binding.facets.CF_minInclusive(value_datatype=Mes, value=pyxb.binding.datatypes.long(0L))
Mes._CF_maxInclusive = pyxb.binding.facets.CF_maxInclusive(value_datatype=Mes, value=pyxb.binding.datatypes.long(12L))
Mes._InitializeFacetMap(Mes._CF_minInclusive,
   Mes._CF_maxInclusive)
Namespace.addCategoryObject('typeBinding', u'Mes', Mes)

# Atomic SimpleTypeDefinition
class STD_ANON_59 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_59._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(100L))
STD_ANON_59._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
STD_ANON_59._InitializeFacetMap(STD_ANON_59._CF_maxLength,
   STD_ANON_59._CF_minLength)

# Atomic SimpleTypeDefinition
class STD_ANON_60 (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = None
    _Documentation = None
STD_ANON_60._CF_totalDigits = pyxb.binding.facets.CF_totalDigits(value=pyxb.binding.datatypes.positiveInteger(14L))
STD_ANON_60._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(4L))
STD_ANON_60._InitializeFacetMap(STD_ANON_60._CF_totalDigits,
   STD_ANON_60._CF_fractionDigits)

# Atomic SimpleTypeDefinition
class Escalera (pyxb.binding.datatypes.string):

    """Escalera"""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Escalera')
    _Documentation = u'Escalera'
Escalera._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(3L))
Escalera._CF_minLength = pyxb.binding.facets.CF_minLength(value=pyxb.binding.datatypes.nonNegativeInteger(1L))
Escalera._InitializeFacetMap(Escalera._CF_maxLength,
   Escalera._CF_minLength)
Namespace.addCategoryObject('typeBinding', u'Escalera', Escalera)

# Complex type NombreCliente with content type ELEMENT_ONLY
class NombreCliente (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'NombreCliente')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}SegundoApellido uses Python identifier SegundoApellido
    __SegundoApellido = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SegundoApellido'), 'SegundoApellido', '__httplocalhostelegibilidad_NombreCliente_httplocalhostelegibilidadSegundoApellido', False)

    
    SegundoApellido = property(__SegundoApellido.value, __SegundoApellido.set, None, None)

    
    # Element {http://localhost/elegibilidad}NombreDePila uses Python identifier NombreDePila
    __NombreDePila = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NombreDePila'), 'NombreDePila', '__httplocalhostelegibilidad_NombreCliente_httplocalhostelegibilidadNombreDePila', False)

    
    NombreDePila = property(__NombreDePila.value, __NombreDePila.set, None, None)

    
    # Element {http://localhost/elegibilidad}RazonSocial uses Python identifier RazonSocial
    __RazonSocial = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RazonSocial'), 'RazonSocial', '__httplocalhostelegibilidad_NombreCliente_httplocalhostelegibilidadRazonSocial', False)

    
    RazonSocial = property(__RazonSocial.value, __RazonSocial.set, None, None)

    
    # Element {http://localhost/elegibilidad}PrimerApellido uses Python identifier PrimerApellido
    __PrimerApellido = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PrimerApellido'), 'PrimerApellido', '__httplocalhostelegibilidad_NombreCliente_httplocalhostelegibilidadPrimerApellido', False)

    
    PrimerApellido = property(__PrimerApellido.value, __PrimerApellido.set, None, None)


    _ElementMap = {
        __SegundoApellido.name() : __SegundoApellido,
        __NombreDePila.name() : __NombreDePila,
        __RazonSocial.name() : __RazonSocial,
        __PrimerApellido.name() : __PrimerApellido
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'NombreCliente', NombreCliente)


# Complex type IdCliente with content type ELEMENT_ONLY
class IdCliente (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IdCliente')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Identificador uses Python identifier Identificador
    __Identificador = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Identificador'), 'Identificador', '__httplocalhostelegibilidad_IdCliente_httplocalhostelegibilidadIdentificador', False)

    
    Identificador = property(__Identificador.value, __Identificador.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoCIFNIF uses Python identifier TipoCIFNIF
    __TipoCIFNIF = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoCIFNIF'), 'TipoCIFNIF', '__httplocalhostelegibilidad_IdCliente_httplocalhostelegibilidadTipoCIFNIF', False)

    
    TipoCIFNIF = property(__TipoCIFNIF.value, __TipoCIFNIF.set, None, u'Tabla 6')


    _ElementMap = {
        __Identificador.name() : __Identificador,
        __TipoCIFNIF.name() : __TipoCIFNIF
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'IdCliente', IdCliente)


# Complex type ModelosAparato with content type ELEMENT_ONLY
class ModelosAparato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ModeloAparato uses Python identifier ModeloAparato
    __ModeloAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'), 'ModeloAparato', '__httplocalhostelegibilidad_ModelosAparato_httplocalhostelegibilidadModeloAparato', True)

    
    ModeloAparato = property(__ModeloAparato.value, __ModeloAparato.set, None, None)


    _ElementMap = {
        __ModeloAparato.name() : __ModeloAparato
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ModelosAparato', ModelosAparato)


# Complex type RegistrosDocs with content type ELEMENT_ONLY
class RegistrosDocs (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'RegistrosDocs')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}RegistroDoc uses Python identifier RegistroDoc
    __RegistroDoc = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'), 'RegistroDoc', '__httplocalhostelegibilidad_RegistrosDocs_httplocalhostelegibilidadRegistroDoc', True)

    
    RegistroDoc = property(__RegistroDoc.value, __RegistroDoc.set, None, None)


    _ElementMap = {
        __RegistroDoc.name() : __RegistroDoc
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'RegistrosDocs', RegistrosDocs)


# Complex type ContratoPasoMRAMLTarifa2SinCambios with content type ELEMENT_ONLY
class ContratoPasoMRAMLTarifa2SinCambios (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ContratoPasoMRAMLTarifa2SinCambios')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}DireccionCorrespondencia uses Python identifier DireccionCorrespondencia
    __DireccionCorrespondencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), 'DireccionCorrespondencia', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2SinCambios_httplocalhostelegibilidadDireccionCorrespondencia', False)

    
    DireccionCorrespondencia = property(__DireccionCorrespondencia.value, __DireccionCorrespondencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}IdContrato uses Python identifier IdContrato
    __IdContrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), 'IdContrato', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2SinCambios_httplocalhostelegibilidadIdContrato', False)

    
    IdContrato = property(__IdContrato.value, __IdContrato.set, None, None)

    
    # Element {http://localhost/elegibilidad}CuentaBancaria uses Python identifier CuentaBancaria
    __CuentaBancaria = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), 'CuentaBancaria', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2SinCambios_httplocalhostelegibilidadCuentaBancaria', False)

    
    CuentaBancaria = property(__CuentaBancaria.value, __CuentaBancaria.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaFinalizacion uses Python identifier FechaFinalizacion
    __FechaFinalizacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), 'FechaFinalizacion', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2SinCambios_httplocalhostelegibilidadFechaFinalizacion', False)

    
    FechaFinalizacion = property(__FechaFinalizacion.value, __FechaFinalizacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}Duracion uses Python identifier Duracion
    __Duracion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), 'Duracion', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2SinCambios_httplocalhostelegibilidadDuracion', False)

    
    Duracion = property(__Duracion.value, __Duracion.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoContratoATR uses Python identifier TipoContratoATR
    __TipoContratoATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), 'TipoContratoATR', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2SinCambios_httplocalhostelegibilidadTipoContratoATR', False)

    
    TipoContratoATR = property(__TipoContratoATR.value, __TipoContratoATR.set, None, None)


    _ElementMap = {
        __DireccionCorrespondencia.name() : __DireccionCorrespondencia,
        __IdContrato.name() : __IdContrato,
        __CuentaBancaria.name() : __CuentaBancaria,
        __FechaFinalizacion.name() : __FechaFinalizacion,
        __Duracion.name() : __Duracion,
        __TipoContratoATR.name() : __TipoContratoATR
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ContratoPasoMRAMLTarifa2SinCambios', ContratoPasoMRAMLTarifa2SinCambios)


# Complex type CTD_ANON_1 with content type ELEMENT_ONLY
class CTD_ANON_1 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImporteTotalEnergiaReactiva uses Python identifier ImporteTotalEnergiaReactiva
    __ImporteTotalEnergiaReactiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'), 'ImporteTotalEnergiaReactiva', '__httplocalhostelegibilidad_CTD_ANON_1_httplocalhostelegibilidadImporteTotalEnergiaReactiva', False)

    
    ImporteTotalEnergiaReactiva = property(__ImporteTotalEnergiaReactiva.value, __ImporteTotalEnergiaReactiva.set, None, None)

    
    # Element {http://localhost/elegibilidad}TerminoEnergiaReactiva uses Python identifier TerminoEnergiaReactiva
    __TerminoEnergiaReactiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'), 'TerminoEnergiaReactiva', '__httplocalhostelegibilidad_CTD_ANON_1_httplocalhostelegibilidadTerminoEnergiaReactiva', True)

    
    TerminoEnergiaReactiva = property(__TerminoEnergiaReactiva.value, __TerminoEnergiaReactiva.set, None, None)


    _ElementMap = {
        __ImporteTotalEnergiaReactiva.name() : __ImporteTotalEnergiaReactiva,
        __TerminoEnergiaReactiva.name() : __TerminoEnergiaReactiva
    }
    _AttributeMap = {
        
    }



# Complex type ModeloAparato with content type ELEMENT_ONLY
class ModeloAparato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ModeloMarca uses Python identifier ModeloMarca
    __ModeloMarca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ModeloMarca'), 'ModeloMarca', '__httplocalhostelegibilidad_ModeloAparato_httplocalhostelegibilidadModeloMarca', False)

    
    ModeloMarca = property(__ModeloMarca.value, __ModeloMarca.set, None, None)

    
    # Element {http://localhost/elegibilidad}Tipo uses Python identifier Tipo
    __Tipo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Tipo'), 'Tipo', '__httplocalhostelegibilidad_ModeloAparato_httplocalhostelegibilidadTipo', False)

    
    Tipo = property(__Tipo.value, __Tipo.set, None, u'Tabla 24')

    
    # Element {http://localhost/elegibilidad}Marca uses Python identifier Marca
    __Marca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Marca'), 'Marca', '__httplocalhostelegibilidad_ModeloAparato_httplocalhostelegibilidadMarca', False)

    
    Marca = property(__Marca.value, __Marca.set, None, u'Tabla 25')


    _ElementMap = {
        __ModeloMarca.name() : __ModeloMarca,
        __Tipo.name() : __Tipo,
        __Marca.name() : __Marca
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ModeloAparato', ModeloAparato)


# Complex type Aparato with content type ELEMENT_ONLY
class Aparato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Aparato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}TipoPropiedadAparato uses Python identifier TipoPropiedadAparato
    __TipoPropiedadAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoPropiedadAparato'), 'TipoPropiedadAparato', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadTipoPropiedadAparato', False)

    
    TipoPropiedadAparato = property(__TipoPropiedadAparato.value, __TipoPropiedadAparato.set, None, None)

    
    # Element {http://localhost/elegibilidad}DatosAparatoNoICP uses Python identifier DatosAparatoNoICP
    __DatosAparatoNoICP = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoNoICP'), 'DatosAparatoNoICP', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadDatosAparatoNoICP', False)

    
    DatosAparatoNoICP = property(__DatosAparatoNoICP.value, __DatosAparatoNoICP.set, None, None)

    
    # Element {http://localhost/elegibilidad}Propietario uses Python identifier Propietario
    __Propietario = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Propietario'), 'Propietario', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadPropietario', False)

    
    Propietario = property(__Propietario.value, __Propietario.set, None, None)

    
    # Element {http://localhost/elegibilidad}ExtraccionLecturas uses Python identifier ExtraccionLecturas
    __ExtraccionLecturas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ExtraccionLecturas'), 'ExtraccionLecturas', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadExtraccionLecturas', False)

    
    ExtraccionLecturas = property(__ExtraccionLecturas.value, __ExtraccionLecturas.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoMovimiento uses Python identifier TipoMovimiento
    __TipoMovimiento = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento'), 'TipoMovimiento', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadTipoMovimiento', False)

    
    TipoMovimiento = property(__TipoMovimiento.value, __TipoMovimiento.set, None, None)

    
    # Element {http://localhost/elegibilidad}DiscriminacionHorariaActiva uses Python identifier DiscriminacionHorariaActiva
    __DiscriminacionHorariaActiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaActiva'), 'DiscriminacionHorariaActiva', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadDiscriminacionHorariaActiva', False)

    
    DiscriminacionHorariaActiva = property(__DiscriminacionHorariaActiva.value, __DiscriminacionHorariaActiva.set, None, None)

    
    # Element {http://localhost/elegibilidad}Medidas uses Python identifier Medidas
    __Medidas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Medidas'), 'Medidas', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadMedidas', False)

    
    Medidas = property(__Medidas.value, __Medidas.set, None, None)

    
    # Element {http://localhost/elegibilidad}DiscriminacionHorariaMaximas uses Python identifier DiscriminacionHorariaMaximas
    __DiscriminacionHorariaMaximas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaMaximas'), 'DiscriminacionHorariaMaximas', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadDiscriminacionHorariaMaximas', False)

    
    DiscriminacionHorariaMaximas = property(__DiscriminacionHorariaMaximas.value, __DiscriminacionHorariaMaximas.set, None, None)

    
    # Element {http://localhost/elegibilidad}Modelo uses Python identifier Modelo
    __Modelo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Modelo'), 'Modelo', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadModelo', False)

    
    Modelo = property(__Modelo.value, __Modelo.set, None, None)

    
    # Element {http://localhost/elegibilidad}LecturaDirecta uses Python identifier LecturaDirecta
    __LecturaDirecta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'), 'LecturaDirecta', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadLecturaDirecta', False)

    
    LecturaDirecta = property(__LecturaDirecta.value, __LecturaDirecta.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodPrecinto uses Python identifier CodPrecinto
    __CodPrecinto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'), 'CodPrecinto', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadCodPrecinto', False)

    
    CodPrecinto = property(__CodPrecinto.value, __CodPrecinto.set, None, u'Codigo de precinto')

    
    # Element {http://localhost/elegibilidad}DatosAparatoICP uses Python identifier DatosAparatoICP
    __DatosAparatoICP = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoICP'), 'DatosAparatoICP', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadDatosAparatoICP', False)

    
    DatosAparatoICP = property(__DatosAparatoICP.value, __DatosAparatoICP.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoEquipoMedida uses Python identifier TipoEquipoMedida
    __TipoEquipoMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), 'TipoEquipoMedida', '__httplocalhostelegibilidad_Aparato_httplocalhostelegibilidadTipoEquipoMedida', False)

    
    TipoEquipoMedida = property(__TipoEquipoMedida.value, __TipoEquipoMedida.set, None, None)


    _ElementMap = {
        __TipoPropiedadAparato.name() : __TipoPropiedadAparato,
        __DatosAparatoNoICP.name() : __DatosAparatoNoICP,
        __Propietario.name() : __Propietario,
        __ExtraccionLecturas.name() : __ExtraccionLecturas,
        __TipoMovimiento.name() : __TipoMovimiento,
        __DiscriminacionHorariaActiva.name() : __DiscriminacionHorariaActiva,
        __Medidas.name() : __Medidas,
        __DiscriminacionHorariaMaximas.name() : __DiscriminacionHorariaMaximas,
        __Modelo.name() : __Modelo,
        __LecturaDirecta.name() : __LecturaDirecta,
        __CodPrecinto.name() : __CodPrecinto,
        __DatosAparatoICP.name() : __DatosAparatoICP,
        __TipoEquipoMedida.name() : __TipoEquipoMedida
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Aparato', Aparato)


# Complex type Contrato with content type ELEMENT_ONLY
class Contrato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Contrato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}IdContrato uses Python identifier IdContrato
    __IdContrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), 'IdContrato', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadIdContrato', False)

    
    IdContrato = property(__IdContrato.value, __IdContrato.set, None, None)

    
    # Element {http://localhost/elegibilidad}Contacto uses Python identifier Contacto
    __Contacto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Contacto'), 'Contacto', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadContacto', False)

    
    Contacto = property(__Contacto.value, __Contacto.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionCorrespondencia uses Python identifier DireccionCorrespondencia
    __DireccionCorrespondencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), 'DireccionCorrespondencia', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadDireccionCorrespondencia', False)

    
    DireccionCorrespondencia = property(__DireccionCorrespondencia.value, __DireccionCorrespondencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaFinalizacion uses Python identifier FechaFinalizacion
    __FechaFinalizacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), 'FechaFinalizacion', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadFechaFinalizacion', False)

    
    FechaFinalizacion = property(__FechaFinalizacion.value, __FechaFinalizacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}CuentaBancaria uses Python identifier CuentaBancaria
    __CuentaBancaria = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), 'CuentaBancaria', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadCuentaBancaria', False)

    
    CuentaBancaria = property(__CuentaBancaria.value, __CuentaBancaria.set, None, None)

    
    # Element {http://localhost/elegibilidad}Duracion uses Python identifier Duracion
    __Duracion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), 'Duracion', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadDuracion', False)

    
    Duracion = property(__Duracion.value, __Duracion.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoContratoATR uses Python identifier TipoContratoATR
    __TipoContratoATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), 'TipoContratoATR', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadTipoContratoATR', False)

    
    TipoContratoATR = property(__TipoContratoATR.value, __TipoContratoATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}CondicionesContractuales uses Python identifier CondicionesContractuales
    __CondicionesContractuales = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales'), 'CondicionesContractuales', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadCondicionesContractuales', False)

    
    CondicionesContractuales = property(__CondicionesContractuales.value, __CondicionesContractuales.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConsumoAnualEstimado uses Python identifier ConsumoAnualEstimado
    __ConsumoAnualEstimado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConsumoAnualEstimado'), 'ConsumoAnualEstimado', '__httplocalhostelegibilidad_Contrato_httplocalhostelegibilidadConsumoAnualEstimado', False)

    
    ConsumoAnualEstimado = property(__ConsumoAnualEstimado.value, __ConsumoAnualEstimado.set, None, None)


    _ElementMap = {
        __IdContrato.name() : __IdContrato,
        __Contacto.name() : __Contacto,
        __DireccionCorrespondencia.name() : __DireccionCorrespondencia,
        __FechaFinalizacion.name() : __FechaFinalizacion,
        __CuentaBancaria.name() : __CuentaBancaria,
        __Duracion.name() : __Duracion,
        __TipoContratoATR.name() : __TipoContratoATR,
        __CondicionesContractuales.name() : __CondicionesContractuales,
        __ConsumoAnualEstimado.name() : __ConsumoAnualEstimado
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Contrato', Contrato)


# Complex type IdContrato with content type ELEMENT_ONLY
class IdContrato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IdContrato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}CodContrato uses Python identifier CodContrato
    __CodContrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodContrato'), 'CodContrato', '__httplocalhostelegibilidad_IdContrato_httplocalhostelegibilidadCodContrato', False)

    
    CodContrato = property(__CodContrato.value, __CodContrato.set, None, None)


    _ElementMap = {
        __CodContrato.name() : __CodContrato
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'IdContrato', IdContrato)


# Complex type LocalizacionPS with content type ELEMENT_ONLY
class LocalizacionPS (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'LocalizacionPS')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Municipio uses Python identifier Municipio
    __Municipio = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Municipio'), 'Municipio', '__httplocalhostelegibilidad_LocalizacionPS_httplocalhostelegibilidadMunicipio', False)

    
    Municipio = property(__Municipio.value, __Municipio.set, None, None)

    
    # Element {http://localhost/elegibilidad}Poblacion uses Python identifier Poblacion
    __Poblacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Poblacion'), 'Poblacion', '__httplocalhostelegibilidad_LocalizacionPS_httplocalhostelegibilidadPoblacion', False)

    
    Poblacion = property(__Poblacion.value, __Poblacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoVia uses Python identifier TipoVia
    __TipoVia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoVia'), 'TipoVia', '__httplocalhostelegibilidad_LocalizacionPS_httplocalhostelegibilidadTipoVia', False)

    
    TipoVia = property(__TipoVia.value, __TipoVia.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodPostal uses Python identifier CodPostal
    __CodPostal = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'), 'CodPostal', '__httplocalhostelegibilidad_LocalizacionPS_httplocalhostelegibilidadCodPostal', False)

    
    CodPostal = property(__CodPostal.value, __CodPostal.set, None, None)

    
    # Element {http://localhost/elegibilidad}Pais uses Python identifier Pais
    __Pais = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Pais'), 'Pais', '__httplocalhostelegibilidad_LocalizacionPS_httplocalhostelegibilidadPais', False)

    
    Pais = property(__Pais.value, __Pais.set, None, None)

    
    # Element {http://localhost/elegibilidad}Provincia uses Python identifier Provincia
    __Provincia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Provincia'), 'Provincia', '__httplocalhostelegibilidad_LocalizacionPS_httplocalhostelegibilidadProvincia', False)

    
    Provincia = property(__Provincia.value, __Provincia.set, None, None)


    _ElementMap = {
        __Municipio.name() : __Municipio,
        __Poblacion.name() : __Poblacion,
        __TipoVia.name() : __TipoVia,
        __CodPostal.name() : __CodPostal,
        __Pais.name() : __Pais,
        __Provincia.name() : __Provincia
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'LocalizacionPS', LocalizacionPS)


# Complex type Cabecera with content type ELEMENT_ONLY
class Cabecera (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Cabecera')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}CodigoREEEmpresaEmisora uses Python identifier CodigoREEEmpresaEmisora
    __CodigoREEEmpresaEmisora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoREEEmpresaEmisora'), 'CodigoREEEmpresaEmisora', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadCodigoREEEmpresaEmisora', False)

    
    CodigoREEEmpresaEmisora = property(__CodigoREEEmpresaEmisora.value, __CodigoREEEmpresaEmisora.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoREEEmpresaDestino uses Python identifier CodigoREEEmpresaDestino
    __CodigoREEEmpresaDestino = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoREEEmpresaDestino'), 'CodigoREEEmpresaDestino', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadCodigoREEEmpresaDestino', False)

    
    CodigoREEEmpresaDestino = property(__CodigoREEEmpresaDestino.value, __CodigoREEEmpresaDestino.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoDelProceso uses Python identifier CodigoDelProceso
    __CodigoDelProceso = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoDelProceso'), 'CodigoDelProceso', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadCodigoDelProceso', False)

    
    CodigoDelProceso = property(__CodigoDelProceso.value, __CodigoDelProceso.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoDePaso uses Python identifier CodigoDePaso
    __CodigoDePaso = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoDePaso'), 'CodigoDePaso', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadCodigoDePaso', False)

    
    CodigoDePaso = property(__CodigoDePaso.value, __CodigoDePaso.set, None, None)

    
    # Element {http://localhost/elegibilidad}Version uses Python identifier Version
    __Version = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Version'), 'Version', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadVersion', False)

    
    Version = property(__Version.value, __Version.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoDeSolicitud uses Python identifier CodigoDeSolicitud
    __CodigoDeSolicitud = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoDeSolicitud'), 'CodigoDeSolicitud', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadCodigoDeSolicitud', False)

    
    CodigoDeSolicitud = property(__CodigoDeSolicitud.value, __CodigoDeSolicitud.set, None, None)

    
    # Element {http://localhost/elegibilidad}SecuencialDeSolicitud uses Python identifier SecuencialDeSolicitud
    __SecuencialDeSolicitud = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SecuencialDeSolicitud'), 'SecuencialDeSolicitud', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadSecuencialDeSolicitud', False)

    
    SecuencialDeSolicitud = property(__SecuencialDeSolicitud.value, __SecuencialDeSolicitud.set, None, None)

    
    # Element {http://localhost/elegibilidad}Codigo uses Python identifier Codigo
    __Codigo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Codigo'), 'Codigo', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadCodigo', False)

    
    Codigo = property(__Codigo.value, __Codigo.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaSolicitud uses Python identifier FechaSolicitud
    __FechaSolicitud = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaSolicitud'), 'FechaSolicitud', '__httplocalhostelegibilidad_Cabecera_httplocalhostelegibilidadFechaSolicitud', False)

    
    FechaSolicitud = property(__FechaSolicitud.value, __FechaSolicitud.set, None, None)


    _ElementMap = {
        __CodigoREEEmpresaEmisora.name() : __CodigoREEEmpresaEmisora,
        __CodigoREEEmpresaDestino.name() : __CodigoREEEmpresaDestino,
        __CodigoDelProceso.name() : __CodigoDelProceso,
        __CodigoDePaso.name() : __CodigoDePaso,
        __Version.name() : __Version,
        __CodigoDeSolicitud.name() : __CodigoDeSolicitud,
        __SecuencialDeSolicitud.name() : __SecuencialDeSolicitud,
        __Codigo.name() : __Codigo,
        __FechaSolicitud.name() : __FechaSolicitud
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Cabecera', Cabecera)


# Complex type TelefonoInternacional with content type ELEMENT_ONLY
class TelefonoInternacional (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TelefonoInternacional')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Numero uses Python identifier Numero
    __Numero = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Numero'), 'Numero', '__httplocalhostelegibilidad_TelefonoInternacional_httplocalhostelegibilidadNumero', False)

    
    Numero = property(__Numero.value, __Numero.set, None, None)

    
    # Element {http://localhost/elegibilidad}PrefijoPais uses Python identifier PrefijoPais
    __PrefijoPais = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PrefijoPais'), 'PrefijoPais', '__httplocalhostelegibilidad_TelefonoInternacional_httplocalhostelegibilidadPrefijoPais', False)

    
    PrefijoPais = property(__PrefijoPais.value, __PrefijoPais.set, None, None)


    _ElementMap = {
        __Numero.name() : __Numero,
        __PrefijoPais.name() : __PrefijoPais
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'TelefonoInternacional', TelefonoInternacional)


# Complex type TipoIVAIGIC with content type ELEMENT_ONLY
class TipoIVAIGIC (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoIVAIGIC')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Importe uses Python identifier Importe
    __Importe = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Importe'), 'Importe', '__httplocalhostelegibilidad_TipoIVAIGIC_httplocalhostelegibilidadImporte', False)

    
    Importe = property(__Importe.value, __Importe.set, None, u'En Canarias se informar\xe1 IGIC; en el resto, IVA.')

    
    # Element {http://localhost/elegibilidad}BaseImponible uses Python identifier BaseImponible
    __BaseImponible = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'BaseImponible'), 'BaseImponible', '__httplocalhostelegibilidad_TipoIVAIGIC_httplocalhostelegibilidadBaseImponible', False)

    
    BaseImponible = property(__BaseImponible.value, __BaseImponible.set, None, u'En Canarias se informar\xe1 IGIC; en el resto, IVA.')

    
    # Element {http://localhost/elegibilidad}Porcentaje uses Python identifier Porcentaje
    __Porcentaje = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Porcentaje'), 'Porcentaje', '__httplocalhostelegibilidad_TipoIVAIGIC_httplocalhostelegibilidadPorcentaje', False)

    
    Porcentaje = property(__Porcentaje.value, __Porcentaje.set, None, u'En Canarias se informar\xe1 IGIC; en el resto, IVA.')


    _ElementMap = {
        __Importe.name() : __Importe,
        __BaseImponible.name() : __BaseImponible,
        __Porcentaje.name() : __Porcentaje
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'TipoIVAIGIC', TipoIVAIGIC)


# Complex type CTD_ANON_2 with content type ELEMENT_ONLY
class CTD_ANON_2 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImporteTotalEnergiaActiva uses Python identifier ImporteTotalEnergiaActiva
    __ImporteTotalEnergiaActiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'), 'ImporteTotalEnergiaActiva', '__httplocalhostelegibilidad_CTD_ANON_2_httplocalhostelegibilidadImporteTotalEnergiaActiva', False)

    
    ImporteTotalEnergiaActiva = property(__ImporteTotalEnergiaActiva.value, __ImporteTotalEnergiaActiva.set, None, None)

    
    # Element {http://localhost/elegibilidad}TerminoEnergiaActiva uses Python identifier TerminoEnergiaActiva
    __TerminoEnergiaActiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'), 'TerminoEnergiaActiva', '__httplocalhostelegibilidad_CTD_ANON_2_httplocalhostelegibilidadTerminoEnergiaActiva', True)

    
    TerminoEnergiaActiva = property(__TerminoEnergiaActiva.value, __TerminoEnergiaActiva.set, None, None)


    _ElementMap = {
        __ImporteTotalEnergiaActiva.name() : __ImporteTotalEnergiaActiva,
        __TerminoEnergiaActiva.name() : __TerminoEnergiaActiva
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_3 with content type ELEMENT_ONLY
class CTD_ANON_3 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}IVAIGICReducido uses Python identifier IVAIGICReducido
    __IVAIGICReducido = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IVAIGICReducido'), 'IVAIGICReducido', '__httplocalhostelegibilidad_CTD_ANON_3_httplocalhostelegibilidadIVAIGICReducido', False)

    
    IVAIGICReducido = property(__IVAIGICReducido.value, __IVAIGICReducido.set, None, None)

    
    # Element {http://localhost/elegibilidad}DatosGeneralesOtrasFacturas uses Python identifier DatosGeneralesOtrasFacturas
    __DatosGeneralesOtrasFacturas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesOtrasFacturas'), 'DatosGeneralesOtrasFacturas', '__httplocalhostelegibilidad_CTD_ANON_3_httplocalhostelegibilidadDatosGeneralesOtrasFacturas', False)

    
    DatosGeneralesOtrasFacturas = property(__DatosGeneralesOtrasFacturas.value, __DatosGeneralesOtrasFacturas.set, None, None)

    
    # Element {http://localhost/elegibilidad}IVA uses Python identifier IVA
    __IVA = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IVA'), 'IVA', '__httplocalhostelegibilidad_CTD_ANON_3_httplocalhostelegibilidadIVA', False)

    
    IVA = property(__IVA.value, __IVA.set, None, None)

    
    # Element {http://localhost/elegibilidad}Concepto uses Python identifier Concepto
    __Concepto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Concepto'), 'Concepto', '__httplocalhostelegibilidad_CTD_ANON_3_httplocalhostelegibilidadConcepto', True)

    
    Concepto = property(__Concepto.value, __Concepto.set, None, None)


    _ElementMap = {
        __IVAIGICReducido.name() : __IVAIGICReducido,
        __DatosGeneralesOtrasFacturas.name() : __DatosGeneralesOtrasFacturas,
        __IVA.name() : __IVA,
        __Concepto.name() : __Concepto
    }
    _AttributeMap = {
        
    }



# Complex type CuentaBancaria with content type ELEMENT_ONLY
class CuentaBancaria (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Cuenta uses Python identifier Cuenta
    __Cuenta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Cuenta'), 'Cuenta', '__httplocalhostelegibilidad_CuentaBancaria_httplocalhostelegibilidadCuenta', False)

    
    Cuenta = property(__Cuenta.value, __Cuenta.set, None, None)

    
    # Element {http://localhost/elegibilidad}Banco uses Python identifier Banco
    __Banco = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Banco'), 'Banco', '__httplocalhostelegibilidad_CuentaBancaria_httplocalhostelegibilidadBanco', False)

    
    Banco = property(__Banco.value, __Banco.set, None, None)

    
    # Element {http://localhost/elegibilidad}Sucursal uses Python identifier Sucursal
    __Sucursal = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Sucursal'), 'Sucursal', '__httplocalhostelegibilidad_CuentaBancaria_httplocalhostelegibilidadSucursal', False)

    
    Sucursal = property(__Sucursal.value, __Sucursal.set, None, None)

    
    # Element {http://localhost/elegibilidad}DC uses Python identifier DC
    __DC = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DC'), 'DC', '__httplocalhostelegibilidad_CuentaBancaria_httplocalhostelegibilidadDC', False)

    
    DC = property(__DC.value, __DC.set, None, None)


    _ElementMap = {
        __Cuenta.name() : __Cuenta,
        __Banco.name() : __Banco,
        __Sucursal.name() : __Sucursal,
        __DC.name() : __DC
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'CuentaBancaria', CuentaBancaria)


# Complex type TipoDatosGeneralesFactura with content type ELEMENT_ONLY
class TipoDatosGeneralesFactura (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoDatosGeneralesFactura')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}SaldoCobro uses Python identifier SaldoCobro
    __SaldoCobro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SaldoCobro'), 'SaldoCobro', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadSaldoCobro', False)

    
    SaldoCobro = property(__SaldoCobro.value, __SaldoCobro.set, None, u' Saldo cobro ')

    
    # Element {http://localhost/elegibilidad}CIFEmisora uses Python identifier CIFEmisora
    __CIFEmisora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CIFEmisora'), 'CIFEmisora', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadCIFEmisora', False)

    
    CIFEmisora = property(__CIFEmisora.value, __CIFEmisora.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoFactura uses Python identifier TipoFactura
    __TipoFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoFactura'), 'TipoFactura', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadTipoFactura', False)

    
    TipoFactura = property(__TipoFactura.value, __TipoFactura.set, None, u'Tabla 101 (Normal, fraude...)')

    
    # Element {http://localhost/elegibilidad}IndicativoFacturaRectificadora uses Python identifier IndicativoFacturaRectificadora
    __IndicativoFacturaRectificadora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IndicativoFacturaRectificadora'), 'IndicativoFacturaRectificadora', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadIndicativoFacturaRectificadora', False)

    
    IndicativoFacturaRectificadora = property(__IndicativoFacturaRectificadora.value, __IndicativoFacturaRectificadora.set, None, u'Tabla 102 (N-Normal, R-Rectificadora , A-Anuladora, B-Anuladora con sustituyente)')

    
    # Element {http://localhost/elegibilidad}Observaciones uses Python identifier Observaciones
    __Observaciones = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Observaciones'), 'Observaciones', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadObservaciones', False)

    
    Observaciones = property(__Observaciones.value, __Observaciones.set, None, u'Comentarios a la factura, como p.e. nro. Expte anormalidad ')

    
    # Element {http://localhost/elegibilidad}NumeroFacturaRectificada uses Python identifier NumeroFacturaRectificada
    __NumeroFacturaRectificada = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroFacturaRectificada'), 'NumeroFacturaRectificada', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadNumeroFacturaRectificada', False)

    
    NumeroFacturaRectificada = property(__NumeroFacturaRectificada.value, __NumeroFacturaRectificada.set, None, u'N\xfamero de factura a la que rectifica.')

    
    # Element {http://localhost/elegibilidad}NumeroFactura uses Python identifier NumeroFactura
    __NumeroFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroFactura'), 'NumeroFactura', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadNumeroFactura', False)

    
    NumeroFactura = property(__NumeroFactura.value, __NumeroFactura.set, None, u'N\xfamero de la factura (albar\xe1n, en su caso)')

    
    # Element {http://localhost/elegibilidad}ImporteTotalFactura uses Python identifier ImporteTotalFactura
    __ImporteTotalFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalFactura'), 'ImporteTotalFactura', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadImporteTotalFactura', False)

    
    ImporteTotalFactura = property(__ImporteTotalFactura.value, __ImporteTotalFactura.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaFactura uses Python identifier FechaFactura
    __FechaFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaFactura'), 'FechaFactura', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadFechaFactura', False)

    
    FechaFactura = property(__FechaFactura.value, __FechaFactura.set, None, u'Fecha oficial de la factura (albar\xe1n, en su caso)')

    
    # Element {http://localhost/elegibilidad}TipoMoneda uses Python identifier TipoMoneda
    __TipoMoneda = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda'), 'TipoMoneda', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadTipoMoneda', False)

    
    TipoMoneda = property(__TipoMoneda.value, __TipoMoneda.set, None, u'Tabla 104 (01-Pesetas, 02-Euros)')

    
    # Element {http://localhost/elegibilidad}SaldoFactura uses Python identifier SaldoFactura
    __SaldoFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SaldoFactura'), 'SaldoFactura', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadSaldoFactura', False)

    
    SaldoFactura = property(__SaldoFactura.value, __SaldoFactura.set, None, u'Para los casos de rectificaciones')

    
    # Element {http://localhost/elegibilidad}CodigoFiscalFactura uses Python identifier CodigoFiscalFactura
    __CodigoFiscalFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoFiscalFactura'), 'CodigoFiscalFactura', '__httplocalhostelegibilidad_TipoDatosGeneralesFactura_httplocalhostelegibilidadCodigoFiscalFactura', False)

    
    CodigoFiscalFactura = property(__CodigoFiscalFactura.value, __CodigoFiscalFactura.set, None, u'N\xfamero de IVA')


    _ElementMap = {
        __SaldoCobro.name() : __SaldoCobro,
        __CIFEmisora.name() : __CIFEmisora,
        __TipoFactura.name() : __TipoFactura,
        __IndicativoFacturaRectificadora.name() : __IndicativoFacturaRectificadora,
        __Observaciones.name() : __Observaciones,
        __NumeroFacturaRectificada.name() : __NumeroFacturaRectificada,
        __NumeroFactura.name() : __NumeroFactura,
        __ImporteTotalFactura.name() : __ImporteTotalFactura,
        __FechaFactura.name() : __FechaFactura,
        __TipoMoneda.name() : __TipoMoneda,
        __SaldoFactura.name() : __SaldoFactura,
        __CodigoFiscalFactura.name() : __CodigoFiscalFactura
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'TipoDatosGeneralesFactura', TipoDatosGeneralesFactura)


# Complex type CTD_ANON_4 with content type ELEMENT_ONLY
class CTD_ANON_4 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Importe uses Python identifier Importe
    __Importe = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Importe'), 'Importe', '__httplocalhostelegibilidad_CTD_ANON_4_httplocalhostelegibilidadImporte', False)

    
    Importe = property(__Importe.value, __Importe.set, None, None)

    
    # Element {http://localhost/elegibilidad}BaseImponible uses Python identifier BaseImponible
    __BaseImponible = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'BaseImponible'), 'BaseImponible', '__httplocalhostelegibilidad_CTD_ANON_4_httplocalhostelegibilidadBaseImponible', False)

    
    BaseImponible = property(__BaseImponible.value, __BaseImponible.set, None, None)

    
    # Element {http://localhost/elegibilidad}Coeficiente uses Python identifier Coeficiente
    __Coeficiente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Coeficiente'), 'Coeficiente', '__httplocalhostelegibilidad_CTD_ANON_4_httplocalhostelegibilidadCoeficiente', False)

    
    Coeficiente = property(__Coeficiente.value, __Coeficiente.set, None, None)

    
    # Element {http://localhost/elegibilidad}Porcentaje uses Python identifier Porcentaje
    __Porcentaje = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Porcentaje'), 'Porcentaje', '__httplocalhostelegibilidad_CTD_ANON_4_httplocalhostelegibilidadPorcentaje', False)

    
    Porcentaje = property(__Porcentaje.value, __Porcentaje.set, None, None)


    _ElementMap = {
        __Importe.name() : __Importe,
        __BaseImponible.name() : __BaseImponible,
        __Coeficiente.name() : __Coeficiente,
        __Porcentaje.name() : __Porcentaje
    }
    _AttributeMap = {
        
    }



# Complex type TipoDireccionSuministro with content type ELEMENT_ONLY
class TipoDireccionSuministro (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoDireccionSuministro')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}DirSuministro uses Python identifier DirSuministro
    __DirSuministro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DirSuministro'), 'DirSuministro', '__httplocalhostelegibilidad_TipoDireccionSuministro_httplocalhostelegibilidadDirSuministro', False)

    
    DirSuministro = property(__DirSuministro.value, __DirSuministro.set, None, None)

    
    # Element {http://localhost/elegibilidad}CUPS uses Python identifier CUPS
    __CUPS = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CUPS'), 'CUPS', '__httplocalhostelegibilidad_TipoDireccionSuministro_httplocalhostelegibilidadCUPS', False)

    
    CUPS = property(__CUPS.value, __CUPS.set, None, None)

    
    # Element {http://localhost/elegibilidad}Municipio uses Python identifier Municipio
    __Municipio = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Municipio'), 'Municipio', '__httplocalhostelegibilidad_TipoDireccionSuministro_httplocalhostelegibilidadMunicipio', False)

    
    Municipio = property(__Municipio.value, __Municipio.set, None, None)


    _ElementMap = {
        __DirSuministro.name() : __DirSuministro,
        __CUPS.name() : __CUPS,
        __Municipio.name() : __Municipio
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'TipoDireccionSuministro', TipoDireccionSuministro)


# Complex type CTD_ANON_5 with content type ELEMENT_ONLY
class CTD_ANON_5 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PrecioEnergiaReactiva uses Python identifier PrecioEnergiaReactiva
    __PrecioEnergiaReactiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PrecioEnergiaReactiva'), 'PrecioEnergiaReactiva', '__httplocalhostelegibilidad_CTD_ANON_5_httplocalhostelegibilidadPrecioEnergiaReactiva', False)

    
    PrecioEnergiaReactiva = property(__PrecioEnergiaReactiva.value, __PrecioEnergiaReactiva.set, None, None)

    
    # Element {http://localhost/elegibilidad}ValorEnergiaReactiva uses Python identifier ValorEnergiaReactiva
    __ValorEnergiaReactiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ValorEnergiaReactiva'), 'ValorEnergiaReactiva', '__httplocalhostelegibilidad_CTD_ANON_5_httplocalhostelegibilidadValorEnergiaReactiva', False)

    
    ValorEnergiaReactiva = property(__ValorEnergiaReactiva.value, __ValorEnergiaReactiva.set, None, None)


    _ElementMap = {
        __PrecioEnergiaReactiva.name() : __PrecioEnergiaReactiva,
        __ValorEnergiaReactiva.name() : __ValorEnergiaReactiva
    }
    _AttributeMap = {
        
    }



# Complex type CondicionesContractuales with content type ELEMENT_ONLY
class CondicionesContractuales (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PotenciasMaximas uses Python identifier PotenciasMaximas
    __PotenciasMaximas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciasMaximas'), 'PotenciasMaximas', '__httplocalhostelegibilidad_CondicionesContractuales_httplocalhostelegibilidadPotenciasMaximas', False)

    
    PotenciasMaximas = property(__PotenciasMaximas.value, __PotenciasMaximas.set, None, None)

    
    # Element {http://localhost/elegibilidad}TarifaATR uses Python identifier TarifaATR
    __TarifaATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'), 'TarifaATR', '__httplocalhostelegibilidad_CondicionesContractuales_httplocalhostelegibilidadTarifaATR', False)

    
    TarifaATR = property(__TarifaATR.value, __TarifaATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}PotenciasContratadas uses Python identifier PotenciasContratadas
    __PotenciasContratadas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'), 'PotenciasContratadas', '__httplocalhostelegibilidad_CondicionesContractuales_httplocalhostelegibilidadPotenciasContratadas', False)

    
    PotenciasContratadas = property(__PotenciasContratadas.value, __PotenciasContratadas.set, None, None)


    _ElementMap = {
        __PotenciasMaximas.name() : __PotenciasMaximas,
        __TarifaATR.name() : __TarifaATR,
        __PotenciasContratadas.name() : __PotenciasContratadas
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'CondicionesContractuales', CondicionesContractuales)


# Complex type Comentarios with content type ELEMENT_ONLY
class Comentarios (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Comentarios')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Comentario uses Python identifier Comentario
    __Comentario = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Comentario'), 'Comentario', '__httplocalhostelegibilidad_Comentarios_httplocalhostelegibilidadComentario', True)

    
    Comentario = property(__Comentario.value, __Comentario.set, None, None)


    _ElementMap = {
        __Comentario.name() : __Comentario
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Comentarios', Comentarios)


# Complex type CTD_ANON_6 with content type ELEMENT_ONLY
class CTD_ANON_6 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_CTD_ANON_6_httplocalhostelegibilidadPeriodo', True)

    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaDesde uses Python identifier FechaDesde
    __FechaDesde = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'), 'FechaDesde', '__httplocalhostelegibilidad_CTD_ANON_6_httplocalhostelegibilidadFechaDesde', False)

    
    FechaDesde = property(__FechaDesde.value, __FechaDesde.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaHasta uses Python identifier FechaHasta
    __FechaHasta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'), 'FechaHasta', '__httplocalhostelegibilidad_CTD_ANON_6_httplocalhostelegibilidadFechaHasta', False)

    
    FechaHasta = property(__FechaHasta.value, __FechaHasta.set, None, None)


    _ElementMap = {
        __Periodo.name() : __Periodo,
        __FechaDesde.name() : __FechaDesde,
        __FechaHasta.name() : __FechaHasta
    }
    _AttributeMap = {
        
    }



# Complex type MedidaResto with content type ELEMENT_ONLY
class MedidaResto (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MedidaResto')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ModelosAparato uses Python identifier ModelosAparato
    __ModelosAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'), 'ModelosAparato', '__httplocalhostelegibilidad_MedidaResto_httplocalhostelegibilidadModelosAparato', False)

    
    ModelosAparato = property(__ModelosAparato.value, __ModelosAparato.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoEquipoMedida uses Python identifier TipoEquipoMedida
    __TipoEquipoMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), 'TipoEquipoMedida', '__httplocalhostelegibilidad_MedidaResto_httplocalhostelegibilidadTipoEquipoMedida', False)

    
    TipoEquipoMedida = property(__TipoEquipoMedida.value, __TipoEquipoMedida.set, None, None)

    
    # Element {http://localhost/elegibilidad}ICPAportadoInstalado uses Python identifier ICPAportadoInstalado
    __ICPAportadoInstalado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'), 'ICPAportadoInstalado', '__httplocalhostelegibilidad_MedidaResto_httplocalhostelegibilidadICPAportadoInstalado', False)

    
    ICPAportadoInstalado = property(__ICPAportadoInstalado.value, __ICPAportadoInstalado.set, None, None)

    
    # Element {http://localhost/elegibilidad}ICPInstalacion uses Python identifier ICPInstalacion
    __ICPInstalacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'), 'ICPInstalacion', '__httplocalhostelegibilidad_MedidaResto_httplocalhostelegibilidadICPInstalacion', False)

    
    ICPInstalacion = property(__ICPInstalacion.value, __ICPInstalacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}EquipoAportadoCliente uses Python identifier EquipoAportadoCliente
    __EquipoAportadoCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'), 'EquipoAportadoCliente', '__httplocalhostelegibilidad_MedidaResto_httplocalhostelegibilidadEquipoAportadoCliente', False)

    
    EquipoAportadoCliente = property(__EquipoAportadoCliente.value, __EquipoAportadoCliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}EquipoInstaladoCliente uses Python identifier EquipoInstaladoCliente
    __EquipoInstaladoCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'), 'EquipoInstaladoCliente', '__httplocalhostelegibilidad_MedidaResto_httplocalhostelegibilidadEquipoInstaladoCliente', False)

    
    EquipoInstaladoCliente = property(__EquipoInstaladoCliente.value, __EquipoInstaladoCliente.set, None, None)


    _ElementMap = {
        __ModelosAparato.name() : __ModelosAparato,
        __TipoEquipoMedida.name() : __TipoEquipoMedida,
        __ICPAportadoInstalado.name() : __ICPAportadoInstalado,
        __ICPInstalacion.name() : __ICPInstalacion,
        __EquipoAportadoCliente.name() : __EquipoAportadoCliente,
        __EquipoInstaladoCliente.name() : __EquipoInstaladoCliente
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'MedidaResto', MedidaResto)


# Complex type DireccionCorrespondencia with content type ELEMENT_ONLY
class DireccionCorrespondencia (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Direccion uses Python identifier Direccion
    __Direccion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Direccion'), 'Direccion', '__httplocalhostelegibilidad_DireccionCorrespondencia_httplocalhostelegibilidadDireccion', False)

    
    Direccion = property(__Direccion.value, __Direccion.set, None, None)

    
    # Element {http://localhost/elegibilidad}Indicador uses Python identifier Indicador
    __Indicador = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Indicador'), 'Indicador', '__httplocalhostelegibilidad_DireccionCorrespondencia_httplocalhostelegibilidadIndicador', False)

    
    Indicador = property(__Indicador.value, __Indicador.set, None, None)


    _ElementMap = {
        __Direccion.name() : __Direccion,
        __Indicador.name() : __Indicador
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'DireccionCorrespondencia', DireccionCorrespondencia)


# Complex type ClienteSinTelefono with content type ELEMENT_ONLY
class ClienteSinTelefono (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ClienteSinTelefono')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}TitularContratoVsTitularPago uses Python identifier TitularContratoVsTitularPago
    __TitularContratoVsTitularPago = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TitularContratoVsTitularPago'), 'TitularContratoVsTitularPago', '__httplocalhostelegibilidad_ClienteSinTelefono_httplocalhostelegibilidadTitularContratoVsTitularPago', False)

    
    TitularContratoVsTitularPago = property(__TitularContratoVsTitularPago.value, __TitularContratoVsTitularPago.set, None, None)

    
    # Element {http://localhost/elegibilidad}IdCliente uses Python identifier IdCliente
    __IdCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), 'IdCliente', '__httplocalhostelegibilidad_ClienteSinTelefono_httplocalhostelegibilidadIdCliente', False)

    
    IdCliente = property(__IdCliente.value, __IdCliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}Nombre uses Python identifier Nombre
    __Nombre = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), 'Nombre', '__httplocalhostelegibilidad_ClienteSinTelefono_httplocalhostelegibilidadNombre', False)

    
    Nombre = property(__Nombre.value, __Nombre.set, None, None)


    _ElementMap = {
        __TitularContratoVsTitularPago.name() : __TitularContratoVsTitularPago,
        __IdCliente.name() : __IdCliente,
        __Nombre.name() : __Nombre
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ClienteSinTelefono', ClienteSinTelefono)


# Complex type CTD_ANON_7 with content type ELEMENT_ONLY
class CTD_ANON_7 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImporteFacturacionAlquileres uses Python identifier ImporteFacturacionAlquileres
    __ImporteFacturacionAlquileres = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteFacturacionAlquileres'), 'ImporteFacturacionAlquileres', '__httplocalhostelegibilidad_CTD_ANON_7_httplocalhostelegibilidadImporteFacturacionAlquileres', False)

    
    ImporteFacturacionAlquileres = property(__ImporteFacturacionAlquileres.value, __ImporteFacturacionAlquileres.set, None, u'Suma de alquileres de equipos asociados al CUPS.')


    _ElementMap = {
        __ImporteFacturacionAlquileres.name() : __ImporteFacturacionAlquileres
    }
    _AttributeMap = {
        
    }



# Complex type Potencias with content type ELEMENT_ONLY
class Potencias (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Potencias')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Potencia uses Python identifier Potencia
    __Potencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Potencia'), 'Potencia', '__httplocalhostelegibilidad_Potencias_httplocalhostelegibilidadPotencia', True)

    
    Potencia = property(__Potencia.value, __Potencia.set, None, None)


    _ElementMap = {
        __Potencia.name() : __Potencia
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Potencias', Potencias)


# Complex type CTD_ANON_8 with content type ELEMENT_ONLY
class CTD_ANON_8 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Aparato uses Python identifier Aparato
    __Aparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Aparato'), 'Aparato', '__httplocalhostelegibilidad_CTD_ANON_8_httplocalhostelegibilidadAparato', True)

    
    Aparato = property(__Aparato.value, __Aparato.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodUnificadoPuntoSuministro uses Python identifier CodUnificadoPuntoSuministro
    __CodUnificadoPuntoSuministro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodUnificadoPuntoSuministro'), 'CodUnificadoPuntoSuministro', '__httplocalhostelegibilidad_CTD_ANON_8_httplocalhostelegibilidadCodUnificadoPuntoSuministro', False)

    
    CodUnificadoPuntoSuministro = property(__CodUnificadoPuntoSuministro.value, __CodUnificadoPuntoSuministro.set, None, None)


    _ElementMap = {
        __Aparato.name() : __Aparato,
        __CodUnificadoPuntoSuministro.name() : __CodUnificadoPuntoSuministro
    }
    _AttributeMap = {
        
    }



# Complex type MedidasAparato with content type ELEMENT_ONLY
class MedidasAparato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MedidasAparato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Medida uses Python identifier Medida
    __Medida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Medida'), 'Medida', '__httplocalhostelegibilidad_MedidasAparato_httplocalhostelegibilidadMedida', True)

    
    Medida = property(__Medida.value, __Medida.set, None, None)


    _ElementMap = {
        __Medida.name() : __Medida
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'MedidasAparato', MedidasAparato)


# Complex type CTD_ANON_9 with content type ELEMENT_ONLY
class CTD_ANON_9 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_CTD_ANON_9_httplocalhostelegibilidadPeriodo', True)

    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaDesde uses Python identifier FechaDesde
    __FechaDesde = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'), 'FechaDesde', '__httplocalhostelegibilidad_CTD_ANON_9_httplocalhostelegibilidadFechaDesde', False)

    
    FechaDesde = property(__FechaDesde.value, __FechaDesde.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaHasta uses Python identifier FechaHasta
    __FechaHasta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'), 'FechaHasta', '__httplocalhostelegibilidad_CTD_ANON_9_httplocalhostelegibilidadFechaHasta', False)

    
    FechaHasta = property(__FechaHasta.value, __FechaHasta.set, None, None)


    _ElementMap = {
        __Periodo.name() : __Periodo,
        __FechaDesde.name() : __FechaDesde,
        __FechaHasta.name() : __FechaHasta
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_10 with content type ELEMENT_ONLY
class CTD_ANON_10 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_CTD_ANON_10_httplocalhostelegibilidadPeriodo', True)

    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaDesde uses Python identifier FechaDesde
    __FechaDesde = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'), 'FechaDesde', '__httplocalhostelegibilidad_CTD_ANON_10_httplocalhostelegibilidadFechaDesde', False)

    
    FechaDesde = property(__FechaDesde.value, __FechaDesde.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaHasta uses Python identifier FechaHasta
    __FechaHasta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'), 'FechaHasta', '__httplocalhostelegibilidad_CTD_ANON_10_httplocalhostelegibilidadFechaHasta', False)

    
    FechaHasta = property(__FechaHasta.value, __FechaHasta.set, None, None)


    _ElementMap = {
        __Periodo.name() : __Periodo,
        __FechaDesde.name() : __FechaDesde,
        __FechaHasta.name() : __FechaHasta
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_11 with content type ELEMENT_ONLY
class CTD_ANON_11 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}DatosFacturaATR uses Python identifier DatosFacturaATR
    __DatosFacturaATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosFacturaATR'), 'DatosFacturaATR', '__httplocalhostelegibilidad_CTD_ANON_11_httplocalhostelegibilidadDatosFacturaATR', False)

    
    DatosFacturaATR = property(__DatosFacturaATR.value, __DatosFacturaATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionSuministro uses Python identifier DireccionSuministro
    __DireccionSuministro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionSuministro'), 'DireccionSuministro', '__httplocalhostelegibilidad_CTD_ANON_11_httplocalhostelegibilidadDireccionSuministro', False)

    
    DireccionSuministro = property(__DireccionSuministro.value, __DireccionSuministro.set, None, None)

    
    # Element {http://localhost/elegibilidad}Contrato uses Python identifier Contrato
    __Contrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Contrato'), 'Contrato', '__httplocalhostelegibilidad_CTD_ANON_11_httplocalhostelegibilidadContrato', False)

    
    Contrato = property(__Contrato.value, __Contrato.set, None, None)

    
    # Element {http://localhost/elegibilidad}DatosGeneralesFactura uses Python identifier DatosGeneralesFactura
    __DatosGeneralesFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFactura'), 'DatosGeneralesFactura', '__httplocalhostelegibilidad_CTD_ANON_11_httplocalhostelegibilidadDatosGeneralesFactura', False)

    
    DatosGeneralesFactura = property(__DatosGeneralesFactura.value, __DatosGeneralesFactura.set, None, None)

    
    # Element {http://localhost/elegibilidad}Cliente uses Python identifier Cliente
    __Cliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Cliente'), 'Cliente', '__httplocalhostelegibilidad_CTD_ANON_11_httplocalhostelegibilidadCliente', False)

    
    Cliente = property(__Cliente.value, __Cliente.set, None, None)


    _ElementMap = {
        __DatosFacturaATR.name() : __DatosFacturaATR,
        __DireccionSuministro.name() : __DireccionSuministro,
        __Contrato.name() : __Contrato,
        __DatosGeneralesFactura.name() : __DatosGeneralesFactura,
        __Cliente.name() : __Cliente
    }
    _AttributeMap = {
        
    }



# Complex type ContratoPasoMRAMLTarifa2ConCambios with content type ELEMENT_ONLY
class ContratoPasoMRAMLTarifa2ConCambios (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ContratoPasoMRAMLTarifa2ConCambios')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}CondicionesContractuales2n uses Python identifier CondicionesContractuales2n
    __CondicionesContractuales2n = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales2n'), 'CondicionesContractuales2n', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadCondicionesContractuales2n', False)

    
    CondicionesContractuales2n = property(__CondicionesContractuales2n.value, __CondicionesContractuales2n.set, None, None)

    
    # Element {http://localhost/elegibilidad}Contacto uses Python identifier Contacto
    __Contacto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Contacto'), 'Contacto', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadContacto', False)

    
    Contacto = property(__Contacto.value, __Contacto.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionCorrespondencia uses Python identifier DireccionCorrespondencia
    __DireccionCorrespondencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), 'DireccionCorrespondencia', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadDireccionCorrespondencia', False)

    
    DireccionCorrespondencia = property(__DireccionCorrespondencia.value, __DireccionCorrespondencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}CuentaBancaria uses Python identifier CuentaBancaria
    __CuentaBancaria = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), 'CuentaBancaria', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadCuentaBancaria', False)

    
    CuentaBancaria = property(__CuentaBancaria.value, __CuentaBancaria.set, None, None)

    
    # Element {http://localhost/elegibilidad}IdContrato uses Python identifier IdContrato
    __IdContrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), 'IdContrato', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadIdContrato', False)

    
    IdContrato = property(__IdContrato.value, __IdContrato.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaFinalizacion uses Python identifier FechaFinalizacion
    __FechaFinalizacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), 'FechaFinalizacion', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadFechaFinalizacion', False)

    
    FechaFinalizacion = property(__FechaFinalizacion.value, __FechaFinalizacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}Duracion uses Python identifier Duracion
    __Duracion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), 'Duracion', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadDuracion', False)

    
    Duracion = property(__Duracion.value, __Duracion.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoContratoATR uses Python identifier TipoContratoATR
    __TipoContratoATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), 'TipoContratoATR', '__httplocalhostelegibilidad_ContratoPasoMRAMLTarifa2ConCambios_httplocalhostelegibilidadTipoContratoATR', False)

    
    TipoContratoATR = property(__TipoContratoATR.value, __TipoContratoATR.set, None, None)


    _ElementMap = {
        __CondicionesContractuales2n.name() : __CondicionesContractuales2n,
        __Contacto.name() : __Contacto,
        __DireccionCorrespondencia.name() : __DireccionCorrespondencia,
        __CuentaBancaria.name() : __CuentaBancaria,
        __IdContrato.name() : __IdContrato,
        __FechaFinalizacion.name() : __FechaFinalizacion,
        __Duracion.name() : __Duracion,
        __TipoContratoATR.name() : __TipoContratoATR
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ContratoPasoMRAMLTarifa2ConCambios', ContratoPasoMRAMLTarifa2ConCambios)


# Complex type CTD_ANON_12 with content type ELEMENT_ONLY
class CTD_ANON_12 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ValorExcesoPotencia uses Python identifier ValorExcesoPotencia
    __ValorExcesoPotencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ValorExcesoPotencia'), 'ValorExcesoPotencia', '__httplocalhostelegibilidad_CTD_ANON_12_httplocalhostelegibilidadValorExcesoPotencia', False)

    
    ValorExcesoPotencia = property(__ValorExcesoPotencia.value, __ValorExcesoPotencia.set, None, u'En Watios')


    _ElementMap = {
        __ValorExcesoPotencia.name() : __ValorExcesoPotencia
    }
    _AttributeMap = {
        
    }



# Complex type Contacto with content type ELEMENT_ONLY
class Contacto (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Contacto')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Telefono uses Python identifier Telefono
    __Telefono = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Telefono'), 'Telefono', '__httplocalhostelegibilidad_Contacto_httplocalhostelegibilidadTelefono', False)

    
    Telefono = property(__Telefono.value, __Telefono.set, None, None)

    
    # Element {http://localhost/elegibilidad}Nombre uses Python identifier Nombre
    __Nombre = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), 'Nombre', '__httplocalhostelegibilidad_Contacto_httplocalhostelegibilidadNombre', False)

    
    Nombre = property(__Nombre.value, __Nombre.set, None, None)


    _ElementMap = {
        __Telefono.name() : __Telefono,
        __Nombre.name() : __Nombre
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Contacto', Contacto)


# Complex type DatosAparatoICP with content type ELEMENT_ONLY
class DatosAparatoICP (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoICP')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}NumIntegradores uses Python identifier NumIntegradores
    __NumIntegradores = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'), 'NumIntegradores', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadNumIntegradores', False)

    
    NumIntegradores = property(__NumIntegradores.value, __NumIntegradores.set, None, None)

    
    # Element {http://localhost/elegibilidad}NumeroSerie uses Python identifier NumeroSerie
    __NumeroSerie = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'), 'NumeroSerie', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadNumeroSerie', False)

    
    NumeroSerie = property(__NumeroSerie.value, __NumeroSerie.set, None, None)

    
    # Element {http://localhost/elegibilidad}FuncionAparato uses Python identifier FuncionAparato
    __FuncionAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'), 'FuncionAparato', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadFuncionAparato', False)

    
    FuncionAparato = property(__FuncionAparato.value, __FuncionAparato.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConstanteMaximetro uses Python identifier ConstanteMaximetro
    __ConstanteMaximetro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'), 'ConstanteMaximetro', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadConstanteMaximetro', False)

    
    ConstanteMaximetro = property(__ConstanteMaximetro.value, __ConstanteMaximetro.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConstanteEnergia uses Python identifier ConstanteEnergia
    __ConstanteEnergia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'), 'ConstanteEnergia', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadConstanteEnergia', False)

    
    ConstanteEnergia = property(__ConstanteEnergia.value, __ConstanteEnergia.set, None, None)

    
    # Element {http://localhost/elegibilidad}RuedasEnteras uses Python identifier RuedasEnteras
    __RuedasEnteras = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'), 'RuedasEnteras', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadRuedasEnteras', False)

    
    RuedasEnteras = property(__RuedasEnteras.value, __RuedasEnteras.set, None, None)

    
    # Element {http://localhost/elegibilidad}RuedasDecimales uses Python identifier RuedasDecimales
    __RuedasDecimales = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'), 'RuedasDecimales', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadRuedasDecimales', False)

    
    RuedasDecimales = property(__RuedasDecimales.value, __RuedasDecimales.set, None, None)

    
    # Element {http://localhost/elegibilidad}PeriodoFabricacion uses Python identifier PeriodoFabricacion
    __PeriodoFabricacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PeriodoFabricacion'), 'PeriodoFabricacion', '__httplocalhostelegibilidad_DatosAparatoICP_httplocalhostelegibilidadPeriodoFabricacion', False)

    
    PeriodoFabricacion = property(__PeriodoFabricacion.value, __PeriodoFabricacion.set, None, None)


    _ElementMap = {
        __NumIntegradores.name() : __NumIntegradores,
        __NumeroSerie.name() : __NumeroSerie,
        __FuncionAparato.name() : __FuncionAparato,
        __ConstanteMaximetro.name() : __ConstanteMaximetro,
        __ConstanteEnergia.name() : __ConstanteEnergia,
        __RuedasEnteras.name() : __RuedasEnteras,
        __RuedasDecimales.name() : __RuedasDecimales,
        __PeriodoFabricacion.name() : __PeriodoFabricacion
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'DatosAparatoICP', DatosAparatoICP)


# Complex type CTD_ANON_13 with content type ELEMENT_ONLY
class CTD_ANON_13 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Anomalia uses Python identifier Anomalia
    __Anomalia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'), 'Anomalia', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadAnomalia', False)

    
    Anomalia = property(__Anomalia.value, __Anomalia.set, None, None)

    
    # Element {http://localhost/elegibilidad}LecturaHasta uses Python identifier LecturaHasta
    __LecturaHasta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'LecturaHasta'), 'LecturaHasta', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadLecturaHasta', False)

    
    LecturaHasta = property(__LecturaHasta.value, __LecturaHasta.set, None, u'Valor actual de la ventana de facturaci\xf3n')

    
    # Element {http://localhost/elegibilidad}NumeroRuedasEnteras uses Python identifier NumeroRuedasEnteras
    __NumeroRuedasEnteras = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroRuedasEnteras'), 'NumeroRuedasEnteras', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadNumeroRuedasEnteras', False)

    
    NumeroRuedasEnteras = property(__NumeroRuedasEnteras.value, __NumeroRuedasEnteras.set, None, None)

    
    # Element {http://localhost/elegibilidad}Ajuste uses Python identifier Ajuste
    __Ajuste = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Ajuste'), 'Ajuste', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadAjuste', False)

    
    Ajuste = property(__Ajuste.value, __Ajuste.set, None, None)

    
    # Element {http://localhost/elegibilidad}NumeroRuedasDecimales uses Python identifier NumeroRuedasDecimales
    __NumeroRuedasDecimales = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroRuedasDecimales'), 'NumeroRuedasDecimales', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadNumeroRuedasDecimales', False)

    
    NumeroRuedasDecimales = property(__NumeroRuedasDecimales.value, __NumeroRuedasDecimales.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConstanteMultiplicadora uses Python identifier ConstanteMultiplicadora
    __ConstanteMultiplicadora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMultiplicadora'), 'ConstanteMultiplicadora', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadConstanteMultiplicadora', False)

    
    ConstanteMultiplicadora = property(__ConstanteMultiplicadora.value, __ConstanteMultiplicadora.set, None, u'Coeficiente de multiplicaci\xf3n del equipo')

    
    # Element {http://localhost/elegibilidad}ConsumoCalculado uses Python identifier ConsumoCalculado
    __ConsumoCalculado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConsumoCalculado'), 'ConsumoCalculado', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadConsumoCalculado', False)

    
    ConsumoCalculado = property(__ConsumoCalculado.value, __ConsumoCalculado.set, None, u'Consumo')

    
    # Element {http://localhost/elegibilidad}CodigoPeriodo uses Python identifier CodigoPeriodo
    __CodigoPeriodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoPeriodo'), 'CodigoPeriodo', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadCodigoPeriodo', False)

    
    CodigoPeriodo = property(__CodigoPeriodo.value, __CodigoPeriodo.set, None, u'Tabla 42')

    
    # Element {http://localhost/elegibilidad}FechaHoraMaximetro uses Python identifier FechaHoraMaximetro
    __FechaHoraMaximetro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaHoraMaximetro'), 'FechaHoraMaximetro', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadFechaHoraMaximetro', False)

    
    FechaHoraMaximetro = property(__FechaHoraMaximetro.value, __FechaHoraMaximetro.set, None, None)

    
    # Element {http://localhost/elegibilidad}Magnitud uses Python identifier Magnitud
    __Magnitud = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Magnitud'), 'Magnitud', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadMagnitud', False)

    
    Magnitud = property(__Magnitud.value, __Magnitud.set, None, u'Tabla 43')

    
    # Element {http://localhost/elegibilidad}LecturaDesde uses Python identifier LecturaDesde
    __LecturaDesde = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'LecturaDesde'), 'LecturaDesde', '__httplocalhostelegibilidad_CTD_ANON_13_httplocalhostelegibilidadLecturaDesde', False)

    
    LecturaDesde = property(__LecturaDesde.value, __LecturaDesde.set, None, u'Lectura anterior ventana de facturaci\xf3n')


    _ElementMap = {
        __Anomalia.name() : __Anomalia,
        __LecturaHasta.name() : __LecturaHasta,
        __NumeroRuedasEnteras.name() : __NumeroRuedasEnteras,
        __Ajuste.name() : __Ajuste,
        __NumeroRuedasDecimales.name() : __NumeroRuedasDecimales,
        __ConstanteMultiplicadora.name() : __ConstanteMultiplicadora,
        __ConsumoCalculado.name() : __ConsumoCalculado,
        __CodigoPeriodo.name() : __CodigoPeriodo,
        __FechaHoraMaximetro.name() : __FechaHoraMaximetro,
        __Magnitud.name() : __Magnitud,
        __LecturaDesde.name() : __LecturaDesde
    }
    _AttributeMap = {
        
    }



# Complex type PuntoDeMedida with content type ELEMENT_ONLY
class PuntoDeMedida (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}CUPS uses Python identifier CUPS
    __CUPS = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CUPS'), 'CUPS', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadCUPS', False)

    
    CUPS = property(__CUPS.value, __CUPS.set, None, None)

    
    # Element {http://localhost/elegibilidad}Aparatos uses Python identifier Aparatos
    __Aparatos = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Aparatos'), 'Aparatos', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadAparatos', False)

    
    Aparatos = property(__Aparatos.value, __Aparatos.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodPMPrincipal uses Python identifier CodPMPrincipal
    __CodPMPrincipal = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodPMPrincipal'), 'CodPMPrincipal', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadCodPMPrincipal', False)

    
    CodPMPrincipal = property(__CodPMPrincipal.value, __CodPMPrincipal.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodPM uses Python identifier CodPM
    __CodPM = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodPM'), 'CodPM', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadCodPM', False)

    
    CodPM = property(__CodPM.value, __CodPM.set, None, None)

    
    # Element {http://localhost/elegibilidad}ClaveAcceso uses Python identifier ClaveAcceso
    __ClaveAcceso = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'), 'ClaveAcceso', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadClaveAcceso', False)

    
    ClaveAcceso = property(__ClaveAcceso.value, __ClaveAcceso.set, None, None)

    
    # Element {http://localhost/elegibilidad}EstadoTelefono uses Python identifier EstadoTelefono
    __EstadoTelefono = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'), 'EstadoTelefono', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadEstadoTelefono', False)

    
    EstadoTelefono = property(__EstadoTelefono.value, __EstadoTelefono.set, None, None)

    
    # Element {http://localhost/elegibilidad}TensionPM uses Python identifier TensionPM
    __TensionPM = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'), 'TensionPM', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadTensionPM', False)

    
    TensionPM = property(__TensionPM.value, __TensionPM.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodREE uses Python identifier CodREE
    __CodREE = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodREE'), 'CodREE', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadCodREE', False)

    
    CodREE = property(__CodREE.value, __CodREE.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionPuntoMedida uses Python identifier DireccionPuntoMedida
    __DireccionPuntoMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionPuntoMedida'), 'DireccionPuntoMedida', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadDireccionPuntoMedida', False)

    
    DireccionPuntoMedida = property(__DireccionPuntoMedida.value, __DireccionPuntoMedida.set, None, None)

    
    # Element {http://localhost/elegibilidad}Funcion uses Python identifier Funcion
    __Funcion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Funcion'), 'Funcion', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadFuncion', False)

    
    Funcion = property(__Funcion.value, __Funcion.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaVigor uses Python identifier FechaVigor
    __FechaVigor = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'), 'FechaVigor', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadFechaVigor', False)

    
    FechaVigor = property(__FechaVigor.value, __FechaVigor.set, None, None)

    
    # Element {http://localhost/elegibilidad}EstadoPM uses Python identifier EstadoPM
    __EstadoPM = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EstadoPM'), 'EstadoPM', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadEstadoPM', False)

    
    EstadoPM = property(__EstadoPM.value, __EstadoPM.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaAlta uses Python identifier FechaAlta
    __FechaAlta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaAlta'), 'FechaAlta', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadFechaAlta', False)

    
    FechaAlta = property(__FechaAlta.value, __FechaAlta.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoPM uses Python identifier TipoPM
    __TipoPM = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoPM'), 'TipoPM', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadTipoPM', False)

    
    TipoPM = property(__TipoPM.value, __TipoPM.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaBaja uses Python identifier FechaBaja
    __FechaBaja = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaBaja'), 'FechaBaja', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadFechaBaja', False)

    
    FechaBaja = property(__FechaBaja.value, __FechaBaja.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoMovimiento uses Python identifier TipoMovimiento
    __TipoMovimiento = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento'), 'TipoMovimiento', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadTipoMovimiento', False)

    
    TipoMovimiento = property(__TipoMovimiento.value, __TipoMovimiento.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionEnlace uses Python identifier DireccionEnlace
    __DireccionEnlace = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionEnlace'), 'DireccionEnlace', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadDireccionEnlace', False)

    
    DireccionEnlace = property(__DireccionEnlace.value, __DireccionEnlace.set, None, None)

    
    # Element {http://localhost/elegibilidad}NumLinea uses Python identifier NumLinea
    __NumLinea = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumLinea'), 'NumLinea', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadNumLinea', False)

    
    NumLinea = property(__NumLinea.value, __NumLinea.set, None, None)

    
    # Element {http://localhost/elegibilidad}ComentariosPM uses Python identifier ComentariosPM
    __ComentariosPM = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ComentariosPM'), 'ComentariosPM', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadComentariosPM', False)

    
    ComentariosPM = property(__ComentariosPM.value, __ComentariosPM.set, None, None)

    
    # Element {http://localhost/elegibilidad}ModoLectura uses Python identifier ModoLectura
    __ModoLectura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ModoLectura'), 'ModoLectura', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadModoLectura', False)

    
    ModoLectura = property(__ModoLectura.value, __ModoLectura.set, None, None)

    
    # Element {http://localhost/elegibilidad}TelefonoTelemedida uses Python identifier TelefonoTelemedida
    __TelefonoTelemedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TelefonoTelemedida'), 'TelefonoTelemedida', '__httplocalhostelegibilidad_PuntoDeMedida_httplocalhostelegibilidadTelefonoTelemedida', False)

    
    TelefonoTelemedida = property(__TelefonoTelemedida.value, __TelefonoTelemedida.set, None, None)


    _ElementMap = {
        __CUPS.name() : __CUPS,
        __Aparatos.name() : __Aparatos,
        __CodPMPrincipal.name() : __CodPMPrincipal,
        __CodPM.name() : __CodPM,
        __ClaveAcceso.name() : __ClaveAcceso,
        __EstadoTelefono.name() : __EstadoTelefono,
        __TensionPM.name() : __TensionPM,
        __CodREE.name() : __CodREE,
        __DireccionPuntoMedida.name() : __DireccionPuntoMedida,
        __Funcion.name() : __Funcion,
        __FechaVigor.name() : __FechaVigor,
        __EstadoPM.name() : __EstadoPM,
        __FechaAlta.name() : __FechaAlta,
        __TipoPM.name() : __TipoPM,
        __FechaBaja.name() : __FechaBaja,
        __TipoMovimiento.name() : __TipoMovimiento,
        __DireccionEnlace.name() : __DireccionEnlace,
        __NumLinea.name() : __NumLinea,
        __ComentariosPM.name() : __ComentariosPM,
        __ModoLectura.name() : __ModoLectura,
        __TelefonoTelemedida.name() : __TelefonoTelemedida
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'PuntoDeMedida', PuntoDeMedida)


# Complex type ComentariosPM with content type ELEMENT_ONLY
class ComentariosPM (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ComentariosPM')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ComentarioPM uses Python identifier ComentarioPM
    __ComentarioPM = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'), 'ComentarioPM', '__httplocalhostelegibilidad_ComentariosPM_httplocalhostelegibilidadComentarioPM', True)

    
    ComentarioPM = property(__ComentarioPM.value, __ComentarioPM.set, None, None)


    _ElementMap = {
        __ComentarioPM.name() : __ComentarioPM
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ComentariosPM', ComentariosPM)


# Complex type CTD_ANON_14 with content type SIMPLE
class CTD_ANON_14 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = Potencia
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = None
    # Base type is Potencia
    
    # Attribute Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_CTD_ANON_14_Periodo', pyxb.binding.datatypes.integer, required=True)
    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)


    _ElementMap = {
        
    }
    _AttributeMap = {
        __Periodo.name() : __Periodo
    }



# Complex type PuntosDeMedida with content type ELEMENT_ONLY
class PuntosDeMedida (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'PuntosDeMedida')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PuntoDeMedida uses Python identifier PuntoDeMedida
    __PuntoDeMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'), 'PuntoDeMedida', '__httplocalhostelegibilidad_PuntosDeMedida_httplocalhostelegibilidadPuntoDeMedida', True)

    
    PuntoDeMedida = property(__PuntoDeMedida.value, __PuntoDeMedida.set, None, None)


    _ElementMap = {
        __PuntoDeMedida.name() : __PuntoDeMedida
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'PuntosDeMedida', PuntosDeMedida)


# Complex type CTD_ANON_15 with content type ELEMENT_ONLY
class CTD_ANON_15 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}NumeroMeses uses Python identifier NumeroMeses
    __NumeroMeses = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroMeses'), 'NumeroMeses', '__httplocalhostelegibilidad_CTD_ANON_15_httplocalhostelegibilidadNumeroMeses', False)

    
    NumeroMeses = property(__NumeroMeses.value, __NumeroMeses.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaDesdeFactura uses Python identifier FechaDesdeFactura
    __FechaDesdeFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaDesdeFactura'), 'FechaDesdeFactura', '__httplocalhostelegibilidad_CTD_ANON_15_httplocalhostelegibilidadFechaDesdeFactura', False)

    
    FechaDesdeFactura = property(__FechaDesdeFactura.value, __FechaDesdeFactura.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaHastaFactura uses Python identifier FechaHastaFactura
    __FechaHastaFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaHastaFactura'), 'FechaHastaFactura', '__httplocalhostelegibilidad_CTD_ANON_15_httplocalhostelegibilidadFechaHastaFactura', False)

    
    FechaHastaFactura = property(__FechaHastaFactura.value, __FechaHastaFactura.set, None, None)


    _ElementMap = {
        __NumeroMeses.name() : __NumeroMeses,
        __FechaDesdeFactura.name() : __FechaDesdeFactura,
        __FechaHastaFactura.name() : __FechaHastaFactura
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_16 with content type ELEMENT_ONLY
class CTD_ANON_16 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Integrador uses Python identifier Integrador
    __Integrador = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Integrador'), 'Integrador', '__httplocalhostelegibilidad_CTD_ANON_16_httplocalhostelegibilidadIntegrador', True)

    
    Integrador = property(__Integrador.value, __Integrador.set, None, None)

    
    # Element {http://localhost/elegibilidad}Tipo uses Python identifier Tipo
    __Tipo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Tipo'), 'Tipo', '__httplocalhostelegibilidad_CTD_ANON_16_httplocalhostelegibilidadTipo', False)

    
    Tipo = property(__Tipo.value, __Tipo.set, None, u'Tabla 24')

    
    # Element {http://localhost/elegibilidad}CodigoDH uses Python identifier CodigoDH
    __CodigoDH = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoDH'), 'CodigoDH', '__httplocalhostelegibilidad_CTD_ANON_16_httplocalhostelegibilidadCodigoDH', False)

    
    CodigoDH = property(__CodigoDH.value, __CodigoDH.set, None, u'Tabla 35')

    
    # Element {http://localhost/elegibilidad}NumeroSerie uses Python identifier NumeroSerie
    __NumeroSerie = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'), 'NumeroSerie', '__httplocalhostelegibilidad_CTD_ANON_16_httplocalhostelegibilidadNumeroSerie', False)

    
    NumeroSerie = property(__NumeroSerie.value, __NumeroSerie.set, None, None)

    
    # Element {http://localhost/elegibilidad}Marca uses Python identifier Marca
    __Marca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Marca'), 'Marca', '__httplocalhostelegibilidad_CTD_ANON_16_httplocalhostelegibilidadMarca', False)

    
    Marca = property(__Marca.value, __Marca.set, None, u'Tabla 25')


    _ElementMap = {
        __Integrador.name() : __Integrador,
        __Tipo.name() : __Tipo,
        __CodigoDH.name() : __CodigoDH,
        __NumeroSerie.name() : __NumeroSerie,
        __Marca.name() : __Marca
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_17 with content type ELEMENT_ONLY
class CTD_ANON_17 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_CTD_ANON_17_httplocalhostelegibilidadPeriodo', False)

    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoFacturacion uses Python identifier TipoFacturacion
    __TipoFacturacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoFacturacion'), 'TipoFacturacion', '__httplocalhostelegibilidad_CTD_ANON_17_httplocalhostelegibilidadTipoFacturacion', False)

    
    TipoFacturacion = property(__TipoFacturacion.value, __TipoFacturacion.set, None, u'Tabla 105 (1-Regular (Periodo completo); 2-Irregular (Periodo incompleto))')

    
    # Element {http://localhost/elegibilidad}CodigoTarifa uses Python identifier CodigoTarifa
    __CodigoTarifa = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoTarifa'), 'CodigoTarifa', '__httplocalhostelegibilidad_CTD_ANON_17_httplocalhostelegibilidadCodigoTarifa', False)

    
    CodigoTarifa = property(__CodigoTarifa.value, __CodigoTarifa.set, None, u'Tabla 107')

    
    # Element {http://localhost/elegibilidad}FechaBOE uses Python identifier FechaBOE
    __FechaBOE = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaBOE'), 'FechaBOE', '__httplocalhostelegibilidad_CTD_ANON_17_httplocalhostelegibilidadFechaBOE', False)

    
    FechaBOE = property(__FechaBOE.value, __FechaBOE.set, None, None)

    
    # Element {http://localhost/elegibilidad}IndAltamedidoenBaja uses Python identifier IndAltamedidoenBaja
    __IndAltamedidoenBaja = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IndAltamedidoenBaja'), 'IndAltamedidoenBaja', '__httplocalhostelegibilidad_CTD_ANON_17_httplocalhostelegibilidadIndAltamedidoenBaja', False)

    
    IndAltamedidoenBaja = property(__IndAltamedidoenBaja.value, __IndAltamedidoenBaja.set, None, None)


    _ElementMap = {
        __Periodo.name() : __Periodo,
        __TipoFacturacion.name() : __TipoFacturacion,
        __CodigoTarifa.name() : __CodigoTarifa,
        __FechaBOE.name() : __FechaBOE,
        __IndAltamedidoenBaja.name() : __IndAltamedidoenBaja
    }
    _AttributeMap = {
        
    }



# Complex type DatosAparatoNoICP with content type ELEMENT_ONLY
class DatosAparatoNoICP (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoNoICP')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}NumIntegradores uses Python identifier NumIntegradores
    __NumIntegradores = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'), 'NumIntegradores', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadNumIntegradores', False)

    
    NumIntegradores = property(__NumIntegradores.value, __NumIntegradores.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConstanteMaximetro uses Python identifier ConstanteMaximetro
    __ConstanteMaximetro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'), 'ConstanteMaximetro', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadConstanteMaximetro', False)

    
    ConstanteMaximetro = property(__ConstanteMaximetro.value, __ConstanteMaximetro.set, None, None)

    
    # Element {http://localhost/elegibilidad}RuedasEnteras uses Python identifier RuedasEnteras
    __RuedasEnteras = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'), 'RuedasEnteras', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadRuedasEnteras', False)

    
    RuedasEnteras = property(__RuedasEnteras.value, __RuedasEnteras.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConstanteEnergia uses Python identifier ConstanteEnergia
    __ConstanteEnergia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'), 'ConstanteEnergia', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadConstanteEnergia', False)

    
    ConstanteEnergia = property(__ConstanteEnergia.value, __ConstanteEnergia.set, None, None)

    
    # Element {http://localhost/elegibilidad}RuedasDecimales uses Python identifier RuedasDecimales
    __RuedasDecimales = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'), 'RuedasDecimales', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadRuedasDecimales', False)

    
    RuedasDecimales = property(__RuedasDecimales.value, __RuedasDecimales.set, None, None)

    
    # Element {http://localhost/elegibilidad}PeriodoFabricacion uses Python identifier PeriodoFabricacion
    __PeriodoFabricacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PeriodoFabricacion'), 'PeriodoFabricacion', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadPeriodoFabricacion', False)

    
    PeriodoFabricacion = property(__PeriodoFabricacion.value, __PeriodoFabricacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}NumeroSerie uses Python identifier NumeroSerie
    __NumeroSerie = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'), 'NumeroSerie', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadNumeroSerie', False)

    
    NumeroSerie = property(__NumeroSerie.value, __NumeroSerie.set, None, None)

    
    # Element {http://localhost/elegibilidad}FuncionAparato uses Python identifier FuncionAparato
    __FuncionAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'), 'FuncionAparato', '__httplocalhostelegibilidad_DatosAparatoNoICP_httplocalhostelegibilidadFuncionAparato', False)

    
    FuncionAparato = property(__FuncionAparato.value, __FuncionAparato.set, None, None)


    _ElementMap = {
        __NumIntegradores.name() : __NumIntegradores,
        __ConstanteMaximetro.name() : __ConstanteMaximetro,
        __RuedasEnteras.name() : __RuedasEnteras,
        __ConstanteEnergia.name() : __ConstanteEnergia,
        __RuedasDecimales.name() : __RuedasDecimales,
        __PeriodoFabricacion.name() : __PeriodoFabricacion,
        __NumeroSerie.name() : __NumeroSerie,
        __FuncionAparato.name() : __FuncionAparato
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'DatosAparatoNoICP', DatosAparatoNoICP)


# Complex type DatosAceptacion with content type ELEMENT_ONLY
class DatosAceptacion (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DatosAceptacion')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}FechaUltimaLectura uses Python identifier FechaUltimaLectura
    __FechaUltimaLectura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaUltimaLectura'), 'FechaUltimaLectura', '__httplocalhostelegibilidad_DatosAceptacion_httplocalhostelegibilidadFechaUltimaLectura', False)

    
    FechaUltimaLectura = property(__FechaUltimaLectura.value, __FechaUltimaLectura.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaAceptacion uses Python identifier FechaAceptacion
    __FechaAceptacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaAceptacion'), 'FechaAceptacion', '__httplocalhostelegibilidad_DatosAceptacion_httplocalhostelegibilidadFechaAceptacion', False)

    
    FechaAceptacion = property(__FechaAceptacion.value, __FechaAceptacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}PotenciaActual uses Python identifier PotenciaActual
    __PotenciaActual = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciaActual'), 'PotenciaActual', '__httplocalhostelegibilidad_DatosAceptacion_httplocalhostelegibilidadPotenciaActual', False)

    
    PotenciaActual = property(__PotenciaActual.value, __PotenciaActual.set, None, None)

    
    # Element {http://localhost/elegibilidad}ActuacionCampo uses Python identifier ActuacionCampo
    __ActuacionCampo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ActuacionCampo'), 'ActuacionCampo', '__httplocalhostelegibilidad_DatosAceptacion_httplocalhostelegibilidadActuacionCampo', False)

    
    ActuacionCampo = property(__ActuacionCampo.value, __ActuacionCampo.set, None, None)


    _ElementMap = {
        __FechaUltimaLectura.name() : __FechaUltimaLectura,
        __FechaAceptacion.name() : __FechaAceptacion,
        __PotenciaActual.name() : __PotenciaActual,
        __ActuacionCampo.name() : __ActuacionCampo
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'DatosAceptacion', DatosAceptacion)


# Complex type Aparatos with content type ELEMENT_ONLY
class Aparatos (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Aparatos')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Aparato uses Python identifier Aparato
    __Aparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Aparato'), 'Aparato', '__httplocalhostelegibilidad_Aparatos_httplocalhostelegibilidadAparato', True)

    
    Aparato = property(__Aparato.value, __Aparato.set, None, None)


    _ElementMap = {
        __Aparato.name() : __Aparato
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Aparatos', Aparatos)


# Complex type MedidaAparato with content type ELEMENT_ONLY
class MedidaAparato (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MedidaAparato')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadPeriodo', False)

    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)

    
    # Element {http://localhost/elegibilidad}MagnitudMedida uses Python identifier MagnitudMedida
    __MagnitudMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'MagnitudMedida'), 'MagnitudMedida', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadMagnitudMedida', False)

    
    MagnitudMedida = property(__MagnitudMedida.value, __MagnitudMedida.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoDH uses Python identifier TipoDH
    __TipoDH = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoDH'), 'TipoDH', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadTipoDH', False)

    
    TipoDH = property(__TipoDH.value, __TipoDH.set, None, None)

    
    # Element {http://localhost/elegibilidad}Procedencia uses Python identifier Procedencia
    __Procedencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Procedencia'), 'Procedencia', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadProcedencia', False)

    
    Procedencia = property(__Procedencia.value, __Procedencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}LecturaAnterior uses Python identifier LecturaAnterior
    __LecturaAnterior = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'LecturaAnterior'), 'LecturaAnterior', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadLecturaAnterior', False)

    
    LecturaAnterior = property(__LecturaAnterior.value, __LecturaAnterior.set, None, None)

    
    # Element {http://localhost/elegibilidad}Anomalia uses Python identifier Anomalia
    __Anomalia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'), 'Anomalia', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadAnomalia', False)

    
    Anomalia = property(__Anomalia.value, __Anomalia.set, None, None)

    
    # Element {http://localhost/elegibilidad}TextoAnomalia uses Python identifier TextoAnomalia
    __TextoAnomalia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'), 'TextoAnomalia', '__httplocalhostelegibilidad_MedidaAparato_httplocalhostelegibilidadTextoAnomalia', False)

    
    TextoAnomalia = property(__TextoAnomalia.value, __TextoAnomalia.set, None, None)


    _ElementMap = {
        __Periodo.name() : __Periodo,
        __MagnitudMedida.name() : __MagnitudMedida,
        __TipoDH.name() : __TipoDH,
        __Procedencia.name() : __Procedencia,
        __LecturaAnterior.name() : __LecturaAnterior,
        __Anomalia.name() : __Anomalia,
        __TextoAnomalia.name() : __TextoAnomalia
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'MedidaAparato', MedidaAparato)


# Complex type CTD_ANON_18 with content type ELEMENT_ONLY
class CTD_ANON_18 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Cabecera uses Python identifier Cabecera
    __Cabecera = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Cabecera'), 'Cabecera', '__httplocalhostelegibilidad_CTD_ANON_18_httplocalhostelegibilidadCabecera', False)

    
    Cabecera = property(__Cabecera.value, __Cabecera.set, None, None)

    
    # Element {http://localhost/elegibilidad}Facturas uses Python identifier Facturas
    __Facturas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Facturas'), 'Facturas', '__httplocalhostelegibilidad_CTD_ANON_18_httplocalhostelegibilidadFacturas', False)

    
    Facturas = property(__Facturas.value, __Facturas.set, None, None)

    
    # Element {http://localhost/elegibilidad}OtrosDatosFactura uses Python identifier OtrosDatosFactura
    __OtrosDatosFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'OtrosDatosFactura'), 'OtrosDatosFactura', '__httplocalhostelegibilidad_CTD_ANON_18_httplocalhostelegibilidadOtrosDatosFactura', False)

    
    OtrosDatosFactura = property(__OtrosDatosFactura.value, __OtrosDatosFactura.set, None, None)

    
    # Attribute Firmar uses Python identifier Firmar
    __Firmar = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, u'Firmar'), 'Firmar', '__httplocalhostelegibilidad_CTD_ANON_18_Firmar', pyxb.binding.datatypes.string)
    
    Firmar = property(__Firmar.value, __Firmar.set, None, None)

    
    # Attribute AgenteSolicitante uses Python identifier AgenteSolicitante
    __AgenteSolicitante = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, u'AgenteSolicitante'), 'AgenteSolicitante', '__httplocalhostelegibilidad_CTD_ANON_18_AgenteSolicitante', Agente, required=True)
    
    AgenteSolicitante = property(__AgenteSolicitante.value, __AgenteSolicitante.set, None, None)

    _HasWildcardElement = True

    _ElementMap = {
        __Cabecera.name() : __Cabecera,
        __Facturas.name() : __Facturas,
        __OtrosDatosFactura.name() : __OtrosDatosFactura
    }
    _AttributeMap = {
        __Firmar.name() : __Firmar,
        __AgenteSolicitante.name() : __AgenteSolicitante
    }



# Complex type CTD_ANON_19 with content type ELEMENT_ONLY
class CTD_ANON_19 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImporteTotalTerminoPotencia uses Python identifier ImporteTotalTerminoPotencia
    __ImporteTotalTerminoPotencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'), 'ImporteTotalTerminoPotencia', '__httplocalhostelegibilidad_CTD_ANON_19_httplocalhostelegibilidadImporteTotalTerminoPotencia', False)

    
    ImporteTotalTerminoPotencia = property(__ImporteTotalTerminoPotencia.value, __ImporteTotalTerminoPotencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}TerminoPotencia uses Python identifier TerminoPotencia
    __TerminoPotencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'), 'TerminoPotencia', '__httplocalhostelegibilidad_CTD_ANON_19_httplocalhostelegibilidadTerminoPotencia', True)

    
    TerminoPotencia = property(__TerminoPotencia.value, __TerminoPotencia.set, None, None)


    _ElementMap = {
        __ImporteTotalTerminoPotencia.name() : __ImporteTotalTerminoPotencia,
        __TerminoPotencia.name() : __TerminoPotencia
    }
    _AttributeMap = {
        
    }



# Complex type ContratoConModificacion with content type ELEMENT_ONLY
class ContratoConModificacion (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ContratoConModificacion')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Duracion uses Python identifier Duracion
    __Duracion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), 'Duracion', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadDuracion', False)

    
    Duracion = property(__Duracion.value, __Duracion.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConsumoAnualEstimado uses Python identifier ConsumoAnualEstimado
    __ConsumoAnualEstimado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConsumoAnualEstimado'), 'ConsumoAnualEstimado', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadConsumoAnualEstimado', False)

    
    ConsumoAnualEstimado = property(__ConsumoAnualEstimado.value, __ConsumoAnualEstimado.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoContratoATR uses Python identifier TipoContratoATR
    __TipoContratoATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), 'TipoContratoATR', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadTipoContratoATR', False)

    
    TipoContratoATR = property(__TipoContratoATR.value, __TipoContratoATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}CondicionesContractuales uses Python identifier CondicionesContractuales
    __CondicionesContractuales = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales'), 'CondicionesContractuales', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadCondicionesContractuales', False)

    
    CondicionesContractuales = property(__CondicionesContractuales.value, __CondicionesContractuales.set, None, None)

    
    # Element {http://localhost/elegibilidad}Contacto uses Python identifier Contacto
    __Contacto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Contacto'), 'Contacto', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadContacto', False)

    
    Contacto = property(__Contacto.value, __Contacto.set, None, None)

    
    # Element {http://localhost/elegibilidad}IdContrato uses Python identifier IdContrato
    __IdContrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), 'IdContrato', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadIdContrato', False)

    
    IdContrato = property(__IdContrato.value, __IdContrato.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionCorrespondencia uses Python identifier DireccionCorrespondencia
    __DireccionCorrespondencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), 'DireccionCorrespondencia', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadDireccionCorrespondencia', False)

    
    DireccionCorrespondencia = property(__DireccionCorrespondencia.value, __DireccionCorrespondencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}CuentaBancaria uses Python identifier CuentaBancaria
    __CuentaBancaria = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), 'CuentaBancaria', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadCuentaBancaria', False)

    
    CuentaBancaria = property(__CuentaBancaria.value, __CuentaBancaria.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaFinalizacion uses Python identifier FechaFinalizacion
    __FechaFinalizacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), 'FechaFinalizacion', '__httplocalhostelegibilidad_ContratoConModificacion_httplocalhostelegibilidadFechaFinalizacion', False)

    
    FechaFinalizacion = property(__FechaFinalizacion.value, __FechaFinalizacion.set, None, None)


    _ElementMap = {
        __Duracion.name() : __Duracion,
        __ConsumoAnualEstimado.name() : __ConsumoAnualEstimado,
        __TipoContratoATR.name() : __TipoContratoATR,
        __CondicionesContractuales.name() : __CondicionesContractuales,
        __Contacto.name() : __Contacto,
        __IdContrato.name() : __IdContrato,
        __DireccionCorrespondencia.name() : __DireccionCorrespondencia,
        __CuentaBancaria.name() : __CuentaBancaria,
        __FechaFinalizacion.name() : __FechaFinalizacion
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ContratoConModificacion', ContratoConModificacion)


# Complex type CTD_ANON_20 with content type ELEMENT_ONLY
class CTD_ANON_20 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImporteTotalConcepto uses Python identifier ImporteTotalConcepto
    __ImporteTotalConcepto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalConcepto'), 'ImporteTotalConcepto', '__httplocalhostelegibilidad_CTD_ANON_20_httplocalhostelegibilidadImporteTotalConcepto', False)

    
    ImporteTotalConcepto = property(__ImporteTotalConcepto.value, __ImporteTotalConcepto.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoConcepto uses Python identifier TipoConcepto
    __TipoConcepto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoConcepto'), 'TipoConcepto', '__httplocalhostelegibilidad_CTD_ANON_20_httplocalhostelegibilidadTipoConcepto', False)

    
    TipoConcepto = property(__TipoConcepto.value, __TipoConcepto.set, None, u'Tabla 103')

    
    # Element {http://localhost/elegibilidad}ImporteUnidadConcepto uses Python identifier ImporteUnidadConcepto
    __ImporteUnidadConcepto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteUnidadConcepto'), 'ImporteUnidadConcepto', '__httplocalhostelegibilidad_CTD_ANON_20_httplocalhostelegibilidadImporteUnidadConcepto', False)

    
    ImporteUnidadConcepto = property(__ImporteUnidadConcepto.value, __ImporteUnidadConcepto.set, None, u'P.e., precio en tarifa del kW contratado')

    
    # Element {http://localhost/elegibilidad}UnidadesConcepto uses Python identifier UnidadesConcepto
    __UnidadesConcepto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'UnidadesConcepto'), 'UnidadesConcepto', '__httplocalhostelegibilidad_CTD_ANON_20_httplocalhostelegibilidadUnidadesConcepto', False)

    
    UnidadesConcepto = property(__UnidadesConcepto.value, __UnidadesConcepto.set, None, u'P.e., en contrataci\xf3n kW a contratar')


    _ElementMap = {
        __ImporteTotalConcepto.name() : __ImporteTotalConcepto,
        __TipoConcepto.name() : __TipoConcepto,
        __ImporteUnidadConcepto.name() : __ImporteUnidadConcepto,
        __UnidadesConcepto.name() : __UnidadesConcepto
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_21 with content type ELEMENT_ONLY
class CTD_ANON_21 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImpuestoElectrico uses Python identifier ImpuestoElectrico
    __ImpuestoElectrico = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImpuestoElectrico'), 'ImpuestoElectrico', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadImpuestoElectrico', False)

    
    ImpuestoElectrico = property(__ImpuestoElectrico.value, __ImpuestoElectrico.set, None, None)

    
    # Element {http://localhost/elegibilidad}Alquileres uses Python identifier Alquileres
    __Alquileres = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Alquileres'), 'Alquileres', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadAlquileres', False)

    
    Alquileres = property(__Alquileres.value, __Alquileres.set, None, None)

    
    # Element {http://localhost/elegibilidad}IVA uses Python identifier IVA
    __IVA = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IVA'), 'IVA', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadIVA', False)

    
    IVA = property(__IVA.value, __IVA.set, None, None)

    
    # Element {http://localhost/elegibilidad}DatosGeneralesFacturaATR uses Python identifier DatosGeneralesFacturaATR
    __DatosGeneralesFacturaATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFacturaATR'), 'DatosGeneralesFacturaATR', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadDatosGeneralesFacturaATR', False)

    
    DatosGeneralesFacturaATR = property(__DatosGeneralesFacturaATR.value, __DatosGeneralesFacturaATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConceptoIVA uses Python identifier ConceptoIVA
    __ConceptoIVA = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'), 'ConceptoIVA', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadConceptoIVA', True)

    
    ConceptoIVA = property(__ConceptoIVA.value, __ConceptoIVA.set, None, u'Para facturar conceptos excepcionales que solo lleven aplicado IVA.')

    
    # Element {http://localhost/elegibilidad}EnergiaReactiva uses Python identifier EnergiaReactiva
    __EnergiaReactiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EnergiaReactiva'), 'EnergiaReactiva', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadEnergiaReactiva', False)

    
    EnergiaReactiva = property(__EnergiaReactiva.value, __EnergiaReactiva.set, None, None)

    
    # Element {http://localhost/elegibilidad}ExcesoPotencia uses Python identifier ExcesoPotencia
    __ExcesoPotencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ExcesoPotencia'), 'ExcesoPotencia', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadExcesoPotencia', False)

    
    ExcesoPotencia = property(__ExcesoPotencia.value, __ExcesoPotencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}EnergiaActiva uses Python identifier EnergiaActiva
    __EnergiaActiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EnergiaActiva'), 'EnergiaActiva', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadEnergiaActiva', False)

    
    EnergiaActiva = property(__EnergiaActiva.value, __EnergiaActiva.set, None, None)

    
    # Element {http://localhost/elegibilidad}Potencia uses Python identifier Potencia
    __Potencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Potencia'), 'Potencia', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadPotencia', False)

    
    Potencia = property(__Potencia.value, __Potencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}IVAIGICReducido uses Python identifier IVAIGICReducido
    __IVAIGICReducido = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IVAIGICReducido'), 'IVAIGICReducido', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadIVAIGICReducido', False)

    
    IVAIGICReducido = property(__IVAIGICReducido.value, __IVAIGICReducido.set, None, None)

    
    # Element {http://localhost/elegibilidad}ImporteIntereses uses Python identifier ImporteIntereses
    __ImporteIntereses = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteIntereses'), 'ImporteIntereses', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadImporteIntereses', False)

    
    ImporteIntereses = property(__ImporteIntereses.value, __ImporteIntereses.set, None, u'En los casos que se incluyan intereses de demora')

    
    # Element {http://localhost/elegibilidad}Medidas uses Python identifier Medidas
    __Medidas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Medidas'), 'Medidas', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadMedidas', True)

    
    Medidas = property(__Medidas.value, __Medidas.set, None, None)

    
    # Element {http://localhost/elegibilidad}ConceptoIEIVA uses Python identifier ConceptoIEIVA
    __ConceptoIEIVA = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'), 'ConceptoIEIVA', '__httplocalhostelegibilidad_CTD_ANON_21_httplocalhostelegibilidadConceptoIEIVA', True)

    
    ConceptoIEIVA = property(__ConceptoIEIVA.value, __ConceptoIEIVA.set, None, u'Para facturar conceptos excepcionales que lleven aplicado impuesto el\xe9ctrico e IVA.')


    _ElementMap = {
        __ImpuestoElectrico.name() : __ImpuestoElectrico,
        __Alquileres.name() : __Alquileres,
        __IVA.name() : __IVA,
        __DatosGeneralesFacturaATR.name() : __DatosGeneralesFacturaATR,
        __ConceptoIVA.name() : __ConceptoIVA,
        __EnergiaReactiva.name() : __EnergiaReactiva,
        __ExcesoPotencia.name() : __ExcesoPotencia,
        __EnergiaActiva.name() : __EnergiaActiva,
        __Potencia.name() : __Potencia,
        __IVAIGICReducido.name() : __IVAIGICReducido,
        __ImporteIntereses.name() : __ImporteIntereses,
        __Medidas.name() : __Medidas,
        __ConceptoIEIVA.name() : __ConceptoIEIVA
    }
    _AttributeMap = {
        
    }



# Complex type CondicionesContractuales2n with content type ELEMENT_ONLY
class CondicionesContractuales2n (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales2n')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PotenciasContratadas uses Python identifier PotenciasContratadas
    __PotenciasContratadas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'), 'PotenciasContratadas', '__httplocalhostelegibilidad_CondicionesContractuales2n_httplocalhostelegibilidadPotenciasContratadas', False)

    
    PotenciasContratadas = property(__PotenciasContratadas.value, __PotenciasContratadas.set, None, None)

    
    # Element {http://localhost/elegibilidad}TarifaATR uses Python identifier TarifaATR
    __TarifaATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'), 'TarifaATR', '__httplocalhostelegibilidad_CondicionesContractuales2n_httplocalhostelegibilidadTarifaATR', False)

    
    TarifaATR = property(__TarifaATR.value, __TarifaATR.set, None, None)


    _ElementMap = {
        __PotenciasContratadas.name() : __PotenciasContratadas,
        __TarifaATR.name() : __TarifaATR
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'CondicionesContractuales2n', CondicionesContractuales2n)


# Complex type ClienteConDireccion with content type ELEMENT_ONLY
class ClienteConDireccion (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ClienteConDireccion')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}IdCliente uses Python identifier IdCliente
    __IdCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), 'IdCliente', '__httplocalhostelegibilidad_ClienteConDireccion_httplocalhostelegibilidadIdCliente', False)

    
    IdCliente = property(__IdCliente.value, __IdCliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}Direccion uses Python identifier Direccion
    __Direccion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Direccion'), 'Direccion', '__httplocalhostelegibilidad_ClienteConDireccion_httplocalhostelegibilidadDireccion', False)

    
    Direccion = property(__Direccion.value, __Direccion.set, None, None)

    
    # Element {http://localhost/elegibilidad}Nombre uses Python identifier Nombre
    __Nombre = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), 'Nombre', '__httplocalhostelegibilidad_ClienteConDireccion_httplocalhostelegibilidadNombre', False)

    
    Nombre = property(__Nombre.value, __Nombre.set, None, None)

    
    # Element {http://localhost/elegibilidad}Fax uses Python identifier Fax
    __Fax = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Fax'), 'Fax', '__httplocalhostelegibilidad_ClienteConDireccion_httplocalhostelegibilidadFax', False)

    
    Fax = property(__Fax.value, __Fax.set, None, None)

    
    # Element {http://localhost/elegibilidad}Telefono uses Python identifier Telefono
    __Telefono = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Telefono'), 'Telefono', '__httplocalhostelegibilidad_ClienteConDireccion_httplocalhostelegibilidadTelefono', False)

    
    Telefono = property(__Telefono.value, __Telefono.set, None, None)

    
    # Element {http://localhost/elegibilidad}IndicadorTipoDireccion uses Python identifier IndicadorTipoDireccion
    __IndicadorTipoDireccion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IndicadorTipoDireccion'), 'IndicadorTipoDireccion', '__httplocalhostelegibilidad_ClienteConDireccion_httplocalhostelegibilidadIndicadorTipoDireccion', False)

    
    IndicadorTipoDireccion = property(__IndicadorTipoDireccion.value, __IndicadorTipoDireccion.set, None, None)


    _ElementMap = {
        __IdCliente.name() : __IdCliente,
        __Direccion.name() : __Direccion,
        __Nombre.name() : __Nombre,
        __Fax.name() : __Fax,
        __Telefono.name() : __Telefono,
        __IndicadorTipoDireccion.name() : __IndicadorTipoDireccion
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ClienteConDireccion', ClienteConDireccion)


# Complex type TipoLimiteIntervaloLectura with content type ELEMENT_ONLY
class TipoLimiteIntervaloLectura (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'TipoLimiteIntervaloLectura')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Lectura uses Python identifier Lectura
    __Lectura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Lectura'), 'Lectura', '__httplocalhostelegibilidad_TipoLimiteIntervaloLectura_httplocalhostelegibilidadLectura', False)

    
    Lectura = property(__Lectura.value, __Lectura.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaHora uses Python identifier FechaHora
    __FechaHora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaHora'), 'FechaHora', '__httplocalhostelegibilidad_TipoLimiteIntervaloLectura_httplocalhostelegibilidadFechaHora', False)

    
    FechaHora = property(__FechaHora.value, __FechaHora.set, None, None)

    
    # Element {http://localhost/elegibilidad}Procedencia uses Python identifier Procedencia
    __Procedencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Procedencia'), 'Procedencia', '__httplocalhostelegibilidad_TipoLimiteIntervaloLectura_httplocalhostelegibilidadProcedencia', False)

    
    Procedencia = property(__Procedencia.value, __Procedencia.set, None, u'Tabla 44')


    _ElementMap = {
        __Lectura.name() : __Lectura,
        __FechaHora.name() : __FechaHora,
        __Procedencia.name() : __Procedencia
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'TipoLimiteIntervaloLectura', TipoLimiteIntervaloLectura)


# Complex type CTD_ANON_22 with content type ELEMENT_ONLY
class CTD_ANON_22 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}AjustePorIntegrador uses Python identifier AjustePorIntegrador
    __AjustePorIntegrador = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'AjustePorIntegrador'), 'AjustePorIntegrador', '__httplocalhostelegibilidad_CTD_ANON_22_httplocalhostelegibilidadAjustePorIntegrador', False)

    
    AjustePorIntegrador = property(__AjustePorIntegrador.value, __AjustePorIntegrador.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoMotivoAjuste uses Python identifier CodigoMotivoAjuste
    __CodigoMotivoAjuste = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoMotivoAjuste'), 'CodigoMotivoAjuste', '__httplocalhostelegibilidad_CTD_ANON_22_httplocalhostelegibilidadCodigoMotivoAjuste', False)

    
    CodigoMotivoAjuste = property(__CodigoMotivoAjuste.value, __CodigoMotivoAjuste.set, None, u'Tabla 106')


    _ElementMap = {
        __AjustePorIntegrador.name() : __AjustePorIntegrador,
        __CodigoMotivoAjuste.name() : __CodigoMotivoAjuste
    }
    _AttributeMap = {
        
    }



# Complex type CTD_ANON_23 with content type ELEMENT_ONLY
class CTD_ANON_23 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}FechaValor uses Python identifier FechaValor
    __FechaValor = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaValor'), 'FechaValor', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadFechaValor', False)

    
    FechaValor = property(__FechaValor.value, __FechaValor.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoMoneda uses Python identifier TipoMoneda
    __TipoMoneda = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda'), 'TipoMoneda', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadTipoMoneda', False)

    
    TipoMoneda = property(__TipoMoneda.value, __TipoMoneda.set, None, u'Tabla 104 (01-Pesetas, 02-Euros)')

    
    # Element {http://localhost/elegibilidad}ImporteTotal uses Python identifier ImporteTotal
    __ImporteTotal = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotal'), 'ImporteTotal', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadImporteTotal', False)

    
    ImporteTotal = property(__ImporteTotal.value, __ImporteTotal.set, None, u'Importe total de todas las facturas del XML')

    
    # Element {http://localhost/elegibilidad}SaldoTotalFacturacion uses Python identifier SaldoTotalFacturacion
    __SaldoTotalFacturacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SaldoTotalFacturacion'), 'SaldoTotalFacturacion', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadSaldoTotalFacturacion', False)

    
    SaldoTotalFacturacion = property(__SaldoTotalFacturacion.value, __SaldoTotalFacturacion.set, None, u'Saldo total de todas las facturas del xml')

    
    # Element {http://localhost/elegibilidad}TotalRecibos uses Python identifier TotalRecibos
    __TotalRecibos = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TotalRecibos'), 'TotalRecibos', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadTotalRecibos', False)

    
    TotalRecibos = property(__TotalRecibos.value, __TotalRecibos.set, None, u'Numero recibos del XML')

    
    # Element {http://localhost/elegibilidad}FechaLimitePago uses Python identifier FechaLimitePago
    __FechaLimitePago = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaLimitePago'), 'FechaLimitePago', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadFechaLimitePago', False)

    
    FechaLimitePago = property(__FechaLimitePago.value, __FechaLimitePago.set, None, u'Fecha teorica de pago ')

    
    # Element {http://localhost/elegibilidad}CuentaBancaria uses Python identifier CuentaBancaria
    __CuentaBancaria = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), 'CuentaBancaria', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadCuentaBancaria', False)

    
    CuentaBancaria = property(__CuentaBancaria.value, __CuentaBancaria.set, None, None)

    
    # Element {http://localhost/elegibilidad}SaldoTotalCobro uses Python identifier SaldoTotalCobro
    __SaldoTotalCobro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SaldoTotalCobro'), 'SaldoTotalCobro', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadSaldoTotalCobro', False)

    
    SaldoTotalCobro = property(__SaldoTotalCobro.value, __SaldoTotalCobro.set, None, u'Saldo total cobro del XML')

    
    # Element {http://localhost/elegibilidad}IdRemesa uses Python identifier IdRemesa
    __IdRemesa = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdRemesa'), 'IdRemesa', '__httplocalhostelegibilidad_CTD_ANON_23_httplocalhostelegibilidadIdRemesa', False)

    
    IdRemesa = property(__IdRemesa.value, __IdRemesa.set, None, u'identificacion remesa o agrupaci\xf3n')


    _ElementMap = {
        __FechaValor.name() : __FechaValor,
        __TipoMoneda.name() : __TipoMoneda,
        __ImporteTotal.name() : __ImporteTotal,
        __SaldoTotalFacturacion.name() : __SaldoTotalFacturacion,
        __TotalRecibos.name() : __TotalRecibos,
        __FechaLimitePago.name() : __FechaLimitePago,
        __CuentaBancaria.name() : __CuentaBancaria,
        __SaldoTotalCobro.name() : __SaldoTotalCobro,
        __IdRemesa.name() : __IdRemesa
    }
    _AttributeMap = {
        
    }



# Complex type ComentarioPM with content type ELEMENT_ONLY
class ComentarioPM (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Texto uses Python identifier Texto
    __Texto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Texto'), 'Texto', '__httplocalhostelegibilidad_ComentarioPM_httplocalhostelegibilidadTexto', False)

    
    Texto = property(__Texto.value, __Texto.set, None, None)


    _ElementMap = {
        __Texto.name() : __Texto
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'ComentarioPM', ComentarioPM)


# Complex type MedidaC2 with content type ELEMENT_ONLY
class MedidaC2 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'MedidaC2')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ModelosAparato uses Python identifier ModelosAparato
    __ModelosAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'), 'ModelosAparato', '__httplocalhostelegibilidad_MedidaC2_httplocalhostelegibilidadModelosAparato', False)

    
    ModelosAparato = property(__ModelosAparato.value, __ModelosAparato.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoEquipoMedida uses Python identifier TipoEquipoMedida
    __TipoEquipoMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), 'TipoEquipoMedida', '__httplocalhostelegibilidad_MedidaC2_httplocalhostelegibilidadTipoEquipoMedida', False)

    
    TipoEquipoMedida = property(__TipoEquipoMedida.value, __TipoEquipoMedida.set, None, None)

    
    # Element {http://localhost/elegibilidad}ICPAportadoInstalado uses Python identifier ICPAportadoInstalado
    __ICPAportadoInstalado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'), 'ICPAportadoInstalado', '__httplocalhostelegibilidad_MedidaC2_httplocalhostelegibilidadICPAportadoInstalado', False)

    
    ICPAportadoInstalado = property(__ICPAportadoInstalado.value, __ICPAportadoInstalado.set, None, None)

    
    # Element {http://localhost/elegibilidad}ICPInstalacion uses Python identifier ICPInstalacion
    __ICPInstalacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'), 'ICPInstalacion', '__httplocalhostelegibilidad_MedidaC2_httplocalhostelegibilidadICPInstalacion', False)

    
    ICPInstalacion = property(__ICPInstalacion.value, __ICPInstalacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}EquipoAportadoCliente uses Python identifier EquipoAportadoCliente
    __EquipoAportadoCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'), 'EquipoAportadoCliente', '__httplocalhostelegibilidad_MedidaC2_httplocalhostelegibilidadEquipoAportadoCliente', False)

    
    EquipoAportadoCliente = property(__EquipoAportadoCliente.value, __EquipoAportadoCliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}EquipoInstaladoCliente uses Python identifier EquipoInstaladoCliente
    __EquipoInstaladoCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'), 'EquipoInstaladoCliente', '__httplocalhostelegibilidad_MedidaC2_httplocalhostelegibilidadEquipoInstaladoCliente', False)

    
    EquipoInstaladoCliente = property(__EquipoInstaladoCliente.value, __EquipoInstaladoCliente.set, None, None)


    _ElementMap = {
        __ModelosAparato.name() : __ModelosAparato,
        __TipoEquipoMedida.name() : __TipoEquipoMedida,
        __ICPAportadoInstalado.name() : __ICPAportadoInstalado,
        __ICPInstalacion.name() : __ICPInstalacion,
        __EquipoAportadoCliente.name() : __EquipoAportadoCliente,
        __EquipoInstaladoCliente.name() : __EquipoInstaladoCliente
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'MedidaC2', MedidaC2)


# Complex type CondicionesContractualesC with content type ELEMENT_ONLY
class CondicionesContractualesC (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractualesC')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PotenciasMaximas uses Python identifier PotenciasMaximas
    __PotenciasMaximas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciasMaximas'), 'PotenciasMaximas', '__httplocalhostelegibilidad_CondicionesContractualesC_httplocalhostelegibilidadPotenciasMaximas', False)

    
    PotenciasMaximas = property(__PotenciasMaximas.value, __PotenciasMaximas.set, None, None)

    
    # Element {http://localhost/elegibilidad}TarifaATR uses Python identifier TarifaATR
    __TarifaATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'), 'TarifaATR', '__httplocalhostelegibilidad_CondicionesContractualesC_httplocalhostelegibilidadTarifaATR', False)

    
    TarifaATR = property(__TarifaATR.value, __TarifaATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}MarcaMedidaBTConPerdidas uses Python identifier MarcaMedidaBTConPerdidas
    __MarcaMedidaBTConPerdidas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'MarcaMedidaBTConPerdidas'), 'MarcaMedidaBTConPerdidas', '__httplocalhostelegibilidad_CondicionesContractualesC_httplocalhostelegibilidadMarcaMedidaBTConPerdidas', False)

    
    MarcaMedidaBTConPerdidas = property(__MarcaMedidaBTConPerdidas.value, __MarcaMedidaBTConPerdidas.set, None, None)

    
    # Element {http://localhost/elegibilidad}PotenciasContratadas uses Python identifier PotenciasContratadas
    __PotenciasContratadas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'), 'PotenciasContratadas', '__httplocalhostelegibilidad_CondicionesContractualesC_httplocalhostelegibilidadPotenciasContratadas', False)

    
    PotenciasContratadas = property(__PotenciasContratadas.value, __PotenciasContratadas.set, None, None)

    
    # Element {http://localhost/elegibilidad}KVAsTrafo uses Python identifier KVAsTrafo
    __KVAsTrafo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'KVAsTrafo'), 'KVAsTrafo', '__httplocalhostelegibilidad_CondicionesContractualesC_httplocalhostelegibilidadKVAsTrafo', False)

    
    KVAsTrafo = property(__KVAsTrafo.value, __KVAsTrafo.set, None, None)

    
    # Element {http://localhost/elegibilidad}PorcentajePerdidasPactadas uses Python identifier PorcentajePerdidasPactadas
    __PorcentajePerdidasPactadas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PorcentajePerdidasPactadas'), 'PorcentajePerdidasPactadas', '__httplocalhostelegibilidad_CondicionesContractualesC_httplocalhostelegibilidadPorcentajePerdidasPactadas', False)

    
    PorcentajePerdidasPactadas = property(__PorcentajePerdidasPactadas.value, __PorcentajePerdidasPactadas.set, None, None)


    _ElementMap = {
        __PotenciasMaximas.name() : __PotenciasMaximas,
        __TarifaATR.name() : __TarifaATR,
        __MarcaMedidaBTConPerdidas.name() : __MarcaMedidaBTConPerdidas,
        __PotenciasContratadas.name() : __PotenciasContratadas,
        __KVAsTrafo.name() : __KVAsTrafo,
        __PorcentajePerdidasPactadas.name() : __PorcentajePerdidasPactadas
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'CondicionesContractualesC', CondicionesContractualesC)


# Complex type CTD_ANON_24 with content type ELEMENT_ONLY
class CTD_ANON_24 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PrecioEnergia uses Python identifier PrecioEnergia
    __PrecioEnergia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PrecioEnergia'), 'PrecioEnergia', '__httplocalhostelegibilidad_CTD_ANON_24_httplocalhostelegibilidadPrecioEnergia', False)

    
    PrecioEnergia = property(__PrecioEnergia.value, __PrecioEnergia.set, None, None)

    
    # Element {http://localhost/elegibilidad}ValorEnergiaActiva uses Python identifier ValorEnergiaActiva
    __ValorEnergiaActiva = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ValorEnergiaActiva'), 'ValorEnergiaActiva', '__httplocalhostelegibilidad_CTD_ANON_24_httplocalhostelegibilidadValorEnergiaActiva', False)

    
    ValorEnergiaActiva = property(__ValorEnergiaActiva.value, __ValorEnergiaActiva.set, None, u'En Kwh')


    _ElementMap = {
        __PrecioEnergia.name() : __PrecioEnergia,
        __ValorEnergiaActiva.name() : __ValorEnergiaActiva
    }
    _AttributeMap = {
        
    }



# Complex type RegistroDoc with content type ELEMENT_ONLY
class RegistroDoc (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}DireccionUrl uses Python identifier DireccionUrl
    __DireccionUrl = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionUrl'), 'DireccionUrl', '__httplocalhostelegibilidad_RegistroDoc_httplocalhostelegibilidadDireccionUrl', False)

    
    DireccionUrl = property(__DireccionUrl.value, __DireccionUrl.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoDocAportado uses Python identifier TipoDocAportado
    __TipoDocAportado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoDocAportado'), 'TipoDocAportado', '__httplocalhostelegibilidad_RegistroDoc_httplocalhostelegibilidadTipoDocAportado', False)

    
    TipoDocAportado = property(__TipoDocAportado.value, __TipoDocAportado.set, None, None)


    _ElementMap = {
        __DireccionUrl.name() : __DireccionUrl,
        __TipoDocAportado.name() : __TipoDocAportado
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'RegistroDoc', RegistroDoc)


# Complex type CTD_ANON_25 with content type ELEMENT_ONLY
class CTD_ANON_25 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}PrecioPotencia uses Python identifier PrecioPotencia
    __PrecioPotencia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PrecioPotencia'), 'PrecioPotencia', '__httplocalhostelegibilidad_CTD_ANON_25_httplocalhostelegibilidadPrecioPotencia', False)

    
    PrecioPotencia = property(__PrecioPotencia.value, __PrecioPotencia.set, None, None)

    
    # Element {http://localhost/elegibilidad}PotenciaContratada uses Python identifier PotenciaContratada
    __PotenciaContratada = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciaContratada'), 'PotenciaContratada', '__httplocalhostelegibilidad_CTD_ANON_25_httplocalhostelegibilidadPotenciaContratada', False)

    
    PotenciaContratada = property(__PotenciaContratada.value, __PotenciaContratada.set, None, u'En watios')

    
    # Element {http://localhost/elegibilidad}PotenciaAFacturar uses Python identifier PotenciaAFacturar
    __PotenciaAFacturar = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciaAFacturar'), 'PotenciaAFacturar', '__httplocalhostelegibilidad_CTD_ANON_25_httplocalhostelegibilidadPotenciaAFacturar', False)

    
    PotenciaAFacturar = property(__PotenciaAFacturar.value, __PotenciaAFacturar.set, None, u'Potencia a facturar calculada en funci\xf3n de la potencia contratada. En Watios')

    
    # Element {http://localhost/elegibilidad}PotenciaMaxDemandada uses Python identifier PotenciaMaxDemandada
    __PotenciaMaxDemandada = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciaMaxDemandada'), 'PotenciaMaxDemandada', '__httplocalhostelegibilidad_CTD_ANON_25_httplocalhostelegibilidadPotenciaMaxDemandada', False)

    
    PotenciaMaxDemandada = property(__PotenciaMaxDemandada.value, __PotenciaMaxDemandada.set, None, u' En watios')


    _ElementMap = {
        __PrecioPotencia.name() : __PrecioPotencia,
        __PotenciaContratada.name() : __PotenciaContratada,
        __PotenciaAFacturar.name() : __PotenciaAFacturar,
        __PotenciaMaxDemandada.name() : __PotenciaMaxDemandada
    }
    _AttributeMap = {
        
    }



# Complex type Direccion with content type ELEMENT_ONLY
class Direccion (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Direccion')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Piso uses Python identifier Piso
    __Piso = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Piso'), 'Piso', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadPiso', False)

    
    Piso = property(__Piso.value, __Piso.set, None, None)

    
    # Element {http://localhost/elegibilidad}Poblacion uses Python identifier Poblacion
    __Poblacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Poblacion'), 'Poblacion', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadPoblacion', False)

    
    Poblacion = property(__Poblacion.value, __Poblacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoAclaradorFinca uses Python identifier TipoAclaradorFinca
    __TipoAclaradorFinca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'), 'TipoAclaradorFinca', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadTipoAclaradorFinca', False)

    
    TipoAclaradorFinca = property(__TipoAclaradorFinca.value, __TipoAclaradorFinca.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoVia uses Python identifier TipoVia
    __TipoVia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoVia'), 'TipoVia', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadTipoVia', False)

    
    TipoVia = property(__TipoVia.value, __TipoVia.set, None, None)

    
    # Element {http://localhost/elegibilidad}AclaradorFinca uses Python identifier AclaradorFinca
    __AclaradorFinca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'), 'AclaradorFinca', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadAclaradorFinca', False)

    
    AclaradorFinca = property(__AclaradorFinca.value, __AclaradorFinca.set, None, None)

    
    # Element {http://localhost/elegibilidad}Calle uses Python identifier Calle
    __Calle = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Calle'), 'Calle', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadCalle', False)

    
    Calle = property(__Calle.value, __Calle.set, None, None)

    
    # Element {http://localhost/elegibilidad}Puerta uses Python identifier Puerta
    __Puerta = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Puerta'), 'Puerta', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadPuerta', False)

    
    Puerta = property(__Puerta.value, __Puerta.set, None, None)

    
    # Element {http://localhost/elegibilidad}NumeroFinca uses Python identifier NumeroFinca
    __NumeroFinca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NumeroFinca'), 'NumeroFinca', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadNumeroFinca', False)

    
    NumeroFinca = property(__NumeroFinca.value, __NumeroFinca.set, None, None)

    
    # Element {http://localhost/elegibilidad}Pais uses Python identifier Pais
    __Pais = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Pais'), 'Pais', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadPais', False)

    
    Pais = property(__Pais.value, __Pais.set, None, None)

    
    # Element {http://localhost/elegibilidad}DuplicadorFinca uses Python identifier DuplicadorFinca
    __DuplicadorFinca = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DuplicadorFinca'), 'DuplicadorFinca', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadDuplicadorFinca', False)

    
    DuplicadorFinca = property(__DuplicadorFinca.value, __DuplicadorFinca.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodPostal uses Python identifier CodPostal
    __CodPostal = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'), 'CodPostal', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadCodPostal', False)

    
    CodPostal = property(__CodPostal.value, __CodPostal.set, None, None)

    
    # Element {http://localhost/elegibilidad}Provincia uses Python identifier Provincia
    __Provincia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Provincia'), 'Provincia', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadProvincia', False)

    
    Provincia = property(__Provincia.value, __Provincia.set, None, None)

    
    # Element {http://localhost/elegibilidad}Escalera uses Python identifier Escalera
    __Escalera = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Escalera'), 'Escalera', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadEscalera', False)

    
    Escalera = property(__Escalera.value, __Escalera.set, None, None)

    
    # Element {http://localhost/elegibilidad}Municipio uses Python identifier Municipio
    __Municipio = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Municipio'), 'Municipio', '__httplocalhostelegibilidad_Direccion_httplocalhostelegibilidadMunicipio', False)

    
    Municipio = property(__Municipio.value, __Municipio.set, None, None)


    _ElementMap = {
        __Piso.name() : __Piso,
        __Poblacion.name() : __Poblacion,
        __TipoAclaradorFinca.name() : __TipoAclaradorFinca,
        __TipoVia.name() : __TipoVia,
        __AclaradorFinca.name() : __AclaradorFinca,
        __Calle.name() : __Calle,
        __Puerta.name() : __Puerta,
        __NumeroFinca.name() : __NumeroFinca,
        __Pais.name() : __Pais,
        __DuplicadorFinca.name() : __DuplicadorFinca,
        __CodPostal.name() : __CodPostal,
        __Provincia.name() : __Provincia,
        __Escalera.name() : __Escalera,
        __Municipio.name() : __Municipio
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Direccion', Direccion)


# Complex type CTD_ANON_26 with content type ELEMENT_ONLY
class CTD_ANON_26 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}FechaBOE uses Python identifier FechaBOE
    __FechaBOE = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaBOE'), 'FechaBOE', '__httplocalhostelegibilidad_CTD_ANON_26_httplocalhostelegibilidadFechaBOE', False)

    
    FechaBOE = property(__FechaBOE.value, __FechaBOE.set, None, None)

    
    # Element {http://localhost/elegibilidad}LineaNegocio uses Python identifier LineaNegocio
    __LineaNegocio = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'LineaNegocio'), 'LineaNegocio', '__httplocalhostelegibilidad_CTD_ANON_26_httplocalhostelegibilidadLineaNegocio', False)

    
    LineaNegocio = property(__LineaNegocio.value, __LineaNegocio.set, None, u'Tabla 5')

    
    # Element {http://localhost/elegibilidad}DireccionSuministro uses Python identifier DireccionSuministro
    __DireccionSuministro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionSuministro'), 'DireccionSuministro', '__httplocalhostelegibilidad_CTD_ANON_26_httplocalhostelegibilidadDireccionSuministro', False)

    
    DireccionSuministro = property(__DireccionSuministro.value, __DireccionSuministro.set, None, None)

    
    # Element {http://localhost/elegibilidad}Cliente uses Python identifier Cliente
    __Cliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Cliente'), 'Cliente', '__httplocalhostelegibilidad_CTD_ANON_26_httplocalhostelegibilidadCliente', False)

    
    Cliente = property(__Cliente.value, __Cliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}Contrato uses Python identifier Contrato
    __Contrato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Contrato'), 'Contrato', '__httplocalhostelegibilidad_CTD_ANON_26_httplocalhostelegibilidadContrato', False)

    
    Contrato = property(__Contrato.value, __Contrato.set, None, None)

    
    # Element {http://localhost/elegibilidad}DatosGeneralesFactura uses Python identifier DatosGeneralesFactura
    __DatosGeneralesFactura = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFactura'), 'DatosGeneralesFactura', '__httplocalhostelegibilidad_CTD_ANON_26_httplocalhostelegibilidadDatosGeneralesFactura', False)

    
    DatosGeneralesFactura = property(__DatosGeneralesFactura.value, __DatosGeneralesFactura.set, None, None)


    _ElementMap = {
        __FechaBOE.name() : __FechaBOE,
        __LineaNegocio.name() : __LineaNegocio,
        __DireccionSuministro.name() : __DireccionSuministro,
        __Cliente.name() : __Cliente,
        __Contrato.name() : __Contrato,
        __DatosGeneralesFactura.name() : __DatosGeneralesFactura
    }
    _AttributeMap = {
        
    }



# Complex type OtrosDatosFactura with content type ELEMENT_ONLY
class OtrosDatosFactura (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'OtrosDatosFactura')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}DireccionDestino uses Python identifier DireccionDestino
    __DireccionDestino = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionDestino'), 'DireccionDestino', '__httplocalhostelegibilidad_OtrosDatosFactura_httplocalhostelegibilidadDireccionDestino', False)

    
    DireccionDestino = property(__DireccionDestino.value, __DireccionDestino.set, None, None)

    
    # Element {http://localhost/elegibilidad}SociedadMercantilEmisora uses Python identifier SociedadMercantilEmisora
    __SociedadMercantilEmisora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SociedadMercantilEmisora'), 'SociedadMercantilEmisora', '__httplocalhostelegibilidad_OtrosDatosFactura_httplocalhostelegibilidadSociedadMercantilEmisora', False)

    
    SociedadMercantilEmisora = property(__SociedadMercantilEmisora.value, __SociedadMercantilEmisora.set, None, None)

    
    # Element {http://localhost/elegibilidad}DireccionEmisora uses Python identifier DireccionEmisora
    __DireccionEmisora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'DireccionEmisora'), 'DireccionEmisora', '__httplocalhostelegibilidad_OtrosDatosFactura_httplocalhostelegibilidadDireccionEmisora', False)

    
    DireccionEmisora = property(__DireccionEmisora.value, __DireccionEmisora.set, None, None)

    
    # Element {http://localhost/elegibilidad}SociedadMercantilDestino uses Python identifier SociedadMercantilDestino
    __SociedadMercantilDestino = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SociedadMercantilDestino'), 'SociedadMercantilDestino', '__httplocalhostelegibilidad_OtrosDatosFactura_httplocalhostelegibilidadSociedadMercantilDestino', False)

    
    SociedadMercantilDestino = property(__SociedadMercantilDestino.value, __SociedadMercantilDestino.set, None, None)


    _ElementMap = {
        __DireccionDestino.name() : __DireccionDestino,
        __SociedadMercantilEmisora.name() : __SociedadMercantilEmisora,
        __DireccionEmisora.name() : __DireccionEmisora,
        __SociedadMercantilDestino.name() : __SociedadMercantilDestino
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'OtrosDatosFactura', OtrosDatosFactura)


# Complex type Medida with content type ELEMENT_ONLY
class Medida (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Medida')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}EquipoInstaladoCliente uses Python identifier EquipoInstaladoCliente
    __EquipoInstaladoCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'), 'EquipoInstaladoCliente', '__httplocalhostelegibilidad_Medida_httplocalhostelegibilidadEquipoInstaladoCliente', False)

    
    EquipoInstaladoCliente = property(__EquipoInstaladoCliente.value, __EquipoInstaladoCliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoEquipoMedida uses Python identifier TipoEquipoMedida
    __TipoEquipoMedida = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), 'TipoEquipoMedida', '__httplocalhostelegibilidad_Medida_httplocalhostelegibilidadTipoEquipoMedida', False)

    
    TipoEquipoMedida = property(__TipoEquipoMedida.value, __TipoEquipoMedida.set, None, None)

    
    # Element {http://localhost/elegibilidad}ModelosAparato uses Python identifier ModelosAparato
    __ModelosAparato = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'), 'ModelosAparato', '__httplocalhostelegibilidad_Medida_httplocalhostelegibilidadModelosAparato', False)

    
    ModelosAparato = property(__ModelosAparato.value, __ModelosAparato.set, None, None)

    
    # Element {http://localhost/elegibilidad}ICPAportadoInstalado uses Python identifier ICPAportadoInstalado
    __ICPAportadoInstalado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'), 'ICPAportadoInstalado', '__httplocalhostelegibilidad_Medida_httplocalhostelegibilidadICPAportadoInstalado', False)

    
    ICPAportadoInstalado = property(__ICPAportadoInstalado.value, __ICPAportadoInstalado.set, None, None)

    
    # Element {http://localhost/elegibilidad}ICPInstalacion uses Python identifier ICPInstalacion
    __ICPInstalacion = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'), 'ICPInstalacion', '__httplocalhostelegibilidad_Medida_httplocalhostelegibilidadICPInstalacion', False)

    
    ICPInstalacion = property(__ICPInstalacion.value, __ICPInstalacion.set, None, None)

    
    # Element {http://localhost/elegibilidad}EquipoAportadoCliente uses Python identifier EquipoAportadoCliente
    __EquipoAportadoCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'), 'EquipoAportadoCliente', '__httplocalhostelegibilidad_Medida_httplocalhostelegibilidadEquipoAportadoCliente', False)

    
    EquipoAportadoCliente = property(__EquipoAportadoCliente.value, __EquipoAportadoCliente.set, None, None)


    _ElementMap = {
        __EquipoInstaladoCliente.name() : __EquipoInstaladoCliente,
        __TipoEquipoMedida.name() : __TipoEquipoMedida,
        __ModelosAparato.name() : __ModelosAparato,
        __ICPAportadoInstalado.name() : __ICPAportadoInstalado,
        __ICPInstalacion.name() : __ICPInstalacion,
        __EquipoAportadoCliente.name() : __EquipoAportadoCliente
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Medida', Medida)


# Complex type DatosCIE with content type ELEMENT_ONLY
class DatosCIE (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DatosCIE')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}TipoSuministro uses Python identifier TipoSuministro
    __TipoSuministro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'), 'TipoSuministro', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadTipoSuministro', False)

    
    TipoSuministro = property(__TipoSuministro.value, __TipoSuministro.set, None, None)

    
    # Element {http://localhost/elegibilidad}NombreInstalador uses Python identifier NombreInstalador
    __NombreInstalador = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'), 'NombreInstalador', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadNombreInstalador', False)

    
    NombreInstalador = property(__NombreInstalador.value, __NombreInstalador.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaCaducidadCie uses Python identifier FechaCaducidadCie
    __FechaCaducidadCie = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'), 'FechaCaducidadCie', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadFechaCaducidadCie', False)

    
    FechaCaducidadCie = property(__FechaCaducidadCie.value, __FechaCaducidadCie.set, None, None)

    
    # Element {http://localhost/elegibilidad}NifInstalador uses Python identifier NifInstalador
    __NifInstalador = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'), 'NifInstalador', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadNifInstalador', False)

    
    NifInstalador = property(__NifInstalador.value, __NifInstalador.set, None, None)

    
    # Element {http://localhost/elegibilidad}InstensidadDif uses Python identifier InstensidadDif
    __InstensidadDif = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'), 'InstensidadDif', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadInstensidadDif', False)

    
    InstensidadDif = property(__InstensidadDif.value, __InstensidadDif.set, None, None)

    
    # Element {http://localhost/elegibilidad}CieAportado uses Python identifier CieAportado
    __CieAportado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CieAportado'), 'CieAportado', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadCieAportado', False)

    
    CieAportado = property(__CieAportado.value, __CieAportado.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaEmisionCie uses Python identifier FechaEmisionCie
    __FechaEmisionCie = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'), 'FechaEmisionCie', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadFechaEmisionCie', False)

    
    FechaEmisionCie = property(__FechaEmisionCie.value, __FechaEmisionCie.set, None, None)

    
    # Element {http://localhost/elegibilidad}CieElectronico uses Python identifier CieElectronico
    __CieElectronico = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CieElectronico'), 'CieElectronico', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadCieElectronico', False)

    
    CieElectronico = property(__CieElectronico.value, __CieElectronico.set, None, None)

    
    # Element {http://localhost/elegibilidad}SeccionCable uses Python identifier SeccionCable
    __SeccionCable = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'), 'SeccionCable', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadSeccionCable', False)

    
    SeccionCable = property(__SeccionCable.value, __SeccionCable.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoCie uses Python identifier CodigoCie
    __CodigoCie = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoCie'), 'CodigoCie', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadCodigoCie', False)

    
    CodigoCie = property(__CodigoCie.value, __CodigoCie.set, None, None)

    
    # Element {http://localhost/elegibilidad}TensionSuministro uses Python identifier TensionSuministro
    __TensionSuministro = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'), 'TensionSuministro', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadTensionSuministro', False)

    
    TensionSuministro = property(__TensionSuministro.value, __TensionSuministro.set, None, None)

    
    # Element {http://localhost/elegibilidad}SensibilidadDif uses Python identifier SensibilidadDif
    __SensibilidadDif = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'), 'SensibilidadDif', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadSensibilidadDif', False)

    
    SensibilidadDif = property(__SensibilidadDif.value, __SensibilidadDif.set, None, None)

    
    # Element {http://localhost/elegibilidad}PotenciaInstBT uses Python identifier PotenciaInstBT
    __PotenciaInstBT = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'), 'PotenciaInstBT', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadPotenciaInstBT', False)

    
    PotenciaInstBT = property(__PotenciaInstBT.value, __PotenciaInstBT.set, None, None)

    
    # Element {http://localhost/elegibilidad}SelloElectronico uses Python identifier SelloElectronico
    __SelloElectronico = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'SelloElectronico'), 'SelloElectronico', '__httplocalhostelegibilidad_DatosCIE_httplocalhostelegibilidadSelloElectronico', False)

    
    SelloElectronico = property(__SelloElectronico.value, __SelloElectronico.set, None, None)


    _ElementMap = {
        __TipoSuministro.name() : __TipoSuministro,
        __NombreInstalador.name() : __NombreInstalador,
        __FechaCaducidadCie.name() : __FechaCaducidadCie,
        __NifInstalador.name() : __NifInstalador,
        __InstensidadDif.name() : __InstensidadDif,
        __CieAportado.name() : __CieAportado,
        __FechaEmisionCie.name() : __FechaEmisionCie,
        __CieElectronico.name() : __CieElectronico,
        __SeccionCable.name() : __SeccionCable,
        __CodigoCie.name() : __CodigoCie,
        __TensionSuministro.name() : __TensionSuministro,
        __SensibilidadDif.name() : __SensibilidadDif,
        __PotenciaInstBT.name() : __PotenciaInstBT,
        __SelloElectronico.name() : __SelloElectronico
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'DatosCIE', DatosCIE)


# Complex type CTD_ANON_27 with content type ELEMENT_ONLY
class CTD_ANON_27 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}TextoAnomalia uses Python identifier TextoAnomalia
    __TextoAnomalia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'), 'TextoAnomalia', '__httplocalhostelegibilidad_CTD_ANON_27_httplocalhostelegibilidadTextoAnomalia', False)

    
    TextoAnomalia = property(__TextoAnomalia.value, __TextoAnomalia.set, None, None)

    
    # Element {http://localhost/elegibilidad}TipoAnomalia uses Python identifier TipoAnomalia
    __TipoAnomalia = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'TipoAnomalia'), 'TipoAnomalia', '__httplocalhostelegibilidad_CTD_ANON_27_httplocalhostelegibilidadTipoAnomalia', False)

    
    TipoAnomalia = property(__TipoAnomalia.value, __TipoAnomalia.set, None, u'Tabla 45')


    _ElementMap = {
        __TextoAnomalia.name() : __TextoAnomalia,
        __TipoAnomalia.name() : __TipoAnomalia
    }
    _AttributeMap = {
        
    }



# Complex type Cliente with content type ELEMENT_ONLY
class Cliente (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Cliente')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Telefono uses Python identifier Telefono
    __Telefono = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Telefono'), 'Telefono', '__httplocalhostelegibilidad_Cliente_httplocalhostelegibilidadTelefono', False)

    
    Telefono = property(__Telefono.value, __Telefono.set, None, None)

    
    # Element {http://localhost/elegibilidad}IdCliente uses Python identifier IdCliente
    __IdCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), 'IdCliente', '__httplocalhostelegibilidad_Cliente_httplocalhostelegibilidadIdCliente', False)

    
    IdCliente = property(__IdCliente.value, __IdCliente.set, None, None)

    
    # Element {http://localhost/elegibilidad}Nombre uses Python identifier Nombre
    __Nombre = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), 'Nombre', '__httplocalhostelegibilidad_Cliente_httplocalhostelegibilidadNombre', False)

    
    Nombre = property(__Nombre.value, __Nombre.set, None, None)

    
    # Element {http://localhost/elegibilidad}Fax uses Python identifier Fax
    __Fax = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Fax'), 'Fax', '__httplocalhostelegibilidad_Cliente_httplocalhostelegibilidadFax', False)

    
    Fax = property(__Fax.value, __Fax.set, None, None)


    _ElementMap = {
        __Telefono.name() : __Telefono,
        __IdCliente.name() : __IdCliente,
        __Nombre.name() : __Nombre,
        __Fax.name() : __Fax
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Cliente', Cliente)


# Complex type Comentario with content type ELEMENT_ONLY
class Comentario (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'Comentario')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Hora uses Python identifier Hora
    __Hora = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Hora'), 'Hora', '__httplocalhostelegibilidad_Comentario_httplocalhostelegibilidadHora', False)

    
    Hora = property(__Hora.value, __Hora.set, None, None)

    
    # Element {http://localhost/elegibilidad}Texto uses Python identifier Texto
    __Texto = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Texto'), 'Texto', '__httplocalhostelegibilidad_Comentario_httplocalhostelegibilidadTexto', False)

    
    Texto = property(__Texto.value, __Texto.set, None, None)

    
    # Element {http://localhost/elegibilidad}Fecha uses Python identifier Fecha
    __Fecha = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Fecha'), 'Fecha', '__httplocalhostelegibilidad_Comentario_httplocalhostelegibilidadFecha', False)

    
    Fecha = property(__Fecha.value, __Fecha.set, None, None)


    _ElementMap = {
        __Hora.name() : __Hora,
        __Texto.name() : __Texto,
        __Fecha.name() : __Fecha
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'Comentario', Comentario)


# Complex type CTD_ANON_28 with content type ELEMENT_ONLY
class CTD_ANON_28 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}RegistroFin uses Python identifier RegistroFin
    __RegistroFin = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'), 'RegistroFin', '__httplocalhostelegibilidad_CTD_ANON_28_httplocalhostelegibilidadRegistroFin', False)

    
    RegistroFin = property(__RegistroFin.value, __RegistroFin.set, None, None)

    
    # Element {http://localhost/elegibilidad}FacturaATR uses Python identifier FacturaATR
    __FacturaATR = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'), 'FacturaATR', '__httplocalhostelegibilidad_CTD_ANON_28_httplocalhostelegibilidadFacturaATR', True)

    
    FacturaATR = property(__FacturaATR.value, __FacturaATR.set, None, None)

    
    # Element {http://localhost/elegibilidad}OtrasFacturas uses Python identifier OtrasFacturas
    __OtrasFacturas = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'), 'OtrasFacturas', '__httplocalhostelegibilidad_CTD_ANON_28_httplocalhostelegibilidadOtrasFacturas', True)

    
    OtrasFacturas = property(__OtrasFacturas.value, __OtrasFacturas.set, None, None)


    _ElementMap = {
        __RegistroFin.name() : __RegistroFin,
        __FacturaATR.name() : __FacturaATR,
        __OtrasFacturas.name() : __OtrasFacturas
    }
    _AttributeMap = {
        
    }



# Complex type DatosAPM with content type ELEMENT_ONLY
class DatosAPM (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'DatosAPM')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}FechaCaducidadApm uses Python identifier FechaCaducidadApm
    __FechaCaducidadApm = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'), 'FechaCaducidadApm', '__httplocalhostelegibilidad_DatosAPM_httplocalhostelegibilidadFechaCaducidadApm', False)

    
    FechaCaducidadApm = property(__FechaCaducidadApm.value, __FechaCaducidadApm.set, None, None)

    
    # Element {http://localhost/elegibilidad}ApmAportado uses Python identifier ApmAportado
    __ApmAportado = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ApmAportado'), 'ApmAportado', '__httplocalhostelegibilidad_DatosAPM_httplocalhostelegibilidadApmAportado', False)

    
    ApmAportado = property(__ApmAportado.value, __ApmAportado.set, None, None)

    
    # Element {http://localhost/elegibilidad}PotenciaInstAT uses Python identifier PotenciaInstAT
    __PotenciaInstAT = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstAT'), 'PotenciaInstAT', '__httplocalhostelegibilidad_DatosAPM_httplocalhostelegibilidadPotenciaInstAT', False)

    
    PotenciaInstAT = property(__PotenciaInstAT.value, __PotenciaInstAT.set, None, None)

    
    # Element {http://localhost/elegibilidad}FechaEmisionApm uses Python identifier FechaEmisionApm
    __FechaEmisionApm = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionApm'), 'FechaEmisionApm', '__httplocalhostelegibilidad_DatosAPM_httplocalhostelegibilidadFechaEmisionApm', False)

    
    FechaEmisionApm = property(__FechaEmisionApm.value, __FechaEmisionApm.set, None, None)

    
    # Element {http://localhost/elegibilidad}CodigoApm uses Python identifier CodigoApm
    __CodigoApm = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'CodigoApm'), 'CodigoApm', '__httplocalhostelegibilidad_DatosAPM_httplocalhostelegibilidadCodigoApm', False)

    
    CodigoApm = property(__CodigoApm.value, __CodigoApm.set, None, None)


    _ElementMap = {
        __FechaCaducidadApm.name() : __FechaCaducidadApm,
        __ApmAportado.name() : __ApmAportado,
        __PotenciaInstAT.name() : __PotenciaInstAT,
        __FechaEmisionApm.name() : __FechaEmisionApm,
        __CodigoApm.name() : __CodigoApm
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'DatosAPM', DatosAPM)


# Complex type CTD_ANON_29 with content type ELEMENT_ONLY
class CTD_ANON_29 (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}ImporteTotalExcesos uses Python identifier ImporteTotalExcesos
    __ImporteTotalExcesos = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'), 'ImporteTotalExcesos', '__httplocalhostelegibilidad_CTD_ANON_29_httplocalhostelegibilidadImporteTotalExcesos', False)

    
    ImporteTotalExcesos = property(__ImporteTotalExcesos.value, __ImporteTotalExcesos.set, None, None)

    
    # Element {http://localhost/elegibilidad}Periodo uses Python identifier Periodo
    __Periodo = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), 'Periodo', '__httplocalhostelegibilidad_CTD_ANON_29_httplocalhostelegibilidadPeriodo', True)

    
    Periodo = property(__Periodo.value, __Periodo.set, None, None)


    _ElementMap = {
        __ImporteTotalExcesos.name() : __ImporteTotalExcesos,
        __Periodo.name() : __Periodo
    }
    _AttributeMap = {
        
    }



# Complex type IdYNombreCliente with content type ELEMENT_ONLY
class IdYNombreCliente (pyxb.binding.basis.complexTypeDefinition):
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, u'IdYNombreCliente')
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://localhost/elegibilidad}Nombre uses Python identifier Nombre
    __Nombre = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), 'Nombre', '__httplocalhostelegibilidad_IdYNombreCliente_httplocalhostelegibilidadNombre', False)

    
    Nombre = property(__Nombre.value, __Nombre.set, None, None)

    
    # Element {http://localhost/elegibilidad}IdCliente uses Python identifier IdCliente
    __IdCliente = pyxb.binding.content.ElementUse(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), 'IdCliente', '__httplocalhostelegibilidad_IdYNombreCliente_httplocalhostelegibilidadIdCliente', False)

    
    IdCliente = property(__IdCliente.value, __IdCliente.set, None, None)


    _ElementMap = {
        __Nombre.name() : __Nombre,
        __IdCliente.name() : __IdCliente
    }
    _AttributeMap = {
        
    }
Namespace.addCategoryObject('typeBinding', u'IdYNombreCliente', IdYNombreCliente)


MensajeFacturacion = pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'MensajeFacturacion'), CTD_ANON_18)
Namespace.addCategoryObject('elementBinding', MensajeFacturacion.name().localName(), MensajeFacturacion)



NombreCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SegundoApellido'), X45, scope=NombreCliente))

NombreCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NombreDePila'), X45, scope=NombreCliente))

NombreCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RazonSocial'), X45, scope=NombreCliente))

NombreCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PrimerApellido'), X45, scope=NombreCliente))
NombreCliente._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=NombreCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreDePila'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=NombreCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RazonSocial'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=NombreCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PrimerApellido'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=NombreCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SegundoApellido'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



IdCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Identificador'), X9, scope=IdCliente))

IdCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoCIFNIF'), TipoIdentificador, scope=IdCliente, documentation=u'Tabla 6'))
IdCliente._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=IdCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoCIFNIF'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=IdCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Identificador'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



ModelosAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'), ModeloAparato, scope=ModelosAparato))
ModelosAparato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=41, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=28, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=29, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=31, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=32, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=33, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=35, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=36, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=37, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=38, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=39, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=40, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=42, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=44, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=45, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=46, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=47, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=48, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=49, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=30, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=50, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=51, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=34, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 28 : pyxb.binding.content.ContentModelState(state=28, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 29 : pyxb.binding.content.ContentModelState(state=29, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 30 : pyxb.binding.content.ContentModelState(state=30, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 31 : pyxb.binding.content.ContentModelState(state=31, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 32 : pyxb.binding.content.ContentModelState(state=32, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 33 : pyxb.binding.content.ContentModelState(state=33, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 34 : pyxb.binding.content.ContentModelState(state=34, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 35 : pyxb.binding.content.ContentModelState(state=35, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 36 : pyxb.binding.content.ContentModelState(state=36, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=43, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 37 : pyxb.binding.content.ContentModelState(state=37, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 38 : pyxb.binding.content.ContentModelState(state=38, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 39 : pyxb.binding.content.ContentModelState(state=39, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 40 : pyxb.binding.content.ContentModelState(state=40, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 41 : pyxb.binding.content.ContentModelState(state=41, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 42 : pyxb.binding.content.ContentModelState(state=42, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 43 : pyxb.binding.content.ContentModelState(state=43, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 44 : pyxb.binding.content.ContentModelState(state=44, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 45 : pyxb.binding.content.ContentModelState(state=45, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 46 : pyxb.binding.content.ContentModelState(state=46, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 47 : pyxb.binding.content.ContentModelState(state=47, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 48 : pyxb.binding.content.ContentModelState(state=48, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 49 : pyxb.binding.content.ContentModelState(state=49, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 50 : pyxb.binding.content.ContentModelState(state=50, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
    , 51 : pyxb.binding.content.ContentModelState(state=51, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=ModelosAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloAparato'))),
    ])
})



RegistrosDocs._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'), RegistroDoc, scope=RegistrosDocs))
RegistrosDocs._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=41, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=28, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=29, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=31, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=32, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=33, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=35, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=36, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=37, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=38, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=39, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=40, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=42, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=44, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=45, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=46, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=47, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=48, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=49, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=30, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=50, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=51, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=34, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 28 : pyxb.binding.content.ContentModelState(state=28, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 29 : pyxb.binding.content.ContentModelState(state=29, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 30 : pyxb.binding.content.ContentModelState(state=30, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 31 : pyxb.binding.content.ContentModelState(state=31, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 32 : pyxb.binding.content.ContentModelState(state=32, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 33 : pyxb.binding.content.ContentModelState(state=33, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 34 : pyxb.binding.content.ContentModelState(state=34, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 35 : pyxb.binding.content.ContentModelState(state=35, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 36 : pyxb.binding.content.ContentModelState(state=36, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=43, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 37 : pyxb.binding.content.ContentModelState(state=37, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 38 : pyxb.binding.content.ContentModelState(state=38, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 39 : pyxb.binding.content.ContentModelState(state=39, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 40 : pyxb.binding.content.ContentModelState(state=40, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 41 : pyxb.binding.content.ContentModelState(state=41, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 42 : pyxb.binding.content.ContentModelState(state=42, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 43 : pyxb.binding.content.ContentModelState(state=43, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 44 : pyxb.binding.content.ContentModelState(state=44, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 45 : pyxb.binding.content.ContentModelState(state=45, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 46 : pyxb.binding.content.ContentModelState(state=46, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 47 : pyxb.binding.content.ContentModelState(state=47, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 48 : pyxb.binding.content.ContentModelState(state=48, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 49 : pyxb.binding.content.ContentModelState(state=49, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 50 : pyxb.binding.content.ContentModelState(state=50, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
    , 51 : pyxb.binding.content.ContentModelState(state=51, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=RegistrosDocs._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroDoc'))),
    ])
})



ContratoPasoMRAMLTarifa2SinCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), DireccionCorrespondencia, scope=ContratoPasoMRAMLTarifa2SinCambios))

ContratoPasoMRAMLTarifa2SinCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), IdContrato, scope=ContratoPasoMRAMLTarifa2SinCambios))

ContratoPasoMRAMLTarifa2SinCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), CuentaBancaria, scope=ContratoPasoMRAMLTarifa2SinCambios))

ContratoPasoMRAMLTarifa2SinCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), pyxb.binding.datatypes.date, scope=ContratoPasoMRAMLTarifa2SinCambios))

ContratoPasoMRAMLTarifa2SinCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), Decimal2, scope=ContratoPasoMRAMLTarifa2SinCambios))

ContratoPasoMRAMLTarifa2SinCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), TipoContrato, scope=ContratoPasoMRAMLTarifa2SinCambios))
ContratoPasoMRAMLTarifa2SinCambios._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ContratoPasoMRAMLTarifa2SinCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ContratoPasoMRAMLTarifa2SinCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ContratoPasoMRAMLTarifa2SinCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Duracion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ContratoPasoMRAMLTarifa2SinCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ContratoPasoMRAMLTarifa2SinCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ContratoPasoMRAMLTarifa2SinCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'))),
    ])
})



CTD_ANON_1._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'), STD_ANON_32, scope=CTD_ANON_1))

CTD_ANON_1._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'), CTD_ANON_6, scope=CTD_ANON_1))
CTD_ANON_1._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_1._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaReactiva'))),
    ])
})



ModeloAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ModeloMarca'), X30, scope=ModeloAparato))

ModeloAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Tipo'), TipoAparato, scope=ModeloAparato, documentation=u'Tabla 24'))

ModeloAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Marca'), MarcaAparato, scope=ModeloAparato, documentation=u'Tabla 25'))
ModeloAparato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ModeloAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Tipo'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ModeloAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Marca'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ModeloAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModeloMarca'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoPropiedadAparato'), TipoPropiedadAparato, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoNoICP'), DatosAparatoNoICP, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Propietario'), X20, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ExtraccionLecturas'), Indicativo, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento'), TipoMovimiento, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaActiva'), TipoDHActiva, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Medidas'), MedidasAparato, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaMaximas'), TipoDHMaximas, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Modelo'), ModeloAparato, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'), Indicativo, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'), STD_ANON_56, scope=Aparato, documentation=u'Codigo de precinto'))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoICP'), DatosAparatoICP, scope=Aparato))

Aparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), TiposEquipoMedida, scope=Aparato))
Aparato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Modelo'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaMaximas'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoPropiedadAparato'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaMaximas'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Propietario'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ExtraccionLecturas'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoNoICP'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosAparatoICP'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ExtraccionLecturas'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaMaximas'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DiscriminacionHorariaMaximas'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPrecinto'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Aparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaDirecta'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
})



Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), IdContrato, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Contacto'), Contacto, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), DireccionCorrespondencia, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), pyxb.binding.datatypes.date, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), CuentaBancaria, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), Decimal2, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), TipoContrato, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales'), CondicionesContractuales, scope=Contrato))

Contrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConsumoAnualEstimado'), Decimal13, scope=Contrato))
Contrato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Duracion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contacto'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contacto'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConsumoAnualEstimado'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Contrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'))),
    ])
})



IdContrato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodContrato'), CodigoContrato, scope=IdContrato))
IdContrato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=IdContrato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodContrato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
    ])
})



LocalizacionPS._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Municipio'), Decimal7, scope=LocalizacionPS))

LocalizacionPS._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Poblacion'), Decimal7, scope=LocalizacionPS))

LocalizacionPS._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoVia'), TipoVia, scope=LocalizacionPS))

LocalizacionPS._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'), Decimal5, scope=LocalizacionPS))

LocalizacionPS._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Pais'), X25, scope=LocalizacionPS))

LocalizacionPS._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Provincia'), Decimal2, scope=LocalizacionPS))
LocalizacionPS._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Pais'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Provincia'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Municipio'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Poblacion'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoVia'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=LocalizacionPS._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'))),
    ])
})



Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoREEEmpresaEmisora'), Agente, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoREEEmpresaDestino'), Agente, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoDelProceso'), CodigoDelProceso, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoDePaso'), CodigoDePaso, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Version'), Version, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoDeSolicitud'), CodigoDeSolicitud, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SecuencialDeSolicitud'), SecuencialDeSolicitud, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Codigo'), Codigo, scope=Cabecera))

Cabecera._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaSolicitud'), pyxb.binding.datatypes.dateTime, scope=Cabecera))
Cabecera._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoREEEmpresaEmisora'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoREEEmpresaDestino'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaSolicitud'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoDelProceso'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Version'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoDePaso'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoDeSolicitud'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SecuencialDeSolicitud'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Cabecera._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Codigo'))),
    ])
})



TelefonoInternacional._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Numero'), Decimal9, scope=TelefonoInternacional))

TelefonoInternacional._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PrefijoPais'), Decimal2, scope=TelefonoInternacional))
TelefonoInternacional._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=TelefonoInternacional._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PrefijoPais'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=TelefonoInternacional._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Numero'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



TipoIVAIGIC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Importe'), STD_ANON_60, scope=TipoIVAIGIC, documentation=u'En Canarias se informar\xe1 IGIC; en el resto, IVA.'))

TipoIVAIGIC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'BaseImponible'), STD_ANON_30, scope=TipoIVAIGIC, documentation=u'En Canarias se informar\xe1 IGIC; en el resto, IVA.'))

TipoIVAIGIC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Porcentaje'), STD_ANON_16, scope=TipoIVAIGIC, documentation=u'En Canarias se informar\xe1 IGIC; en el resto, IVA.'))
TipoIVAIGIC._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=TipoIVAIGIC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'BaseImponible'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=TipoIVAIGIC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Porcentaje'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=TipoIVAIGIC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Importe'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



CTD_ANON_2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'), STD_ANON_55, scope=CTD_ANON_2))

CTD_ANON_2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'), CTD_ANON_9, scope=CTD_ANON_2))
CTD_ANON_2._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoEnergiaActiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalEnergiaActiva'))),
    ])
})



CTD_ANON_3._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IVAIGICReducido'), TipoIVAIGIC, scope=CTD_ANON_3))

CTD_ANON_3._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesOtrasFacturas'), CTD_ANON_26, scope=CTD_ANON_3))

CTD_ANON_3._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IVA'), TipoIVAIGIC, scope=CTD_ANON_3))

CTD_ANON_3._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Concepto'), CTD_ANON_20, scope=CTD_ANON_3))
CTD_ANON_3._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesOtrasFacturas'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVAIGICReducido'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_3._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Concepto'))),
    ])
})



CuentaBancaria._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Cuenta'), Decimal10, scope=CuentaBancaria))

CuentaBancaria._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Banco'), Decimal4, scope=CuentaBancaria))

CuentaBancaria._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Sucursal'), Decimal4, scope=CuentaBancaria))

CuentaBancaria._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DC'), STD_ANON_19, scope=CuentaBancaria))
CuentaBancaria._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CuentaBancaria._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Banco'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CuentaBancaria._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Sucursal'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CuentaBancaria._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DC'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CuentaBancaria._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Cuenta'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SaldoCobro'), STD_ANON_5, scope=TipoDatosGeneralesFactura, documentation=u' Saldo cobro '))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CIFEmisora'), STD_ANON_25, scope=TipoDatosGeneralesFactura))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoFactura'), TipoFactura, scope=TipoDatosGeneralesFactura, documentation=u'Tabla 101 (Normal, fraude...)'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IndicativoFacturaRectificadora'), TipoFacturaRectificadora, scope=TipoDatosGeneralesFactura, documentation=u'Tabla 102 (N-Normal, R-Rectificadora , A-Anuladora, B-Anuladora con sustituyente)'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Observaciones'), STD_ANON_59, scope=TipoDatosGeneralesFactura, documentation=u'Comentarios a la factura, como p.e. nro. Expte anormalidad '))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroFacturaRectificada'), STD_ANON_34, scope=TipoDatosGeneralesFactura, documentation=u'N\xfamero de factura a la que rectifica.'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroFactura'), STD_ANON_37, scope=TipoDatosGeneralesFactura, documentation=u'N\xfamero de la factura (albar\xe1n, en su caso)'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalFactura'), STD_ANON_31, scope=TipoDatosGeneralesFactura))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaFactura'), pyxb.binding.datatypes.date, scope=TipoDatosGeneralesFactura, documentation=u'Fecha oficial de la factura (albar\xe1n, en su caso)'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda'), TipoMoneda, scope=TipoDatosGeneralesFactura, documentation=u'Tabla 104 (01-Pesetas, 02-Euros)'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SaldoFactura'), STD_ANON_20, scope=TipoDatosGeneralesFactura, documentation=u'Para los casos de rectificaciones'))

TipoDatosGeneralesFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoFiscalFactura'), STD_ANON_15, scope=TipoDatosGeneralesFactura, documentation=u'N\xfamero de IVA'))
TipoDatosGeneralesFactura._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroFactura'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoFactura'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalFactura'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IndicativoFacturaRectificadora'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Observaciones'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalFactura'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroFacturaRectificada'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaFactura'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SaldoFactura'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaFactura'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SaldoCobro'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CIFEmisora'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Observaciones'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoFiscalFactura'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=TipoDatosGeneralesFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalFactura'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
})



CTD_ANON_4._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Importe'), STD_ANON_51, scope=CTD_ANON_4))

CTD_ANON_4._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'BaseImponible'), STD_ANON_1, scope=CTD_ANON_4))

CTD_ANON_4._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Coeficiente'), STD_ANON_42, scope=CTD_ANON_4))

CTD_ANON_4._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Porcentaje'), STD_ANON_36, scope=CTD_ANON_4))
CTD_ANON_4._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_4._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'BaseImponible'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_4._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Coeficiente'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_4._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Porcentaje'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_4._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Importe'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



TipoDireccionSuministro._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DirSuministro'), STD_ANON_7, scope=TipoDireccionSuministro))

TipoDireccionSuministro._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CUPS'), CUPS, scope=TipoDireccionSuministro))

TipoDireccionSuministro._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Municipio'), Decimal7, scope=TipoDireccionSuministro))
TipoDireccionSuministro._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=TipoDireccionSuministro._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CUPS'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=TipoDireccionSuministro._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Municipio'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=TipoDireccionSuministro._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DirSuministro'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



CTD_ANON_5._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PrecioEnergiaReactiva'), STD_ANON_52, scope=CTD_ANON_5))

CTD_ANON_5._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ValorEnergiaReactiva'), STD_ANON_27, scope=CTD_ANON_5))
CTD_ANON_5._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_5._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ValorEnergiaReactiva'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_5._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PrecioEnergiaReactiva'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



CondicionesContractuales._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciasMaximas'), Potencias, scope=CondicionesContractuales))

CondicionesContractuales._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'), Tarifa, scope=CondicionesContractuales))

CondicionesContractuales._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'), Potencias, scope=CondicionesContractuales))
CondicionesContractuales._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CondicionesContractuales._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CondicionesContractuales._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CondicionesContractuales._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciasMaximas'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



Comentarios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Comentario'), Comentario, scope=Comentarios))
Comentarios._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=41, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=28, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=29, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=31, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=32, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=33, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=35, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=36, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=37, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=38, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=39, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=40, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=42, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=44, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=45, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=46, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=47, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=48, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=49, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=30, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=50, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=51, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=34, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 28 : pyxb.binding.content.ContentModelState(state=28, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 29 : pyxb.binding.content.ContentModelState(state=29, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 30 : pyxb.binding.content.ContentModelState(state=30, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 31 : pyxb.binding.content.ContentModelState(state=31, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 32 : pyxb.binding.content.ContentModelState(state=32, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 33 : pyxb.binding.content.ContentModelState(state=33, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 34 : pyxb.binding.content.ContentModelState(state=34, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 35 : pyxb.binding.content.ContentModelState(state=35, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 36 : pyxb.binding.content.ContentModelState(state=36, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=43, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 37 : pyxb.binding.content.ContentModelState(state=37, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 38 : pyxb.binding.content.ContentModelState(state=38, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 39 : pyxb.binding.content.ContentModelState(state=39, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 40 : pyxb.binding.content.ContentModelState(state=40, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 41 : pyxb.binding.content.ContentModelState(state=41, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 42 : pyxb.binding.content.ContentModelState(state=42, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 43 : pyxb.binding.content.ContentModelState(state=43, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 44 : pyxb.binding.content.ContentModelState(state=44, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 45 : pyxb.binding.content.ContentModelState(state=45, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 46 : pyxb.binding.content.ContentModelState(state=46, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 47 : pyxb.binding.content.ContentModelState(state=47, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 48 : pyxb.binding.content.ContentModelState(state=48, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 49 : pyxb.binding.content.ContentModelState(state=49, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 50 : pyxb.binding.content.ContentModelState(state=50, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
    , 51 : pyxb.binding.content.ContentModelState(state=51, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=Comentarios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Comentario'))),
    ])
})



CTD_ANON_6._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), CTD_ANON_5, scope=CTD_ANON_6))

CTD_ANON_6._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'), pyxb.binding.datatypes.date, scope=CTD_ANON_6))

CTD_ANON_6._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'), pyxb.binding.datatypes.date, scope=CTD_ANON_6))
CTD_ANON_6._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_6._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
})



MedidaResto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'), ModelosAparato, scope=MedidaResto))

MedidaResto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), TiposEquipoMedida, scope=MedidaResto))

MedidaResto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'), IndicativoNCD, scope=MedidaResto))

MedidaResto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'), IndicativoYCD, scope=MedidaResto))

MedidaResto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'), IndicativoNCD, scope=MedidaResto))

MedidaResto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'), IndicativoYCD, scope=MedidaResto))
MedidaResto._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaResto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
})



DireccionCorrespondencia._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Direccion'), Direccion, scope=DireccionCorrespondencia))

DireccionCorrespondencia._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Indicador'), STD_ANON_44, scope=DireccionCorrespondencia))
DireccionCorrespondencia._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DireccionCorrespondencia._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Indicador'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DireccionCorrespondencia._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Direccion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



ClienteSinTelefono._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TitularContratoVsTitularPago'), Indicativo, scope=ClienteSinTelefono))

ClienteSinTelefono._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), IdCliente, scope=ClienteSinTelefono))

ClienteSinTelefono._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), NombreCliente, scope=ClienteSinTelefono))
ClienteSinTelefono._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ClienteSinTelefono._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ClienteSinTelefono._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Nombre'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ClienteSinTelefono._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TitularContratoVsTitularPago'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



CTD_ANON_7._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteFacturacionAlquileres'), STD_ANON_6, scope=CTD_ANON_7, documentation=u'Suma de alquileres de equipos asociados al CUPS.'))
CTD_ANON_7._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_7._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteFacturacionAlquileres'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
    ])
})



Potencias._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Potencia'), CTD_ANON_14, scope=Potencias))
Potencias._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Potencias._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
})



CTD_ANON_8._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Aparato'), CTD_ANON_16, scope=CTD_ANON_8))

CTD_ANON_8._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodUnificadoPuntoSuministro'), STD_ANON_39, scope=CTD_ANON_8))
CTD_ANON_8._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodUnificadoPuntoSuministro'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_8._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
})



MedidasAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Medida'), MedidaAparato, scope=MedidasAparato))
MedidasAparato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidasAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medida'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidasAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medida'))),
    ])
})



CTD_ANON_9._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), CTD_ANON_24, scope=CTD_ANON_9))

CTD_ANON_9._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'), pyxb.binding.datatypes.date, scope=CTD_ANON_9))

CTD_ANON_9._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'), pyxb.binding.datatypes.date, scope=CTD_ANON_9))
CTD_ANON_9._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_9._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
})



CTD_ANON_10._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), CTD_ANON_25, scope=CTD_ANON_10))

CTD_ANON_10._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'), pyxb.binding.datatypes.date, scope=CTD_ANON_10))

CTD_ANON_10._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'), pyxb.binding.datatypes.date, scope=CTD_ANON_10))
CTD_ANON_10._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaDesde'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHasta'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_10._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
    ])
})



CTD_ANON_11._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosFacturaATR'), CTD_ANON_17, scope=CTD_ANON_11))

CTD_ANON_11._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionSuministro'), TipoDireccionSuministro, scope=CTD_ANON_11))

CTD_ANON_11._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Contrato'), CodigoContrato, scope=CTD_ANON_11))

CTD_ANON_11._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFactura'), TipoDatosGeneralesFactura, scope=CTD_ANON_11))

CTD_ANON_11._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Cliente'), IdCliente, scope=CTD_ANON_11))
CTD_ANON_11._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_11._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionSuministro'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_11._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Cliente'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_11._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contrato'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_11._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFactura'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_11._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosFacturaATR'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
})



ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales2n'), CondicionesContractuales2n, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Contacto'), Contacto, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), DireccionCorrespondencia, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), CuentaBancaria, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), IdContrato, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), pyxb.binding.datatypes.date, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), Decimal2, scope=ContratoPasoMRAMLTarifa2ConCambios))

ContratoPasoMRAMLTarifa2ConCambios._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), TipoContrato, scope=ContratoPasoMRAMLTarifa2ConCambios))
ContratoPasoMRAMLTarifa2ConCambios._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Duracion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales2n'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contacto'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ContratoPasoMRAMLTarifa2ConCambios._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'))),
    ])
})



CTD_ANON_12._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ValorExcesoPotencia'), STD_ANON_4, scope=CTD_ANON_12, documentation=u'En Watios'))
CTD_ANON_12._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_12._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ValorExcesoPotencia'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
    ])
})



Contacto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Telefono'), TelefonoInternacional, scope=Contacto))

Contacto._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), NombreCliente, scope=Contacto))
Contacto._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Contacto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Nombre'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Contacto._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Telefono'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'), Decimal2, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'), X10, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'), FuncionAparato, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'), DecimalS9V3, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'), DecimalS9V3, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'), Decimal2, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'), Decimal2, scope=DatosAparatoICP))

DatosAparatoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PeriodoFabricacion'), Decimal4, scope=DatosAparatoICP))
DatosAparatoICP._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PeriodoFabricacion'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
    ])
})



CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'), CTD_ANON_27, scope=CTD_ANON_13))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'LecturaHasta'), TipoLimiteIntervaloLectura, scope=CTD_ANON_13, documentation=u'Valor actual de la ventana de facturaci\xf3n'))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroRuedasEnteras'), STD_ANON_33, scope=CTD_ANON_13))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Ajuste'), CTD_ANON_22, scope=CTD_ANON_13))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroRuedasDecimales'), STD_ANON_22, scope=CTD_ANON_13))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMultiplicadora'), STD_ANON_45, scope=CTD_ANON_13, documentation=u'Coeficiente de multiplicaci\xf3n del equipo'))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConsumoCalculado'), STD_ANON_11, scope=CTD_ANON_13, documentation=u'Consumo'))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoPeriodo'), TipoCodigoPeriodoDH, scope=CTD_ANON_13, documentation=u'Tabla 42'))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaHoraMaximetro'), pyxb.binding.datatypes.dateTime, scope=CTD_ANON_13))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Magnitud'), MagnitudMedida, scope=CTD_ANON_13, documentation=u'Tabla 43'))

CTD_ANON_13._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'LecturaDesde'), TipoLimiteIntervaloLectura, scope=CTD_ANON_13, documentation=u'Lectura anterior ventana de facturaci\xf3n'))
CTD_ANON_13._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Magnitud'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoPeriodo'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaHasta'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMultiplicadora'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Ajuste'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHoraMaximetro'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroRuedasEnteras'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHoraMaximetro'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroRuedasDecimales'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHoraMaximetro'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConsumoCalculado'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_13._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaDesde'))),
    ])
})



PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CUPS'), CUPS, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Aparatos'), Aparatos, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodPMPrincipal'), CodPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodPM'), CodPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'), X10, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'), EstadoTelefono, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'), Decimal9, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodREE'), X8, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionPuntoMedida'), X10, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Funcion'), FuncionPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'), pyxb.binding.datatypes.date, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EstadoPM'), EstadoPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaAlta'), pyxb.binding.datatypes.date, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoPM'), TipoPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaBaja'), pyxb.binding.datatypes.date, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento'), AltaBajaModificacion, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionEnlace'), X10, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumLinea'), Decimal2, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ComentariosPM'), ComentariosPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ModoLectura'), ModoLecturaPM, scope=PuntoDeMedida))

PuntoDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TelefonoTelemedida'), Decimal9, scope=PuntoDeMedida))
PuntoDeMedida._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPM'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentariosPM'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Funcion'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaAlta'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionPuntoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumLinea'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TelefonoTelemedida'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CUPS'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodREE'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CUPS'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumLinea'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TelefonoTelemedida'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModoLectura'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'))),
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentariosPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparatos'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EstadoPM'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionEnlace'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionPuntoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumLinea'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TelefonoTelemedida'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoMovimiento'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoPM'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPMPrincipal'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModoLectura'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EstadoTelefono'))),
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaVigor'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TelefonoTelemedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ClaveAcceso'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentariosPM'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparatos'))),
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=PuntoDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaBaja'))),
    ])
})



ComentariosPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'), ComentarioPM, scope=ComentariosPM))
ComentariosPM._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ComentariosPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ComentarioPM'))),
    ])
})



PuntosDeMedida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'), PuntoDeMedida, scope=PuntosDeMedida))
PuntosDeMedida._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=PuntosDeMedida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PuntoDeMedida'))),
    ])
})



CTD_ANON_15._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroMeses'), STD_ANON_49, scope=CTD_ANON_15))

CTD_ANON_15._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaDesdeFactura'), pyxb.binding.datatypes.date, scope=CTD_ANON_15))

CTD_ANON_15._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaHastaFactura'), pyxb.binding.datatypes.date, scope=CTD_ANON_15))
CTD_ANON_15._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_15._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaDesdeFactura'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_15._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHastaFactura'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_15._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroMeses'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



CTD_ANON_16._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Integrador'), CTD_ANON_13, scope=CTD_ANON_16))

CTD_ANON_16._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Tipo'), TipoAparato, scope=CTD_ANON_16, documentation=u'Tabla 24'))

CTD_ANON_16._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoDH'), TipoDH, scope=CTD_ANON_16, documentation=u'Tabla 35'))

CTD_ANON_16._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'), STD_ANON_48, scope=CTD_ANON_16))

CTD_ANON_16._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Marca'), MarcaAparato, scope=CTD_ANON_16, documentation=u'Tabla 25'))
CTD_ANON_16._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=46, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Tipo'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=28, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=29, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=30, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=31, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=32, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=33, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=34, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=35, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=36, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=37, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=38, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=39, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 28 : pyxb.binding.content.ContentModelState(state=28, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=40, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 29 : pyxb.binding.content.ContentModelState(state=29, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=41, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 30 : pyxb.binding.content.ContentModelState(state=30, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=42, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 31 : pyxb.binding.content.ContentModelState(state=31, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=43, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 32 : pyxb.binding.content.ContentModelState(state=32, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=44, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 33 : pyxb.binding.content.ContentModelState(state=33, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=45, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 34 : pyxb.binding.content.ContentModelState(state=34, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=47, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 35 : pyxb.binding.content.ContentModelState(state=35, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=48, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 36 : pyxb.binding.content.ContentModelState(state=36, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=49, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 37 : pyxb.binding.content.ContentModelState(state=37, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=50, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 38 : pyxb.binding.content.ContentModelState(state=38, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=51, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 39 : pyxb.binding.content.ContentModelState(state=39, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=52, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 40 : pyxb.binding.content.ContentModelState(state=40, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=53, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 41 : pyxb.binding.content.ContentModelState(state=41, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=54, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 42 : pyxb.binding.content.ContentModelState(state=42, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=55, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 43 : pyxb.binding.content.ContentModelState(state=43, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=56, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 44 : pyxb.binding.content.ContentModelState(state=44, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=57, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 45 : pyxb.binding.content.ContentModelState(state=45, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=58, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 46 : pyxb.binding.content.ContentModelState(state=46, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=60, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Marca'))),
    ])
    , 47 : pyxb.binding.content.ContentModelState(state=47, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=61, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 48 : pyxb.binding.content.ContentModelState(state=48, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=62, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 49 : pyxb.binding.content.ContentModelState(state=49, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=63, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 50 : pyxb.binding.content.ContentModelState(state=50, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=64, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 51 : pyxb.binding.content.ContentModelState(state=51, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=66, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 52 : pyxb.binding.content.ContentModelState(state=52, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=67, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 53 : pyxb.binding.content.ContentModelState(state=53, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=68, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 54 : pyxb.binding.content.ContentModelState(state=54, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=69, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 55 : pyxb.binding.content.ContentModelState(state=55, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=59, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 56 : pyxb.binding.content.ContentModelState(state=56, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=71, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 57 : pyxb.binding.content.ContentModelState(state=57, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=72, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 58 : pyxb.binding.content.ContentModelState(state=58, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=73, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 59 : pyxb.binding.content.ContentModelState(state=59, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=74, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 60 : pyxb.binding.content.ContentModelState(state=60, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=75, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'))),
    ])
    , 61 : pyxb.binding.content.ContentModelState(state=61, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=65, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 62 : pyxb.binding.content.ContentModelState(state=62, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=77, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 63 : pyxb.binding.content.ContentModelState(state=63, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=78, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 64 : pyxb.binding.content.ContentModelState(state=64, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=79, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 65 : pyxb.binding.content.ContentModelState(state=65, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=80, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 66 : pyxb.binding.content.ContentModelState(state=66, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=70, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 67 : pyxb.binding.content.ContentModelState(state=67, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=82, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 68 : pyxb.binding.content.ContentModelState(state=68, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=83, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 69 : pyxb.binding.content.ContentModelState(state=69, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=84, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 70 : pyxb.binding.content.ContentModelState(state=70, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=85, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 71 : pyxb.binding.content.ContentModelState(state=71, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=76, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 72 : pyxb.binding.content.ContentModelState(state=72, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=87, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 73 : pyxb.binding.content.ContentModelState(state=73, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=88, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 74 : pyxb.binding.content.ContentModelState(state=74, is_final=True, transitions=[
    ])
    , 75 : pyxb.binding.content.ContentModelState(state=75, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=89, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoDH'))),
    ])
    , 76 : pyxb.binding.content.ContentModelState(state=76, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=90, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 77 : pyxb.binding.content.ContentModelState(state=77, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=81, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 78 : pyxb.binding.content.ContentModelState(state=78, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=92, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 79 : pyxb.binding.content.ContentModelState(state=79, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=93, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 80 : pyxb.binding.content.ContentModelState(state=80, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=94, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 81 : pyxb.binding.content.ContentModelState(state=81, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=95, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 82 : pyxb.binding.content.ContentModelState(state=82, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=86, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 83 : pyxb.binding.content.ContentModelState(state=83, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=97, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 84 : pyxb.binding.content.ContentModelState(state=84, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=98, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 85 : pyxb.binding.content.ContentModelState(state=85, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=99, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 86 : pyxb.binding.content.ContentModelState(state=86, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=100, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 87 : pyxb.binding.content.ContentModelState(state=87, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=91, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 88 : pyxb.binding.content.ContentModelState(state=88, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=102, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 89 : pyxb.binding.content.ContentModelState(state=89, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=103, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 90 : pyxb.binding.content.ContentModelState(state=90, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=104, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 91 : pyxb.binding.content.ContentModelState(state=91, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=105, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 92 : pyxb.binding.content.ContentModelState(state=92, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=96, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 93 : pyxb.binding.content.ContentModelState(state=93, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 94 : pyxb.binding.content.ContentModelState(state=94, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 95 : pyxb.binding.content.ContentModelState(state=95, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 96 : pyxb.binding.content.ContentModelState(state=96, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 97 : pyxb.binding.content.ContentModelState(state=97, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=101, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 98 : pyxb.binding.content.ContentModelState(state=98, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 99 : pyxb.binding.content.ContentModelState(state=99, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 100 : pyxb.binding.content.ContentModelState(state=100, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 101 : pyxb.binding.content.ContentModelState(state=101, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 102 : pyxb.binding.content.ContentModelState(state=102, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 103 : pyxb.binding.content.ContentModelState(state=103, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 104 : pyxb.binding.content.ContentModelState(state=104, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
    , 105 : pyxb.binding.content.ContentModelState(state=105, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=CTD_ANON_16._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Integrador'))),
    ])
})



CTD_ANON_17._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), CTD_ANON_15, scope=CTD_ANON_17))

CTD_ANON_17._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoFacturacion'), TipoFacturacionATR, scope=CTD_ANON_17, documentation=u'Tabla 105 (1-Regular (Periodo completo); 2-Irregular (Periodo incompleto))'))

CTD_ANON_17._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoTarifa'), TarifaATR, scope=CTD_ANON_17, documentation=u'Tabla 107'))

CTD_ANON_17._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaBOE'), pyxb.binding.datatypes.date, scope=CTD_ANON_17))

CTD_ANON_17._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IndAltamedidoenBaja'), Indicativo, scope=CTD_ANON_17))
CTD_ANON_17._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_17._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoFacturacion'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_17._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaBOE'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_17._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoTarifa'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_17._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IndAltamedidoenBaja'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_17._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
})



DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'), Decimal2, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'), DecimalS9V3, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'), Decimal2, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'), DecimalS9V3, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'), Decimal2, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PeriodoFabricacion'), Decimal4, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'), X10, scope=DatosAparatoNoICP))

DatosAparatoNoICP._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'), FuncionAparato, scope=DatosAparatoNoICP))
DatosAparatoNoICP._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PeriodoFabricacion'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroSerie'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasDecimales'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FuncionAparato'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumIntegradores'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteEnergia'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConstanteMaximetro'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAparatoNoICP._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RuedasEnteras'))),
    ])
})



DatosAceptacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaUltimaLectura'), pyxb.binding.datatypes.date, scope=DatosAceptacion))

DatosAceptacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaAceptacion'), pyxb.binding.datatypes.date, scope=DatosAceptacion))

DatosAceptacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciaActual'), Potencia, scope=DatosAceptacion))

DatosAceptacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ActuacionCampo'), Indicativo, scope=DatosAceptacion))
DatosAceptacion._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAceptacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaAceptacion'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAceptacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaActual'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAceptacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ActuacionCampo'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosAceptacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaUltimaLectura'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



Aparatos._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Aparato'), Aparato, scope=Aparatos))
Aparatos._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=34, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=28, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=29, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=30, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=31, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=32, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=33, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=35, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=37, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=38, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=True, transitions=[
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=39, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=40, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=41, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 28 : pyxb.binding.content.ContentModelState(state=28, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 29 : pyxb.binding.content.ContentModelState(state=29, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 30 : pyxb.binding.content.ContentModelState(state=30, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=36, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 31 : pyxb.binding.content.ContentModelState(state=31, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 32 : pyxb.binding.content.ContentModelState(state=32, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 33 : pyxb.binding.content.ContentModelState(state=33, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 34 : pyxb.binding.content.ContentModelState(state=34, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 35 : pyxb.binding.content.ContentModelState(state=35, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 36 : pyxb.binding.content.ContentModelState(state=36, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 37 : pyxb.binding.content.ContentModelState(state=37, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 38 : pyxb.binding.content.ContentModelState(state=38, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 39 : pyxb.binding.content.ContentModelState(state=39, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 40 : pyxb.binding.content.ContentModelState(state=40, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
    , 41 : pyxb.binding.content.ContentModelState(state=41, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=Aparatos._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Aparato'))),
    ])
})



MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), TipoCodigoPeriodoDH, scope=MedidaAparato))

MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'MagnitudMedida'), MagnitudMedida, scope=MedidaAparato))

MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoDH'), TipoDH, scope=MedidaAparato))

MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Procedencia'), Procedencia, scope=MedidaAparato))

MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'LecturaAnterior'), DecimalS10V2, scope=MedidaAparato))

MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'), AnomaliaMedida, scope=MedidaAparato))

MedidaAparato._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'), X250, scope=MedidaAparato))
MedidaAparato._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoDH'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'MagnitudMedida'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Procedencia'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LecturaAnterior'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Anomalia'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaAparato._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'))),
    ])
})



CTD_ANON_18._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Cabecera'), Cabecera, scope=CTD_ANON_18))

CTD_ANON_18._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Facturas'), CTD_ANON_28, scope=CTD_ANON_18))

CTD_ANON_18._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'OtrosDatosFactura'), OtrosDatosFactura, scope=CTD_ANON_18))
CTD_ANON_18._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_18._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Cabecera'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_18._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Facturas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_18._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrosDatosFactura'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, term=pyxb.binding.content.Wildcard(process_contents=pyxb.binding.content.Wildcard.PC_skip, namespace_constraint=set(u'http://www.w3.org/2000/09/xmldsig#'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, term=pyxb.binding.content.Wildcard(process_contents=pyxb.binding.content.Wildcard.PC_skip, namespace_constraint=set(u'http://www.w3.org/2000/09/xmldsig#'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



CTD_ANON_19._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'), STD_ANON_53, scope=CTD_ANON_19))

CTD_ANON_19._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'), CTD_ANON_10, scope=CTD_ANON_19))
CTD_ANON_19._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TerminoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_19._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalTerminoPotencia'))),
    ])
})



ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Duracion'), Decimal2, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConsumoAnualEstimado'), Decimal13, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'), TipoContrato, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales'), CondicionesContractuales, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Contacto'), Contacto, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'), IdContrato, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'), DireccionCorrespondencia, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), CuentaBancaria, scope=ContratoConModificacion))

ContratoConModificacion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'), pyxb.binding.datatypes.date, scope=ContratoConModificacion))
ContratoConModificacion._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdContrato'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Duracion'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaFinalizacion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CondicionesContractuales'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConsumoAnualEstimado'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contacto'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contacto'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionCorrespondencia'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ContratoConModificacion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoContratoATR'))),
    ])
})



CTD_ANON_20._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalConcepto'), STD_ANON_50, scope=CTD_ANON_20))

CTD_ANON_20._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoConcepto'), TipoConcepto, scope=CTD_ANON_20, documentation=u'Tabla 103'))

CTD_ANON_20._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteUnidadConcepto'), STD_ANON_2, scope=CTD_ANON_20, documentation=u'P.e., precio en tarifa del kW contratado'))

CTD_ANON_20._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'UnidadesConcepto'), STD_ANON_12, scope=CTD_ANON_20, documentation=u'P.e., en contrataci\xf3n kW a contratar'))
CTD_ANON_20._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoConcepto'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteUnidadConcepto'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalConcepto'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'UnidadesConcepto'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalConcepto'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteUnidadConcepto'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_20._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalConcepto'))),
    ])
})



CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImpuestoElectrico'), CTD_ANON_4, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Alquileres'), CTD_ANON_7, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IVA'), TipoIVAIGIC, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFacturaATR'), CTD_ANON_11, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'), STD_ANON_29, scope=CTD_ANON_21, documentation=u'Para facturar conceptos excepcionales que solo lleven aplicado IVA.'))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EnergiaReactiva'), CTD_ANON_1, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ExcesoPotencia'), CTD_ANON_29, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EnergiaActiva'), CTD_ANON_2, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Potencia'), CTD_ANON_19, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IVAIGICReducido'), TipoIVAIGIC, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteIntereses'), STD_ANON_43, scope=CTD_ANON_21, documentation=u'En los casos que se incluyan intereses de demora'))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Medidas'), CTD_ANON_8, scope=CTD_ANON_21))

CTD_ANON_21._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'), STD_ANON_47, scope=CTD_ANON_21, documentation=u'Para facturar conceptos excepcionales que lleven aplicado impuesto el\xe9ctrico e IVA.'))
CTD_ANON_21._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFacturaATR'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVAIGICReducido'))),
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImpuestoElectrico'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ExcesoPotencia'))),
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EnergiaActiva'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImpuestoElectrico'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImpuestoElectrico'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EnergiaReactiva'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteIntereses'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=True, transitions=[
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Potencia'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Alquileres'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIEIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ConceptoIVA'))),
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteIntereses'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImpuestoElectrico'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EnergiaReactiva'))),
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EnergiaActiva'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Medidas'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_21._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IVA'))),
    ])
})



CondicionesContractuales2n._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'), Potencias, scope=CondicionesContractuales2n))

CondicionesContractuales2n._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'), Tarifa, scope=CondicionesContractuales2n))
CondicionesContractuales2n._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CondicionesContractuales2n._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CondicionesContractuales2n._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



ClienteConDireccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), IdCliente, scope=ClienteConDireccion))

ClienteConDireccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Direccion'), Direccion, scope=ClienteConDireccion))

ClienteConDireccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), NombreCliente, scope=ClienteConDireccion))

ClienteConDireccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Fax'), TelefonoInternacional, scope=ClienteConDireccion))

ClienteConDireccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Telefono'), TelefonoInternacional, scope=ClienteConDireccion))

ClienteConDireccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IndicadorTipoDireccion'), STD_ANON_58, scope=ClienteConDireccion))
ClienteConDireccion._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Nombre'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Fax'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IndicadorTipoDireccion'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Telefono'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IndicadorTipoDireccion'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Telefono'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Direccion'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=ClienteConDireccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IndicadorTipoDireccion'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
})



TipoLimiteIntervaloLectura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Lectura'), STD_ANON_17, scope=TipoLimiteIntervaloLectura))

TipoLimiteIntervaloLectura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaHora'), pyxb.binding.datatypes.dateTime, scope=TipoLimiteIntervaloLectura))

TipoLimiteIntervaloLectura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Procedencia'), Procedencia, scope=TipoLimiteIntervaloLectura, documentation=u'Tabla 44'))
TipoLimiteIntervaloLectura._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=TipoLimiteIntervaloLectura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaHora'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=TipoLimiteIntervaloLectura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Procedencia'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=TipoLimiteIntervaloLectura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Lectura'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



CTD_ANON_22._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'AjustePorIntegrador'), STD_ANON_8, scope=CTD_ANON_22))

CTD_ANON_22._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoMotivoAjuste'), TipoMotivoAjuste, scope=CTD_ANON_22, documentation=u'Tabla 106'))
CTD_ANON_22._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_22._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoMotivoAjuste'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_22._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AjustePorIntegrador'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaValor'), pyxb.binding.datatypes.date, scope=CTD_ANON_23))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda'), TipoMoneda, scope=CTD_ANON_23, documentation=u'Tabla 104 (01-Pesetas, 02-Euros)'))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotal'), STD_ANON_9, scope=CTD_ANON_23, documentation=u'Importe total de todas las facturas del XML'))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SaldoTotalFacturacion'), STD_ANON_57, scope=CTD_ANON_23, documentation=u'Saldo total de todas las facturas del xml'))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TotalRecibos'), STD_ANON_23, scope=CTD_ANON_23, documentation=u'Numero recibos del XML'))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaLimitePago'), pyxb.binding.datatypes.date, scope=CTD_ANON_23, documentation=u'Fecha teorica de pago '))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'), CuentaBancaria, scope=CTD_ANON_23))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SaldoTotalCobro'), STD_ANON_35, scope=CTD_ANON_23, documentation=u'Saldo total cobro del XML'))

CTD_ANON_23._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdRemesa'), STD_ANON_13, scope=CTD_ANON_23, documentation=u'identificacion remesa o agrupaci\xf3n'))
CTD_ANON_23._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotal'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SaldoTotalFacturacion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CuentaBancaria'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdRemesa'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SaldoTotalCobro'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdRemesa'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TotalRecibos'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoMoneda'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaValor'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_23._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaLimitePago'))),
    ])
})



ComentarioPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Texto'), X120, scope=ComentarioPM))
ComentarioPM._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=ComentarioPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Texto'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
    ])
})



MedidaC2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'), ModelosAparato, scope=MedidaC2))

MedidaC2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), TiposEquipoMedida, scope=MedidaC2))

MedidaC2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'), IndicativoNCD, scope=MedidaC2))

MedidaC2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'), IndicativoYCD, scope=MedidaC2))

MedidaC2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'), IndicativoNCD, scope=MedidaC2))

MedidaC2._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'), IndicativoYCD, scope=MedidaC2))
MedidaC2._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=MedidaC2._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
})



CondicionesContractualesC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciasMaximas'), Potencias, scope=CondicionesContractualesC))

CondicionesContractualesC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'), Tarifa, scope=CondicionesContractualesC))

CondicionesContractualesC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'MarcaMedidaBTConPerdidas'), X2, scope=CondicionesContractualesC))

CondicionesContractualesC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'), Potencias, scope=CondicionesContractualesC))

CondicionesContractualesC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'KVAsTrafo'), Potencia, scope=CondicionesContractualesC))

CondicionesContractualesC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PorcentajePerdidasPactadas'), X6, scope=CondicionesContractualesC))
CondicionesContractualesC._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TarifaATR'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciasContratadas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciasMaximas'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'KVAsTrafo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PorcentajePerdidasPactadas'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'MarcaMedidaBTConPerdidas'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'KVAsTrafo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PorcentajePerdidasPactadas'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'MarcaMedidaBTConPerdidas'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PorcentajePerdidasPactadas'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'KVAsTrafo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CondicionesContractualesC._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PorcentajePerdidasPactadas'))),
    ])
})



CTD_ANON_24._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PrecioEnergia'), STD_ANON_14, scope=CTD_ANON_24))

CTD_ANON_24._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ValorEnergiaActiva'), STD_ANON_28, scope=CTD_ANON_24, documentation=u'En Kwh'))
CTD_ANON_24._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_24._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ValorEnergiaActiva'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_24._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PrecioEnergia'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



RegistroDoc._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionUrl'), X255, scope=RegistroDoc))

RegistroDoc._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoDocAportado'), TiposDocumentacion, scope=RegistroDoc))
RegistroDoc._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=RegistroDoc._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoDocAportado'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=RegistroDoc._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionUrl'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=RegistroDoc._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionUrl'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



CTD_ANON_25._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PrecioPotencia'), STD_ANON_3, scope=CTD_ANON_25))

CTD_ANON_25._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciaContratada'), STD_ANON_46, scope=CTD_ANON_25, documentation=u'En watios'))

CTD_ANON_25._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciaAFacturar'), STD_ANON_18, scope=CTD_ANON_25, documentation=u'Potencia a facturar calculada en funci\xf3n de la potencia contratada. En Watios'))

CTD_ANON_25._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciaMaxDemandada'), STD_ANON_10, scope=CTD_ANON_25, documentation=u' En watios'))
CTD_ANON_25._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_25._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaContratada'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_25._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaMaxDemandada'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_25._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaAFacturar'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_25._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PrecioPotencia'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Piso'), Piso, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Poblacion'), Decimal7, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'), TipoAclaradorFinca, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoVia'), TipoVia, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'), X40, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Calle'), X30, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Puerta'), Puerta, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NumeroFinca'), X5, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Pais'), X25, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DuplicadorFinca'), X3, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'), Decimal5, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Provincia'), Decimal2, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Escalera'), Escalera, scope=Direccion))

Direccion._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Municipio'), Decimal7, scope=Direccion))
Direccion._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Pais'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Puerta'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Provincia'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NumeroFinca'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Municipio'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Puerta'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Piso'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DuplicadorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Escalera'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Poblacion'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoVia'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodPostal'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Puerta'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Piso'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Escalera'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Calle'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Puerta'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoAclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'AclaradorFinca'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Direccion._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Piso'))),
    ])
})



CTD_ANON_26._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaBOE'), pyxb.binding.datatypes.date, scope=CTD_ANON_26))

CTD_ANON_26._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'LineaNegocio'), STD_ANON_41, scope=CTD_ANON_26, documentation=u'Tabla 5'))

CTD_ANON_26._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionSuministro'), TipoDireccionSuministro, scope=CTD_ANON_26))

CTD_ANON_26._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Cliente'), IdCliente, scope=CTD_ANON_26))

CTD_ANON_26._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Contrato'), CodigoContrato, scope=CTD_ANON_26))

CTD_ANON_26._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFactura'), TipoDatosGeneralesFactura, scope=CTD_ANON_26))
CTD_ANON_26._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_26._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionSuministro'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_26._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Cliente'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_26._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Contrato'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_26._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DatosGeneralesFactura'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_26._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'LineaNegocio'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_26._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaBOE'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
})



OtrosDatosFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionDestino'), STD_ANON_21, scope=OtrosDatosFactura))

OtrosDatosFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SociedadMercantilEmisora'), STD_ANON_54, scope=OtrosDatosFactura))

OtrosDatosFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'DireccionEmisora'), STD_ANON_24, scope=OtrosDatosFactura))

OtrosDatosFactura._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SociedadMercantilDestino'), STD_ANON_40, scope=OtrosDatosFactura))
OtrosDatosFactura._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=OtrosDatosFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SociedadMercantilEmisora'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=OtrosDatosFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SociedadMercantilDestino'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=OtrosDatosFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionEmisora'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=OtrosDatosFactura._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'DireccionDestino'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



Medida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'), IndicativoYCD, scope=Medida))

Medida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'), TiposEquipoMedida, scope=Medida))

Medida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'), ModelosAparato, scope=Medida))

Medida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'), IndicativoNCD, scope=Medida))

Medida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'), IndicativoYCD, scope=Medida))

Medida._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'), IndicativoNCD, scope=Medida))
Medida._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Medida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPAportadoInstalado'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Medida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ICPInstalacion'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Medida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoAportadoCliente'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Medida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'EquipoInstaladoCliente'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=Medida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoEquipoMedida'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=Medida._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ModelosAparato'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
    ])
})



DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'), TiposSuministro, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'), X45, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'), pyxb.binding.datatypes.date, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'), X9, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'), X2, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CieAportado'), Indicativo, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'), pyxb.binding.datatypes.date, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CieElectronico'), Indicativo, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'), X2, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoCie'), X11, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'), X5, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'), X2, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'), Potencia, scope=DatosCIE))

DatosCIE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'SelloElectronico'), X30, scope=DatosCIE))
DatosCIE._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CieAportado'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CieElectronico'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SelloElectronico'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SelloElectronico'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SelloElectronico'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NifInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoCie'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'NombreInstalador'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CieElectronico'))),
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstBT'))),
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'InstensidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TensionSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SensibilidadDif'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SelloElectronico'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'SeccionCable'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosCIE._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoSuministro'))),
    ])
})



CTD_ANON_27._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'), STD_ANON_26, scope=CTD_ANON_27))

CTD_ANON_27._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'TipoAnomalia'), AnomaliaMedida, scope=CTD_ANON_27, documentation=u'Tabla 45'))
CTD_ANON_27._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_27._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TipoAnomalia'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_27._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'TextoAnomalia'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})



Cliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Telefono'), TelefonoInternacional, scope=Cliente))

Cliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), IdCliente, scope=Cliente))

Cliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), NombreCliente, scope=Cliente))

Cliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Fax'), TelefonoInternacional, scope=Cliente))
Cliente._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Cliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Cliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Nombre'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Cliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Fax'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Cliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Telefono'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=Cliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Telefono'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
    ])
})



Comentario._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Hora'), pyxb.binding.datatypes.time, scope=Comentario))

Comentario._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Texto'), X120, scope=Comentario))

Comentario._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Fecha'), pyxb.binding.datatypes.date, scope=Comentario))
Comentario._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=Comentario._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Texto'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=Comentario._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Fecha'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=Comentario._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Hora'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
    ])
})



CTD_ANON_28._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'), CTD_ANON_23, scope=CTD_ANON_28))

CTD_ANON_28._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'), CTD_ANON_21, scope=CTD_ANON_28))

CTD_ANON_28._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'), CTD_ANON_3, scope=CTD_ANON_28))
CTD_ANON_28._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1184, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=144, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=287, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=429, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=289, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=431, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=170, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=30, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=31, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=294, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=153, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=154, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 13 : pyxb.binding.content.ContentModelState(state=13, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=438, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 14 : pyxb.binding.content.ContentModelState(state=14, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=298, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 15 : pyxb.binding.content.ContentModelState(state=15, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=299, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 16 : pyxb.binding.content.ContentModelState(state=16, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=158, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 17 : pyxb.binding.content.ContentModelState(state=17, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=301, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 18 : pyxb.binding.content.ContentModelState(state=18, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=182, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 19 : pyxb.binding.content.ContentModelState(state=19, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=41, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 20 : pyxb.binding.content.ContentModelState(state=20, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=445, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 21 : pyxb.binding.content.ContentModelState(state=21, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=305, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 22 : pyxb.binding.content.ContentModelState(state=22, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=447, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 23 : pyxb.binding.content.ContentModelState(state=23, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=165, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 24 : pyxb.binding.content.ContentModelState(state=24, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=308, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 25 : pyxb.binding.content.ContentModelState(state=25, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=309, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 26 : pyxb.binding.content.ContentModelState(state=26, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=168, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 27 : pyxb.binding.content.ContentModelState(state=27, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=190, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 28 : pyxb.binding.content.ContentModelState(state=28, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=49, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 29 : pyxb.binding.content.ContentModelState(state=29, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=50, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 30 : pyxb.binding.content.ContentModelState(state=30, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=313, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 31 : pyxb.binding.content.ContentModelState(state=31, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=173, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 32 : pyxb.binding.content.ContentModelState(state=32, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=315, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 33 : pyxb.binding.content.ContentModelState(state=33, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=316, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 34 : pyxb.binding.content.ContentModelState(state=34, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=317, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 35 : pyxb.binding.content.ContentModelState(state=35, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=459, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 36 : pyxb.binding.content.ContentModelState(state=36, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=178, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 37 : pyxb.binding.content.ContentModelState(state=37, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=320, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 38 : pyxb.binding.content.ContentModelState(state=38, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=180, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 39 : pyxb.binding.content.ContentModelState(state=39, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=60, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 40 : pyxb.binding.content.ContentModelState(state=40, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=323, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 41 : pyxb.binding.content.ContentModelState(state=41, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=324, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 42 : pyxb.binding.content.ContentModelState(state=42, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 43 : pyxb.binding.content.ContentModelState(state=43, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=206, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 44 : pyxb.binding.content.ContentModelState(state=44, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=186, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 45 : pyxb.binding.content.ContentModelState(state=45, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=187, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 46 : pyxb.binding.content.ContentModelState(state=46, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=329, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 47 : pyxb.binding.content.ContentModelState(state=47, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=189, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 48 : pyxb.binding.content.ContentModelState(state=48, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=211, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 49 : pyxb.binding.content.ContentModelState(state=49, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=332, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 50 : pyxb.binding.content.ContentModelState(state=50, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=333, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 51 : pyxb.binding.content.ContentModelState(state=51, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=334, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 52 : pyxb.binding.content.ContentModelState(state=52, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=194, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 53 : pyxb.binding.content.ContentModelState(state=53, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=216, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 54 : pyxb.binding.content.ContentModelState(state=54, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=337, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 55 : pyxb.binding.content.ContentModelState(state=55, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=197, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 56 : pyxb.binding.content.ContentModelState(state=56, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=219, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 57 : pyxb.binding.content.ContentModelState(state=57, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=340, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 58 : pyxb.binding.content.ContentModelState(state=58, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=221, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 59 : pyxb.binding.content.ContentModelState(state=59, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=342, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 60 : pyxb.binding.content.ContentModelState(state=60, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=484, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 61 : pyxb.binding.content.ContentModelState(state=61, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=485, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 62 : pyxb.binding.content.ContentModelState(state=62, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=204, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 63 : pyxb.binding.content.ContentModelState(state=63, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=205, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 64 : pyxb.binding.content.ContentModelState(state=64, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=85, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 65 : pyxb.binding.content.ContentModelState(state=65, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=86, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 66 : pyxb.binding.content.ContentModelState(state=66, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=349, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 67 : pyxb.binding.content.ContentModelState(state=67, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=230, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 68 : pyxb.binding.content.ContentModelState(state=68, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=210, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 69 : pyxb.binding.content.ContentModelState(state=69, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=493, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 70 : pyxb.binding.content.ContentModelState(state=70, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=494, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 71 : pyxb.binding.content.ContentModelState(state=71, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=354, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 72 : pyxb.binding.content.ContentModelState(state=72, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=235, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 73 : pyxb.binding.content.ContentModelState(state=73, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=356, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 74 : pyxb.binding.content.ContentModelState(state=74, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=237, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 75 : pyxb.binding.content.ContentModelState(state=75, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=217, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 76 : pyxb.binding.content.ContentModelState(state=76, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=218, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 77 : pyxb.binding.content.ContentModelState(state=77, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=240, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 78 : pyxb.binding.content.ContentModelState(state=78, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=220, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 79 : pyxb.binding.content.ContentModelState(state=79, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=503, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 80 : pyxb.binding.content.ContentModelState(state=80, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=222, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 81 : pyxb.binding.content.ContentModelState(state=81, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=364, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 82 : pyxb.binding.content.ContentModelState(state=82, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=365, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 83 : pyxb.binding.content.ContentModelState(state=83, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=225, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 84 : pyxb.binding.content.ContentModelState(state=84, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=226, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 85 : pyxb.binding.content.ContentModelState(state=85, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=509, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 86 : pyxb.binding.content.ContentModelState(state=86, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=369, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 87 : pyxb.binding.content.ContentModelState(state=87, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=370, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 88 : pyxb.binding.content.ContentModelState(state=88, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=371, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 89 : pyxb.binding.content.ContentModelState(state=89, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=372, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 90 : pyxb.binding.content.ContentModelState(state=90, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=514, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 91 : pyxb.binding.content.ContentModelState(state=91, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=254, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 92 : pyxb.binding.content.ContentModelState(state=92, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=234, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 93 : pyxb.binding.content.ContentModelState(state=93, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=114, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 94 : pyxb.binding.content.ContentModelState(state=94, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=115, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 95 : pyxb.binding.content.ContentModelState(state=95, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=519, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 96 : pyxb.binding.content.ContentModelState(state=96, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=238, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 97 : pyxb.binding.content.ContentModelState(state=97, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=380, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 98 : pyxb.binding.content.ContentModelState(state=98, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=522, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 99 : pyxb.binding.content.ContentModelState(state=99, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=382, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 100 : pyxb.binding.content.ContentModelState(state=100, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=524, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 101 : pyxb.binding.content.ContentModelState(state=101, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=243, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 102 : pyxb.binding.content.ContentModelState(state=102, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=385, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 103 : pyxb.binding.content.ContentModelState(state=103, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=124, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 104 : pyxb.binding.content.ContentModelState(state=104, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=246, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 105 : pyxb.binding.content.ContentModelState(state=105, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=529, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 106 : pyxb.binding.content.ContentModelState(state=106, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=389, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 107 : pyxb.binding.content.ContentModelState(state=107, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=249, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 108 : pyxb.binding.content.ContentModelState(state=108, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=250, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 109 : pyxb.binding.content.ContentModelState(state=109, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=392, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 110 : pyxb.binding.content.ContentModelState(state=110, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=131, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 111 : pyxb.binding.content.ContentModelState(state=111, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=274, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 112 : pyxb.binding.content.ContentModelState(state=112, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=133, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 113 : pyxb.binding.content.ContentModelState(state=113, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=255, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 114 : pyxb.binding.content.ContentModelState(state=114, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=538, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 115 : pyxb.binding.content.ContentModelState(state=115, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=398, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 116 : pyxb.binding.content.ContentModelState(state=116, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=540, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 117 : pyxb.binding.content.ContentModelState(state=117, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=259, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 118 : pyxb.binding.content.ContentModelState(state=118, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=401, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 119 : pyxb.binding.content.ContentModelState(state=119, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=402, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 120 : pyxb.binding.content.ContentModelState(state=120, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=262, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 121 : pyxb.binding.content.ContentModelState(state=121, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=404, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 122 : pyxb.binding.content.ContentModelState(state=122, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=264, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 123 : pyxb.binding.content.ContentModelState(state=123, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=286, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 124 : pyxb.binding.content.ContentModelState(state=124, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=548, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 125 : pyxb.binding.content.ContentModelState(state=125, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=267, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 126 : pyxb.binding.content.ContentModelState(state=126, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=409, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 127 : pyxb.binding.content.ContentModelState(state=127, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=410, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 128 : pyxb.binding.content.ContentModelState(state=128, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=270, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 129 : pyxb.binding.content.ContentModelState(state=129, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=338, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 130 : pyxb.binding.content.ContentModelState(state=130, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=293, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 131 : pyxb.binding.content.ContentModelState(state=131, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=414, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 132 : pyxb.binding.content.ContentModelState(state=132, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=295, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 133 : pyxb.binding.content.ContentModelState(state=133, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=416, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 134 : pyxb.binding.content.ContentModelState(state=134, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=417, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 135 : pyxb.binding.content.ContentModelState(state=135, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=559, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 136 : pyxb.binding.content.ContentModelState(state=136, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=278, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 137 : pyxb.binding.content.ContentModelState(state=137, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=420, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 138 : pyxb.binding.content.ContentModelState(state=138, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=280, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 139 : pyxb.binding.content.ContentModelState(state=139, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=160, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 140 : pyxb.binding.content.ContentModelState(state=140, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=423, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 141 : pyxb.binding.content.ContentModelState(state=141, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=283, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 142 : pyxb.binding.content.ContentModelState(state=142, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=163, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 143 : pyxb.binding.content.ContentModelState(state=143, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=426, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 144 : pyxb.binding.content.ContentModelState(state=144, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=427, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 145 : pyxb.binding.content.ContentModelState(state=145, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=569, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 146 : pyxb.binding.content.ContentModelState(state=146, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=288, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 147 : pyxb.binding.content.ContentModelState(state=147, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=430, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 148 : pyxb.binding.content.ContentModelState(state=148, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=290, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 149 : pyxb.binding.content.ContentModelState(state=149, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=291, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 150 : pyxb.binding.content.ContentModelState(state=150, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=433, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 151 : pyxb.binding.content.ContentModelState(state=151, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=314, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 152 : pyxb.binding.content.ContentModelState(state=152, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=435, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 153 : pyxb.binding.content.ContentModelState(state=153, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=436, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 154 : pyxb.binding.content.ContentModelState(state=154, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=578, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 155 : pyxb.binding.content.ContentModelState(state=155, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=297, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 156 : pyxb.binding.content.ContentModelState(state=156, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=439, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 157 : pyxb.binding.content.ContentModelState(state=157, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=440, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 158 : pyxb.binding.content.ContentModelState(state=158, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=321, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 159 : pyxb.binding.content.ContentModelState(state=159, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=181, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 160 : pyxb.binding.content.ContentModelState(state=160, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=443, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 161 : pyxb.binding.content.ContentModelState(state=161, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=183, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 162 : pyxb.binding.content.ContentModelState(state=162, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=304, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 163 : pyxb.binding.content.ContentModelState(state=163, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=446, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 164 : pyxb.binding.content.ContentModelState(state=164, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=306, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 165 : pyxb.binding.content.ContentModelState(state=165, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=448, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 166 : pyxb.binding.content.ContentModelState(state=166, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=328, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 167 : pyxb.binding.content.ContentModelState(state=167, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=450, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 168 : pyxb.binding.content.ContentModelState(state=168, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=330, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 169 : pyxb.binding.content.ContentModelState(state=169, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=311, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 170 : pyxb.binding.content.ContentModelState(state=170, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=312, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 171 : pyxb.binding.content.ContentModelState(state=171, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=192, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 172 : pyxb.binding.content.ContentModelState(state=172, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=454, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 173 : pyxb.binding.content.ContentModelState(state=173, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=596, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 174 : pyxb.binding.content.ContentModelState(state=174, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=456, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 175 : pyxb.binding.content.ContentModelState(state=175, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=598, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 176 : pyxb.binding.content.ContentModelState(state=176, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1776, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 177 : pyxb.binding.content.ContentModelState(state=177, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=318, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 178 : pyxb.binding.content.ContentModelState(state=178, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=386, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 179 : pyxb.binding.content.ContentModelState(state=179, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=200, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 180 : pyxb.binding.content.ContentModelState(state=180, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=462, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 181 : pyxb.binding.content.ContentModelState(state=181, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=322, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 182 : pyxb.binding.content.ContentModelState(state=182, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=464, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 183 : pyxb.binding.content.ContentModelState(state=183, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=465, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 184 : pyxb.binding.content.ContentModelState(state=184, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=607, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 185 : pyxb.binding.content.ContentModelState(state=185, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=326, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 186 : pyxb.binding.content.ContentModelState(state=186, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=348, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 187 : pyxb.binding.content.ContentModelState(state=187, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=208, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 188 : pyxb.binding.content.ContentModelState(state=188, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=209, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 189 : pyxb.binding.content.ContentModelState(state=189, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=612, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 190 : pyxb.binding.content.ContentModelState(state=190, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=331, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 191 : pyxb.binding.content.ContentModelState(state=191, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=473, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 192 : pyxb.binding.content.ContentModelState(state=192, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=474, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 193 : pyxb.binding.content.ContentModelState(state=193, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=475, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 194 : pyxb.binding.content.ContentModelState(state=194, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=617, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 195 : pyxb.binding.content.ContentModelState(state=195, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=336, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 196 : pyxb.binding.content.ContentModelState(state=196, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=478, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 197 : pyxb.binding.content.ContentModelState(state=197, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=359, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 198 : pyxb.binding.content.ContentModelState(state=198, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=339, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 199 : pyxb.binding.content.ContentModelState(state=199, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=622, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 200 : pyxb.binding.content.ContentModelState(state=200, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=341, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 201 : pyxb.binding.content.ContentModelState(state=201, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=483, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 202 : pyxb.binding.content.ContentModelState(state=202, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=343, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 203 : pyxb.binding.content.ContentModelState(state=203, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=344, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 204 : pyxb.binding.content.ContentModelState(state=204, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=486, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 205 : pyxb.binding.content.ContentModelState(state=205, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=367, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 206 : pyxb.binding.content.ContentModelState(state=206, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=488, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 207 : pyxb.binding.content.ContentModelState(state=207, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=228, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 208 : pyxb.binding.content.ContentModelState(state=208, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=490, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 209 : pyxb.binding.content.ContentModelState(state=209, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=491, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 210 : pyxb.binding.content.ContentModelState(state=210, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=633, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 211 : pyxb.binding.content.ContentModelState(state=211, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=352, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 212 : pyxb.binding.content.ContentModelState(state=212, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=353, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 213 : pyxb.binding.content.ContentModelState(state=213, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=495, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 214 : pyxb.binding.content.ContentModelState(state=214, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=355, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 215 : pyxb.binding.content.ContentModelState(state=215, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=377, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 216 : pyxb.binding.content.ContentModelState(state=216, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=498, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 217 : pyxb.binding.content.ContentModelState(state=217, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=379, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 218 : pyxb.binding.content.ContentModelState(state=218, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=500, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 219 : pyxb.binding.content.ContentModelState(state=219, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=360, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 220 : pyxb.binding.content.ContentModelState(state=220, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=502, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 221 : pyxb.binding.content.ContentModelState(state=221, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=362, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 222 : pyxb.binding.content.ContentModelState(state=222, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=384, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 223 : pyxb.binding.content.ContentModelState(state=223, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=505, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 224 : pyxb.binding.content.ContentModelState(state=224, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=432, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 225 : pyxb.binding.content.ContentModelState(state=225, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=387, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 226 : pyxb.binding.content.ContentModelState(state=226, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=248, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 227 : pyxb.binding.content.ContentModelState(state=227, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=368, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 228 : pyxb.binding.content.ContentModelState(state=228, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=510, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 229 : pyxb.binding.content.ContentModelState(state=229, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=511, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 230 : pyxb.binding.content.ContentModelState(state=230, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=512, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 231 : pyxb.binding.content.ContentModelState(state=231, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=393, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 232 : pyxb.binding.content.ContentModelState(state=232, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=373, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 233 : pyxb.binding.content.ContentModelState(state=233, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=374, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 234 : pyxb.binding.content.ContentModelState(state=234, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=396, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 235 : pyxb.binding.content.ContentModelState(state=235, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=376, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 236 : pyxb.binding.content.ContentModelState(state=236, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=257, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 237 : pyxb.binding.content.ContentModelState(state=237, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=378, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 238 : pyxb.binding.content.ContentModelState(state=238, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=520, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 239 : pyxb.binding.content.ContentModelState(state=239, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=662, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 240 : pyxb.binding.content.ContentModelState(state=240, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=381, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 241 : pyxb.binding.content.ContentModelState(state=241, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=523, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 242 : pyxb.binding.content.ContentModelState(state=242, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=383, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 243 : pyxb.binding.content.ContentModelState(state=243, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=405, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 244 : pyxb.binding.content.ContentModelState(state=244, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=265, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 245 : pyxb.binding.content.ContentModelState(state=245, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=527, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 246 : pyxb.binding.content.ContentModelState(state=246, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=408, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 247 : pyxb.binding.content.ContentModelState(state=247, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=388, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 248 : pyxb.binding.content.ContentModelState(state=248, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=530, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 249 : pyxb.binding.content.ContentModelState(state=249, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=531, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 250 : pyxb.binding.content.ContentModelState(state=250, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=412, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 251 : pyxb.binding.content.ContentModelState(state=251, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=533, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 252 : pyxb.binding.content.ContentModelState(state=252, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=273, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 253 : pyxb.binding.content.ContentModelState(state=253, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=394, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 254 : pyxb.binding.content.ContentModelState(state=254, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=395, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 255 : pyxb.binding.content.ContentModelState(state=255, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=276, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 256 : pyxb.binding.content.ContentModelState(state=256, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=397, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 257 : pyxb.binding.content.ContentModelState(state=257, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=539, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 258 : pyxb.binding.content.ContentModelState(state=258, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=399, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 259 : pyxb.binding.content.ContentModelState(state=259, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=541, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 260 : pyxb.binding.content.ContentModelState(state=260, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=422, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 261 : pyxb.binding.content.ContentModelState(state=261, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=543, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 262 : pyxb.binding.content.ContentModelState(state=262, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=424, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 263 : pyxb.binding.content.ContentModelState(state=263, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=284, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 264 : pyxb.binding.content.ContentModelState(state=264, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=687, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 265 : pyxb.binding.content.ContentModelState(state=265, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=406, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 266 : pyxb.binding.content.ContentModelState(state=266, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=407, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 267 : pyxb.binding.content.ContentModelState(state=267, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=549, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 268 : pyxb.binding.content.ContentModelState(state=268, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=550, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 269 : pyxb.binding.content.ContentModelState(state=269, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=692, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 270 : pyxb.binding.content.ContentModelState(state=270, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=552, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 271 : pyxb.binding.content.ContentModelState(state=271, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=479, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 272 : pyxb.binding.content.ContentModelState(state=272, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=413, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 273 : pyxb.binding.content.ContentModelState(state=273, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=555, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 274 : pyxb.binding.content.ContentModelState(state=274, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=415, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 275 : pyxb.binding.content.ContentModelState(state=275, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=557, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 276 : pyxb.binding.content.ContentModelState(state=276, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=558, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 277 : pyxb.binding.content.ContentModelState(state=277, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=418, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 278 : pyxb.binding.content.ContentModelState(state=278, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=701, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 279 : pyxb.binding.content.ContentModelState(state=279, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=300, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 280 : pyxb.binding.content.ContentModelState(state=280, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=442, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 281 : pyxb.binding.content.ContentModelState(state=281, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=302, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 282 : pyxb.binding.content.ContentModelState(state=282, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=303, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 283 : pyxb.binding.content.ContentModelState(state=283, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=565, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 284 : pyxb.binding.content.ContentModelState(state=284, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=566, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 285 : pyxb.binding.content.ContentModelState(state=285, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=708, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 286 : pyxb.binding.content.ContentModelState(state=286, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=568, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 287 : pyxb.binding.content.ContentModelState(state=287, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=428, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 288 : pyxb.binding.content.ContentModelState(state=288, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=711, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 289 : pyxb.binding.content.ContentModelState(state=289, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=310, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 290 : pyxb.binding.content.ContentModelState(state=290, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=572, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 291 : pyxb.binding.content.ContentModelState(state=291, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=453, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 292 : pyxb.binding.content.ContentModelState(state=292, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=715, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 293 : pyxb.binding.content.ContentModelState(state=293, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=434, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 294 : pyxb.binding.content.ContentModelState(state=294, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=576, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 295 : pyxb.binding.content.ContentModelState(state=295, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=577, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 296 : pyxb.binding.content.ContentModelState(state=296, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=437, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 297 : pyxb.binding.content.ContentModelState(state=297, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=720, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 298 : pyxb.binding.content.ContentModelState(state=298, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=319, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 299 : pyxb.binding.content.ContentModelState(state=299, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=581, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 300 : pyxb.binding.content.ContentModelState(state=300, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=441, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 301 : pyxb.binding.content.ContentModelState(state=301, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=463, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 302 : pyxb.binding.content.ContentModelState(state=302, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=584, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 303 : pyxb.binding.content.ContentModelState(state=303, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=444, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 304 : pyxb.binding.content.ContentModelState(state=304, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=727, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 305 : pyxb.binding.content.ContentModelState(state=305, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=587, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 306 : pyxb.binding.content.ContentModelState(state=306, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=467, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 307 : pyxb.binding.content.ContentModelState(state=307, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=589, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 308 : pyxb.binding.content.ContentModelState(state=308, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=449, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 309 : pyxb.binding.content.ContentModelState(state=309, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=470, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 310 : pyxb.binding.content.ContentModelState(state=310, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=451, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 311 : pyxb.binding.content.ContentModelState(state=311, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=472, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 312 : pyxb.binding.content.ContentModelState(state=312, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=735, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 313 : pyxb.binding.content.ContentModelState(state=313, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=595, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 314 : pyxb.binding.content.ContentModelState(state=314, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=455, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 315 : pyxb.binding.content.ContentModelState(state=315, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=597, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 316 : pyxb.binding.content.ContentModelState(state=316, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=457, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 317 : pyxb.binding.content.ContentModelState(state=317, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=458, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 318 : pyxb.binding.content.ContentModelState(state=318, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=600, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 319 : pyxb.binding.content.ContentModelState(state=319, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=460, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 320 : pyxb.binding.content.ContentModelState(state=320, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=482, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 321 : pyxb.binding.content.ContentModelState(state=321, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=603, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 322 : pyxb.binding.content.ContentModelState(state=322, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=745, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 323 : pyxb.binding.content.ContentModelState(state=323, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=746, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 324 : pyxb.binding.content.ContentModelState(state=324, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=606, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 325 : pyxb.binding.content.ContentModelState(state=325, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 326 : pyxb.binding.content.ContentModelState(state=326, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=347, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 327 : pyxb.binding.content.ContentModelState(state=327, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=468, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 328 : pyxb.binding.content.ContentModelState(state=328, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=610, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 329 : pyxb.binding.content.ContentModelState(state=329, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=350, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 330 : pyxb.binding.content.ContentModelState(state=330, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=471, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 331 : pyxb.binding.content.ContentModelState(state=331, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=755, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 332 : pyxb.binding.content.ContentModelState(state=332, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=756, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 333 : pyxb.binding.content.ContentModelState(state=333, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=615, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 334 : pyxb.binding.content.ContentModelState(state=334, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=496, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 335 : pyxb.binding.content.ContentModelState(state=335, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=476, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 336 : pyxb.binding.content.ContentModelState(state=336, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=357, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 337 : pyxb.binding.content.ContentModelState(state=337, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=358, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 338 : pyxb.binding.content.ContentModelState(state=338, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=620, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 339 : pyxb.binding.content.ContentModelState(state=339, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=501, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 340 : pyxb.binding.content.ContentModelState(state=340, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=481, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 341 : pyxb.binding.content.ContentModelState(state=341, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=765, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 342 : pyxb.binding.content.ContentModelState(state=342, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=624, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 343 : pyxb.binding.content.ContentModelState(state=343, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=625, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 344 : pyxb.binding.content.ContentModelState(state=344, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=506, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 345 : pyxb.binding.content.ContentModelState(state=345, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=627, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 346 : pyxb.binding.content.ContentModelState(state=346, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=487, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 347 : pyxb.binding.content.ContentModelState(state=347, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=629, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 348 : pyxb.binding.content.ContentModelState(state=348, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=489, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 349 : pyxb.binding.content.ContentModelState(state=349, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=631, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 350 : pyxb.binding.content.ContentModelState(state=350, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=774, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 351 : pyxb.binding.content.ContentModelState(state=351, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=492, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 352 : pyxb.binding.content.ContentModelState(state=352, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=776, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 353 : pyxb.binding.content.ContentModelState(state=353, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=515, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 354 : pyxb.binding.content.ContentModelState(state=354, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=636, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 355 : pyxb.binding.content.ContentModelState(state=355, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=517, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 356 : pyxb.binding.content.ContentModelState(state=356, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=497, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 357 : pyxb.binding.content.ContentModelState(state=357, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=781, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 358 : pyxb.binding.content.ContentModelState(state=358, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=640, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 359 : pyxb.binding.content.ContentModelState(state=359, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=641, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 360 : pyxb.binding.content.ContentModelState(state=360, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=784, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 361 : pyxb.binding.content.ContentModelState(state=361, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=643, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 362 : pyxb.binding.content.ContentModelState(state=362, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=786, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 363 : pyxb.binding.content.ContentModelState(state=363, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=504, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 364 : pyxb.binding.content.ContentModelState(state=364, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=713, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 365 : pyxb.binding.content.ContentModelState(state=365, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=714, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 366 : pyxb.binding.content.ContentModelState(state=366, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=507, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 367 : pyxb.binding.content.ContentModelState(state=367, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=508, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 368 : pyxb.binding.content.ContentModelState(state=368, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=792, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 369 : pyxb.binding.content.ContentModelState(state=369, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=651, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 370 : pyxb.binding.content.ContentModelState(state=370, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=652, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 371 : pyxb.binding.content.ContentModelState(state=371, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=653, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 372 : pyxb.binding.content.ContentModelState(state=372, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=513, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 373 : pyxb.binding.content.ContentModelState(state=373, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=655, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 374 : pyxb.binding.content.ContentModelState(state=374, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=536, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 375 : pyxb.binding.content.ContentModelState(state=375, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=516, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 376 : pyxb.binding.content.ContentModelState(state=376, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=800, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 377 : pyxb.binding.content.ContentModelState(state=377, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=659, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 378 : pyxb.binding.content.ContentModelState(state=378, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=660, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 379 : pyxb.binding.content.ContentModelState(state=379, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=661, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 380 : pyxb.binding.content.ContentModelState(state=380, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=521, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 381 : pyxb.binding.content.ContentModelState(state=381, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=663, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 382 : pyxb.binding.content.ContentModelState(state=382, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=403, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 383 : pyxb.binding.content.ContentModelState(state=383, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=665, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 384 : pyxb.binding.content.ContentModelState(state=384, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=666, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 385 : pyxb.binding.content.ContentModelState(state=385, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=547, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 386 : pyxb.binding.content.ContentModelState(state=386, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=668, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 387 : pyxb.binding.content.ContentModelState(state=387, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=669, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 388 : pyxb.binding.content.ContentModelState(state=388, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=812, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 389 : pyxb.binding.content.ContentModelState(state=389, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=671, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 390 : pyxb.binding.content.ContentModelState(state=390, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=672, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 391 : pyxb.binding.content.ContentModelState(state=391, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=532, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 392 : pyxb.binding.content.ContentModelState(state=392, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=674, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 393 : pyxb.binding.content.ContentModelState(state=393, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=534, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 394 : pyxb.binding.content.ContentModelState(state=394, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=556, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 395 : pyxb.binding.content.ContentModelState(state=395, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=677, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 396 : pyxb.binding.content.ContentModelState(state=396, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=537, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 397 : pyxb.binding.content.ContentModelState(state=397, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=822, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 398 : pyxb.binding.content.ContentModelState(state=398, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=680, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 399 : pyxb.binding.content.ContentModelState(state=399, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=561, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 400 : pyxb.binding.content.ContentModelState(state=400, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=682, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 401 : pyxb.binding.content.ContentModelState(state=401, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=542, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 402 : pyxb.binding.content.ContentModelState(state=402, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=684, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 403 : pyxb.binding.content.ContentModelState(state=403, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=685, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 404 : pyxb.binding.content.ContentModelState(state=404, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=425, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 405 : pyxb.binding.content.ContentModelState(state=405, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=546, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 406 : pyxb.binding.content.ContentModelState(state=406, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=688, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 407 : pyxb.binding.content.ContentModelState(state=407, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=689, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 408 : pyxb.binding.content.ContentModelState(state=408, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=690, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 409 : pyxb.binding.content.ContentModelState(state=409, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=571, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 410 : pyxb.binding.content.ContentModelState(state=410, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=551, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 411 : pyxb.binding.content.ContentModelState(state=411, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=619, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 412 : pyxb.binding.content.ContentModelState(state=412, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=553, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 413 : pyxb.binding.content.ContentModelState(state=413, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=575, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 414 : pyxb.binding.content.ContentModelState(state=414, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=696, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 415 : pyxb.binding.content.ContentModelState(state=415, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=840, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 416 : pyxb.binding.content.ContentModelState(state=416, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=841, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 417 : pyxb.binding.content.ContentModelState(state=417, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=699, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 418 : pyxb.binding.content.ContentModelState(state=418, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=580, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 419 : pyxb.binding.content.ContentModelState(state=419, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=560, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 420 : pyxb.binding.content.ContentModelState(state=420, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=582, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 421 : pyxb.binding.content.ContentModelState(state=421, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=562, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 422 : pyxb.binding.content.ContentModelState(state=422, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=704, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 423 : pyxb.binding.content.ContentModelState(state=423, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=585, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 424 : pyxb.binding.content.ContentModelState(state=424, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=706, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 425 : pyxb.binding.content.ContentModelState(state=425, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=850, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 426 : pyxb.binding.content.ContentModelState(state=426, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=567, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 427 : pyxb.binding.content.ContentModelState(state=427, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=709, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 428 : pyxb.binding.content.ContentModelState(state=428, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=590, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 429 : pyxb.binding.content.ContentModelState(state=429, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=570, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 430 : pyxb.binding.content.ContentModelState(state=430, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=592, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 431 : pyxb.binding.content.ContentModelState(state=431, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=452, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 432 : pyxb.binding.content.ContentModelState(state=432, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=573, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 433 : pyxb.binding.content.ContentModelState(state=433, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=574, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 434 : pyxb.binding.content.ContentModelState(state=434, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=716, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 435 : pyxb.binding.content.ContentModelState(state=435, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=717, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 436 : pyxb.binding.content.ContentModelState(state=436, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=861, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 437 : pyxb.binding.content.ContentModelState(state=437, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=599, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 438 : pyxb.binding.content.ContentModelState(state=438, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=579, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 439 : pyxb.binding.content.ContentModelState(state=439, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=601, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 440 : pyxb.binding.content.ContentModelState(state=440, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=461, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 441 : pyxb.binding.content.ContentModelState(state=441, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=866, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 442 : pyxb.binding.content.ContentModelState(state=442, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=724, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 443 : pyxb.binding.content.ContentModelState(state=443, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=725, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 444 : pyxb.binding.content.ContentModelState(state=444, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=726, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 445 : pyxb.binding.content.ContentModelState(state=445, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=586, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 446 : pyxb.binding.content.ContentModelState(state=446, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=728, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 447 : pyxb.binding.content.ContentModelState(state=447, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=588, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 448 : pyxb.binding.content.ContentModelState(state=448, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=609, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 449 : pyxb.binding.content.ContentModelState(state=449, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=469, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 450 : pyxb.binding.content.ContentModelState(state=450, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=591, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 451 : pyxb.binding.content.ContentModelState(state=451, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=733, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 452 : pyxb.binding.content.ContentModelState(state=452, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=734, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 453 : pyxb.binding.content.ContentModelState(state=453, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=594, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 454 : pyxb.binding.content.ContentModelState(state=454, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=736, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 455 : pyxb.binding.content.ContentModelState(state=455, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=737, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 456 : pyxb.binding.content.ContentModelState(state=456, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=477, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 457 : pyxb.binding.content.ContentModelState(state=457, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=807, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 458 : pyxb.binding.content.ContentModelState(state=458, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=59, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 459 : pyxb.binding.content.ContentModelState(state=459, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=480, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 460 : pyxb.binding.content.ContentModelState(state=460, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=742, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 461 : pyxb.binding.content.ContentModelState(state=461, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=743, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 462 : pyxb.binding.content.ContentModelState(state=462, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=744, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 463 : pyxb.binding.content.ContentModelState(state=463, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=604, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 464 : pyxb.binding.content.ContentModelState(state=464, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=605, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 465 : pyxb.binding.content.ContentModelState(state=465, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=747, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 466 : pyxb.binding.content.ContentModelState(state=466, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=628, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 467 : pyxb.binding.content.ContentModelState(state=467, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=608, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 468 : pyxb.binding.content.ContentModelState(state=468, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=630, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 469 : pyxb.binding.content.ContentModelState(state=469, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=895, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 470 : pyxb.binding.content.ContentModelState(state=470, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=611, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 471 : pyxb.binding.content.ContentModelState(state=471, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=897, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 472 : pyxb.binding.content.ContentModelState(state=472, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=613, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 473 : pyxb.binding.content.ContentModelState(state=473, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=614, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 474 : pyxb.binding.content.ContentModelState(state=474, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=900, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 475 : pyxb.binding.content.ContentModelState(state=475, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=616, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 476 : pyxb.binding.content.ContentModelState(state=476, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=759, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 477 : pyxb.binding.content.ContentModelState(state=477, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=618, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 478 : pyxb.binding.content.ContentModelState(state=478, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=499, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 479 : pyxb.binding.content.ContentModelState(state=479, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=904, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 480 : pyxb.binding.content.ContentModelState(state=480, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=763, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 481 : pyxb.binding.content.ContentModelState(state=481, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=764, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 482 : pyxb.binding.content.ContentModelState(state=482, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=623, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 483 : pyxb.binding.content.ContentModelState(state=483, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=766, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 484 : pyxb.binding.content.ContentModelState(state=484, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=767, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 485 : pyxb.binding.content.ContentModelState(state=485, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=626, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 486 : pyxb.binding.content.ContentModelState(state=486, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=769, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 487 : pyxb.binding.content.ContentModelState(state=487, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=649, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 488 : pyxb.binding.content.ContentModelState(state=488, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=771, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 489 : pyxb.binding.content.ContentModelState(state=489, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=914, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 490 : pyxb.binding.content.ContentModelState(state=490, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=773, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 491 : pyxb.binding.content.ContentModelState(state=491, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=632, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 492 : pyxb.binding.content.ContentModelState(state=492, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=654, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 493 : pyxb.binding.content.ContentModelState(state=493, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=634, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 494 : pyxb.binding.content.ContentModelState(state=494, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=635, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 495 : pyxb.binding.content.ContentModelState(state=495, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=778, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 496 : pyxb.binding.content.ContentModelState(state=496, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=637, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 497 : pyxb.binding.content.ContentModelState(state=497, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=518, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 498 : pyxb.binding.content.ContentModelState(state=498, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=639, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 499 : pyxb.binding.content.ContentModelState(state=499, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=782, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 500 : pyxb.binding.content.ContentModelState(state=500, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=783, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 501 : pyxb.binding.content.ContentModelState(state=501, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=642, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 502 : pyxb.binding.content.ContentModelState(state=502, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=785, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 503 : pyxb.binding.content.ContentModelState(state=503, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=644, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 504 : pyxb.binding.content.ContentModelState(state=504, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=525, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 505 : pyxb.binding.content.ContentModelState(state=505, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=646, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 506 : pyxb.binding.content.ContentModelState(state=506, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=647, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 507 : pyxb.binding.content.ContentModelState(state=507, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=528, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 508 : pyxb.binding.content.ContentModelState(state=508, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=791, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 509 : pyxb.binding.content.ContentModelState(state=509, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=650, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 510 : pyxb.binding.content.ContentModelState(state=510, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=935, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 511 : pyxb.binding.content.ContentModelState(state=511, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=673, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 512 : pyxb.binding.content.ContentModelState(state=512, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=795, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 513 : pyxb.binding.content.ContentModelState(state=513, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=675, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 514 : pyxb.binding.content.ContentModelState(state=514, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=535, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 515 : pyxb.binding.content.ContentModelState(state=515, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=798, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 516 : pyxb.binding.content.ContentModelState(state=516, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=678, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 517 : pyxb.binding.content.ContentModelState(state=517, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=658, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 518 : pyxb.binding.content.ContentModelState(state=518, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=801, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 519 : pyxb.binding.content.ContentModelState(state=519, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=802, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 520 : pyxb.binding.content.ContentModelState(state=520, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=945, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 521 : pyxb.binding.content.ContentModelState(state=521, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=804, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 522 : pyxb.binding.content.ContentModelState(state=522, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=805, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 523 : pyxb.binding.content.ContentModelState(state=523, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=544, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 524 : pyxb.binding.content.ContentModelState(state=524, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=545, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 525 : pyxb.binding.content.ContentModelState(state=525, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=950, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 526 : pyxb.binding.content.ContentModelState(state=526, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=809, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 527 : pyxb.binding.content.ContentModelState(state=527, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=810, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 528 : pyxb.binding.content.ContentModelState(state=528, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=953, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 529 : pyxb.binding.content.ContentModelState(state=529, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=670, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 530 : pyxb.binding.content.ContentModelState(state=530, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=955, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 531 : pyxb.binding.content.ContentModelState(state=531, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=693, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 532 : pyxb.binding.content.ContentModelState(state=532, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=694, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 533 : pyxb.binding.content.ContentModelState(state=533, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=554, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 534 : pyxb.binding.content.ContentModelState(state=534, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=960, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 535 : pyxb.binding.content.ContentModelState(state=535, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=819, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 536 : pyxb.binding.content.ContentModelState(state=536, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=820, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 537 : pyxb.binding.content.ContentModelState(state=537, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=821, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 538 : pyxb.binding.content.ContentModelState(state=538, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=679, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 539 : pyxb.binding.content.ContentModelState(state=539, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=965, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 540 : pyxb.binding.content.ContentModelState(state=540, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=681, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 541 : pyxb.binding.content.ContentModelState(state=541, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=703, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 542 : pyxb.binding.content.ContentModelState(state=542, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=563, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 543 : pyxb.binding.content.ContentModelState(state=543, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=564, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 544 : pyxb.binding.content.ContentModelState(state=544, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=828, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 545 : pyxb.binding.content.ContentModelState(state=545, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=686, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 546 : pyxb.binding.content.ContentModelState(state=546, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=972, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 547 : pyxb.binding.content.ContentModelState(state=547, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=831, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 548 : pyxb.binding.content.ContentModelState(state=548, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=832, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 549 : pyxb.binding.content.ContentModelState(state=549, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=833, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 550 : pyxb.binding.content.ContentModelState(state=550, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=691, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 551 : pyxb.binding.content.ContentModelState(state=551, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=835, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 552 : pyxb.binding.content.ContentModelState(state=552, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=761, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 553 : pyxb.binding.content.ContentModelState(state=553, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=837, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 554 : pyxb.binding.content.ContentModelState(state=554, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=838, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 555 : pyxb.binding.content.ContentModelState(state=555, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=839, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 556 : pyxb.binding.content.ContentModelState(state=556, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=697, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 557 : pyxb.binding.content.ContentModelState(state=557, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=698, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 558 : pyxb.binding.content.ContentModelState(state=558, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=842, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 559 : pyxb.binding.content.ContentModelState(state=559, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=700, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 560 : pyxb.binding.content.ContentModelState(state=560, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=722, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 561 : pyxb.binding.content.ContentModelState(state=561, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=702, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 562 : pyxb.binding.content.ContentModelState(state=562, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=583, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 563 : pyxb.binding.content.ContentModelState(state=563, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=847, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 564 : pyxb.binding.content.ContentModelState(state=564, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=705, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 565 : pyxb.binding.content.ContentModelState(state=565, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=991, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 566 : pyxb.binding.content.ContentModelState(state=566, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=707, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 567 : pyxb.binding.content.ContentModelState(state=567, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=729, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 568 : pyxb.binding.content.ContentModelState(state=568, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=852, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 569 : pyxb.binding.content.ContentModelState(state=569, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=710, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 570 : pyxb.binding.content.ContentModelState(state=570, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=854, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 571 : pyxb.binding.content.ContentModelState(state=571, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=855, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 572 : pyxb.binding.content.ContentModelState(state=572, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=593, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 573 : pyxb.binding.content.ContentModelState(state=573, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=857, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 574 : pyxb.binding.content.ContentModelState(state=574, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=858, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 575 : pyxb.binding.content.ContentModelState(state=575, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=859, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 576 : pyxb.binding.content.ContentModelState(state=576, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=738, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 577 : pyxb.binding.content.ContentModelState(state=577, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=718, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 578 : pyxb.binding.content.ContentModelState(state=578, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=719, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 579 : pyxb.binding.content.ContentModelState(state=579, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=741, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 580 : pyxb.binding.content.ContentModelState(state=580, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=721, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 581 : pyxb.binding.content.ContentModelState(state=581, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=602, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 582 : pyxb.binding.content.ContentModelState(state=582, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=723, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 583 : pyxb.binding.content.ContentModelState(state=583, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=867, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 584 : pyxb.binding.content.ContentModelState(state=584, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1010, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 585 : pyxb.binding.content.ContentModelState(state=585, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=869, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 586 : pyxb.binding.content.ContentModelState(state=586, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=748, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 587 : pyxb.binding.content.ContentModelState(state=587, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=871, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 588 : pyxb.binding.content.ContentModelState(state=588, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=750, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 589 : pyxb.binding.content.ContentModelState(state=589, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=730, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 590 : pyxb.binding.content.ContentModelState(state=590, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=874, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 591 : pyxb.binding.content.ContentModelState(state=591, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=753, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 592 : pyxb.binding.content.ContentModelState(state=592, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=876, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 593 : pyxb.binding.content.ContentModelState(state=593, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=877, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 594 : pyxb.binding.content.ContentModelState(state=594, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1020, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 595 : pyxb.binding.content.ContentModelState(state=595, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=758, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 596 : pyxb.binding.content.ContentModelState(state=596, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=880, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 597 : pyxb.binding.content.ContentModelState(state=597, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=760, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 598 : pyxb.binding.content.ContentModelState(state=598, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=739, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 599 : pyxb.binding.content.ContentModelState(state=599, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=883, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 600 : pyxb.binding.content.ContentModelState(state=600, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=621, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 601 : pyxb.binding.content.ContentModelState(state=601, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=885, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 602 : pyxb.binding.content.ContentModelState(state=602, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1028, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 603 : pyxb.binding.content.ContentModelState(state=603, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=887, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 604 : pyxb.binding.content.ContentModelState(state=604, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=888, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 605 : pyxb.binding.content.ContentModelState(state=605, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=889, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 606 : pyxb.binding.content.ContentModelState(state=606, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=890, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 607 : pyxb.binding.content.ContentModelState(state=607, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=749, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 608 : pyxb.binding.content.ContentModelState(state=608, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=893, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 609 : pyxb.binding.content.ContentModelState(state=609, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=751, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 610 : pyxb.binding.content.ContentModelState(state=610, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=752, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 611 : pyxb.binding.content.ContentModelState(state=611, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1038, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 612 : pyxb.binding.content.ContentModelState(state=612, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=754, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 613 : pyxb.binding.content.ContentModelState(state=613, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1040, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 614 : pyxb.binding.content.ContentModelState(state=614, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=899, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 615 : pyxb.binding.content.ContentModelState(state=615, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=757, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 616 : pyxb.binding.content.ContentModelState(state=616, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=779, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 617 : pyxb.binding.content.ContentModelState(state=617, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=638, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 618 : pyxb.binding.content.ContentModelState(state=618, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=902, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 619 : pyxb.binding.content.ContentModelState(state=619, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=903, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 620 : pyxb.binding.content.ContentModelState(state=620, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=762, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 621 : pyxb.binding.content.ContentModelState(state=621, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=905, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 622 : pyxb.binding.content.ContentModelState(state=622, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=906, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 623 : pyxb.binding.content.ContentModelState(state=623, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1049, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 624 : pyxb.binding.content.ContentModelState(state=624, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=645, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 625 : pyxb.binding.content.ContentModelState(state=625, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=788, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 626 : pyxb.binding.content.ContentModelState(state=626, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=789, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 627 : pyxb.binding.content.ContentModelState(state=627, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=648, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 628 : pyxb.binding.content.ContentModelState(state=628, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=912, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 629 : pyxb.binding.content.ContentModelState(state=629, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=913, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 630 : pyxb.binding.content.ContentModelState(state=630, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=772, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 631 : pyxb.binding.content.ContentModelState(state=631, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=915, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 632 : pyxb.binding.content.ContentModelState(state=632, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1058, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 633 : pyxb.binding.content.ContentModelState(state=633, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=775, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 634 : pyxb.binding.content.ContentModelState(state=634, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=918, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 635 : pyxb.binding.content.ContentModelState(state=635, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=656, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 636 : pyxb.binding.content.ContentModelState(state=636, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=657, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 637 : pyxb.binding.content.ContentModelState(state=637, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=921, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 638 : pyxb.binding.content.ContentModelState(state=638, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=780, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 639 : pyxb.binding.content.ContentModelState(state=639, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1065, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 640 : pyxb.binding.content.ContentModelState(state=640, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=924, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 641 : pyxb.binding.content.ContentModelState(state=641, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=925, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 642 : pyxb.binding.content.ContentModelState(state=642, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1068, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 643 : pyxb.binding.content.ContentModelState(state=643, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=664, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 644 : pyxb.binding.content.ContentModelState(state=644, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=996, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 645 : pyxb.binding.content.ContentModelState(state=645, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=787, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 646 : pyxb.binding.content.ContentModelState(state=646, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=998, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 647 : pyxb.binding.content.ContentModelState(state=647, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=931, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 648 : pyxb.binding.content.ContentModelState(state=648, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=790, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 649 : pyxb.binding.content.ContentModelState(state=649, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=933, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 650 : pyxb.binding.content.ContentModelState(state=650, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=934, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 651 : pyxb.binding.content.ContentModelState(state=651, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=793, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 652 : pyxb.binding.content.ContentModelState(state=652, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=794, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 653 : pyxb.binding.content.ContentModelState(state=653, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=817, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 654 : pyxb.binding.content.ContentModelState(state=654, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=796, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 655 : pyxb.binding.content.ContentModelState(state=655, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=676, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 656 : pyxb.binding.content.ContentModelState(state=656, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1082, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 657 : pyxb.binding.content.ContentModelState(state=657, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=941, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 658 : pyxb.binding.content.ContentModelState(state=658, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=942, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 659 : pyxb.binding.content.ContentModelState(state=659, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=943, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 660 : pyxb.binding.content.ContentModelState(state=660, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=944, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 661 : pyxb.binding.content.ContentModelState(state=661, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=803, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 662 : pyxb.binding.content.ContentModelState(state=662, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=683, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 663 : pyxb.binding.content.ContentModelState(state=663, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=827, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 664 : pyxb.binding.content.ContentModelState(state=664, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=806, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 665 : pyxb.binding.content.ContentModelState(state=665, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=829, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 666 : pyxb.binding.content.ContentModelState(state=666, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=808, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 667 : pyxb.binding.content.ContentModelState(state=667, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=951, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 668 : pyxb.binding.content.ContentModelState(state=668, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1094, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 669 : pyxb.binding.content.ContentModelState(state=669, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=811, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 670 : pyxb.binding.content.ContentModelState(state=670, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=954, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 671 : pyxb.binding.content.ContentModelState(state=671, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=813, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 672 : pyxb.binding.content.ContentModelState(state=672, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=815, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 673 : pyxb.binding.content.ContentModelState(state=673, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=958, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 674 : pyxb.binding.content.ContentModelState(state=674, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=695, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 675 : pyxb.binding.content.ContentModelState(state=675, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=818, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 676 : pyxb.binding.content.ContentModelState(state=676, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1102, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 677 : pyxb.binding.content.ContentModelState(state=677, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1103, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 678 : pyxb.binding.content.ContentModelState(state=678, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=963, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 679 : pyxb.binding.content.ContentModelState(state=679, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=843, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 680 : pyxb.binding.content.ContentModelState(state=680, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=823, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 681 : pyxb.binding.content.ContentModelState(state=681, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=845, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 682 : pyxb.binding.content.ContentModelState(state=682, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=825, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 683 : pyxb.binding.content.ContentModelState(state=683, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=968, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 684 : pyxb.binding.content.ContentModelState(state=684, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=848, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 685 : pyxb.binding.content.ContentModelState(state=685, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=970, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 686 : pyxb.binding.content.ContentModelState(state=686, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=971, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 687 : pyxb.binding.content.ContentModelState(state=687, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=830, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 688 : pyxb.binding.content.ContentModelState(state=688, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1114, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 689 : pyxb.binding.content.ContentModelState(state=689, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=853, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 690 : pyxb.binding.content.ContentModelState(state=690, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=975, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 691 : pyxb.binding.content.ContentModelState(state=691, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=712, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 692 : pyxb.binding.content.ContentModelState(state=692, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=150, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 693 : pyxb.binding.content.ContentModelState(state=693, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=836, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 694 : pyxb.binding.content.ContentModelState(state=694, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=979, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 695 : pyxb.binding.content.ContentModelState(state=695, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1121, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 696 : pyxb.binding.content.ContentModelState(state=696, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=981, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 697 : pyxb.binding.content.ContentModelState(state=697, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1123, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 698 : pyxb.binding.content.ContentModelState(state=698, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=862, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 699 : pyxb.binding.content.ContentModelState(state=699, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=984, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 700 : pyxb.binding.content.ContentModelState(state=700, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=864, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 701 : pyxb.binding.content.ContentModelState(state=701, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=844, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 702 : pyxb.binding.content.ContentModelState(state=702, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=987, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 703 : pyxb.binding.content.ContentModelState(state=703, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=988, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 704 : pyxb.binding.content.ContentModelState(state=704, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=989, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 705 : pyxb.binding.content.ContentModelState(state=705, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=990, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 706 : pyxb.binding.content.ContentModelState(state=706, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=849, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 707 : pyxb.binding.content.ContentModelState(state=707, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=992, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 708 : pyxb.binding.content.ContentModelState(state=708, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=851, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 709 : pyxb.binding.content.ContentModelState(state=709, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=994, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 710 : pyxb.binding.content.ContentModelState(state=710, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=731, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 711 : pyxb.binding.content.ContentModelState(state=711, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=732, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 712 : pyxb.binding.content.ContentModelState(state=712, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1138, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 713 : pyxb.binding.content.ContentModelState(state=713, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=856, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 714 : pyxb.binding.content.ContentModelState(state=714, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=999, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 715 : pyxb.binding.content.ContentModelState(state=715, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1000, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 716 : pyxb.binding.content.ContentModelState(state=716, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1001, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 717 : pyxb.binding.content.ContentModelState(state=717, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=860, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 718 : pyxb.binding.content.ContentModelState(state=718, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1003, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 719 : pyxb.binding.content.ContentModelState(state=719, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=740, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 720 : pyxb.binding.content.ContentModelState(state=720, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=863, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 721 : pyxb.binding.content.ContentModelState(state=721, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1147, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 722 : pyxb.binding.content.ContentModelState(state=722, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=865, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 723 : pyxb.binding.content.ContentModelState(state=723, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1008, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 724 : pyxb.binding.content.ContentModelState(state=724, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1009, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 725 : pyxb.binding.content.ContentModelState(state=725, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=868, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 726 : pyxb.binding.content.ContentModelState(state=726, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1152, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 727 : pyxb.binding.content.ContentModelState(state=727, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=870, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 728 : pyxb.binding.content.ContentModelState(state=728, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1013, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 729 : pyxb.binding.content.ContentModelState(state=729, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=872, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 730 : pyxb.binding.content.ContentModelState(state=730, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=894, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 731 : pyxb.binding.content.ContentModelState(state=731, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1016, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 732 : pyxb.binding.content.ContentModelState(state=732, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1017, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 733 : pyxb.binding.content.ContentModelState(state=733, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1018, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 734 : pyxb.binding.content.ContentModelState(state=734, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1019, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 735 : pyxb.binding.content.ContentModelState(state=735, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=878, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 736 : pyxb.binding.content.ContentModelState(state=736, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=879, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 737 : pyxb.binding.content.ContentModelState(state=737, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1022, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 738 : pyxb.binding.content.ContentModelState(state=738, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1023, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 739 : pyxb.binding.content.ContentModelState(state=739, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=949, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 740 : pyxb.binding.content.ContentModelState(state=740, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1166, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 741 : pyxb.binding.content.ContentModelState(state=741, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=884, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 742 : pyxb.binding.content.ContentModelState(state=742, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1027, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 743 : pyxb.binding.content.ContentModelState(state=743, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=886, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 744 : pyxb.binding.content.ContentModelState(state=744, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=908, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 745 : pyxb.binding.content.ContentModelState(state=745, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1030, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 746 : pyxb.binding.content.ContentModelState(state=746, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=768, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 747 : pyxb.binding.content.ContentModelState(state=747, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1032, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 748 : pyxb.binding.content.ContentModelState(state=748, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=891, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 749 : pyxb.binding.content.ContentModelState(state=749, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=770, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 750 : pyxb.binding.content.ContentModelState(state=750, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1035, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 751 : pyxb.binding.content.ContentModelState(state=751, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1176, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 752 : pyxb.binding.content.ContentModelState(state=752, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1177, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 753 : pyxb.binding.content.ContentModelState(state=753, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=896, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 754 : pyxb.binding.content.ContentModelState(state=754, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=917, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 755 : pyxb.binding.content.ContentModelState(state=755, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=898, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 756 : pyxb.binding.content.ContentModelState(state=756, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=777, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 757 : pyxb.binding.content.ContentModelState(state=757, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1042, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 758 : pyxb.binding.content.ContentModelState(state=758, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=901, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 759 : pyxb.binding.content.ContentModelState(state=759, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=922, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 760 : pyxb.binding.content.ContentModelState(state=760, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1044, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 761 : pyxb.binding.content.ContentModelState(state=761, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1045, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 762 : pyxb.binding.content.ContentModelState(state=762, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1046, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 763 : pyxb.binding.content.ContentModelState(state=763, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1047, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 764 : pyxb.binding.content.ContentModelState(state=764, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1048, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 765 : pyxb.binding.content.ContentModelState(state=765, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=907, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 766 : pyxb.binding.content.ContentModelState(state=766, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=929, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 767 : pyxb.binding.content.ContentModelState(state=767, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=909, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 768 : pyxb.binding.content.ContentModelState(state=768, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1052, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 769 : pyxb.binding.content.ContentModelState(state=769, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=932, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 770 : pyxb.binding.content.ContentModelState(state=770, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1054, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 771 : pyxb.binding.content.ContentModelState(state=771, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1055, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 772 : pyxb.binding.content.ContentModelState(state=772, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1197, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 773 : pyxb.binding.content.ContentModelState(state=773, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1057, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 774 : pyxb.binding.content.ContentModelState(state=774, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=916, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 775 : pyxb.binding.content.ContentModelState(state=775, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=938, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 776 : pyxb.binding.content.ContentModelState(state=776, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=797, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 777 : pyxb.binding.content.ContentModelState(state=777, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1061, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 778 : pyxb.binding.content.ContentModelState(state=778, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=799, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 779 : pyxb.binding.content.ContentModelState(state=779, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1063, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 780 : pyxb.binding.content.ContentModelState(state=780, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1205, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 781 : pyxb.binding.content.ContentModelState(state=781, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=923, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 782 : pyxb.binding.content.ContentModelState(state=782, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1066, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 783 : pyxb.binding.content.ContentModelState(state=783, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1067, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 784 : pyxb.binding.content.ContentModelState(state=784, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=926, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 785 : pyxb.binding.content.ContentModelState(state=785, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=948, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 786 : pyxb.binding.content.ContentModelState(state=786, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=928, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 787 : pyxb.binding.content.ContentModelState(state=787, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1071, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 788 : pyxb.binding.content.ContentModelState(state=788, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1072, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 789 : pyxb.binding.content.ContentModelState(state=789, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1073, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 790 : pyxb.binding.content.ContentModelState(state=790, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1074, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 791 : pyxb.binding.content.ContentModelState(state=791, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1075, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 792 : pyxb.binding.content.ContentModelState(state=792, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=814, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 793 : pyxb.binding.content.ContentModelState(state=793, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1077, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 794 : pyxb.binding.content.ContentModelState(state=794, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=816, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 795 : pyxb.binding.content.ContentModelState(state=795, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=937, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 796 : pyxb.binding.content.ContentModelState(state=796, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1221, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 797 : pyxb.binding.content.ContentModelState(state=797, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=939, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 798 : pyxb.binding.content.ContentModelState(state=798, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=940, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 799 : pyxb.binding.content.ContentModelState(state=799, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1083, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 800 : pyxb.binding.content.ContentModelState(state=800, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1084, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 801 : pyxb.binding.content.ContentModelState(state=801, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1085, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 802 : pyxb.binding.content.ContentModelState(state=802, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=824, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 803 : pyxb.binding.content.ContentModelState(state=803, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=967, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 804 : pyxb.binding.content.ContentModelState(state=804, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=826, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 805 : pyxb.binding.content.ContentModelState(state=805, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=947, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 806 : pyxb.binding.content.ContentModelState(state=806, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1231, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 807 : pyxb.binding.content.ContentModelState(state=807, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1091, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 808 : pyxb.binding.content.ContentModelState(state=808, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1233, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 809 : pyxb.binding.content.ContentModelState(state=809, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1093, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 810 : pyxb.binding.content.ContentModelState(state=810, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=952, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 811 : pyxb.binding.content.ContentModelState(state=811, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1236, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 812 : pyxb.binding.content.ContentModelState(state=812, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=834, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 813 : pyxb.binding.content.ContentModelState(state=813, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1096, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 814 : pyxb.binding.content.ContentModelState(state=814, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1097, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 815 : pyxb.binding.content.ContentModelState(state=815, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=978, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 816 : pyxb.binding.content.ContentModelState(state=816, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1240, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 817 : pyxb.binding.content.ContentModelState(state=817, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=959, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 818 : pyxb.binding.content.ContentModelState(state=818, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1242, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 819 : pyxb.binding.content.ContentModelState(state=819, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=961, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 820 : pyxb.binding.content.ContentModelState(state=820, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=962, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 821 : pyxb.binding.content.ContentModelState(state=821, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1245, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 822 : pyxb.binding.content.ContentModelState(state=822, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=964, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 823 : pyxb.binding.content.ContentModelState(state=823, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=986, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 824 : pyxb.binding.content.ContentModelState(state=824, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=966, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 825 : pyxb.binding.content.ContentModelState(state=825, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=846, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 826 : pyxb.binding.content.ContentModelState(state=826, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1109, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 827 : pyxb.binding.content.ContentModelState(state=827, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1110, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 828 : pyxb.binding.content.ContentModelState(state=828, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1252, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 829 : pyxb.binding.content.ContentModelState(state=829, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1112, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 830 : pyxb.binding.content.ContentModelState(state=830, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1113, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 831 : pyxb.binding.content.ContentModelState(state=831, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=973, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 832 : pyxb.binding.content.ContentModelState(state=832, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=974, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 833 : pyxb.binding.content.ContentModelState(state=833, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1182, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 834 : pyxb.binding.content.ContentModelState(state=834, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1117, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 835 : pyxb.binding.content.ContentModelState(state=835, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=292, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 836 : pyxb.binding.content.ContentModelState(state=836, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1260, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 837 : pyxb.binding.content.ContentModelState(state=837, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1120, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 838 : pyxb.binding.content.ContentModelState(state=838, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=980, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 839 : pyxb.binding.content.ContentModelState(state=839, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1002, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 840 : pyxb.binding.content.ContentModelState(state=840, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=982, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 841 : pyxb.binding.content.ContentModelState(state=841, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=983, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 842 : pyxb.binding.content.ContentModelState(state=842, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1125, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 843 : pyxb.binding.content.ContentModelState(state=843, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1126, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 844 : pyxb.binding.content.ContentModelState(state=844, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1007, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 845 : pyxb.binding.content.ContentModelState(state=845, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1128, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 846 : pyxb.binding.content.ContentModelState(state=846, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1129, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 847 : pyxb.binding.content.ContentModelState(state=847, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1130, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 848 : pyxb.binding.content.ContentModelState(state=848, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1131, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 849 : pyxb.binding.content.ContentModelState(state=849, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1132, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 850 : pyxb.binding.content.ContentModelState(state=850, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1133, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 851 : pyxb.binding.content.ContentModelState(state=851, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1014, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 852 : pyxb.binding.content.ContentModelState(state=852, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=873, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 853 : pyxb.binding.content.ContentModelState(state=853, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=995, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 854 : pyxb.binding.content.ContentModelState(state=854, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=875, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 855 : pyxb.binding.content.ContentModelState(state=855, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=997, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 856 : pyxb.binding.content.ContentModelState(state=856, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1280, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 857 : pyxb.binding.content.ContentModelState(state=857, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1140, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 858 : pyxb.binding.content.ContentModelState(state=858, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1141, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 859 : pyxb.binding.content.ContentModelState(state=859, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1142, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 860 : pyxb.binding.content.ContentModelState(state=860, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=881, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 861 : pyxb.binding.content.ContentModelState(state=861, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=882, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 862 : pyxb.binding.content.ContentModelState(state=862, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1004, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 863 : pyxb.binding.content.ContentModelState(state=863, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1026, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 864 : pyxb.binding.content.ContentModelState(state=864, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1006, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 865 : pyxb.binding.content.ContentModelState(state=865, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1289, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 866 : pyxb.binding.content.ContentModelState(state=866, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1149, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 867 : pyxb.binding.content.ContentModelState(state=867, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1150, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 868 : pyxb.binding.content.ContentModelState(state=868, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1031, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 869 : pyxb.binding.content.ContentModelState(state=869, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1011, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 870 : pyxb.binding.content.ContentModelState(state=870, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1033, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 871 : pyxb.binding.content.ContentModelState(state=871, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=892, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 872 : pyxb.binding.content.ContentModelState(state=872, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1155, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 873 : pyxb.binding.content.ContentModelState(state=873, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1015, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 874 : pyxb.binding.content.ContentModelState(state=874, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1157, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 875 : pyxb.binding.content.ContentModelState(state=875, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1158, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 876 : pyxb.binding.content.ContentModelState(state=876, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1159, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 877 : pyxb.binding.content.ContentModelState(state=877, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1160, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 878 : pyxb.binding.content.ContentModelState(state=878, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1161, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 879 : pyxb.binding.content.ContentModelState(state=879, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1043, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 880 : pyxb.binding.content.ContentModelState(state=880, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1089, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 881 : pyxb.binding.content.ContentModelState(state=881, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1164, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 882 : pyxb.binding.content.ContentModelState(state=882, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1024, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 883 : pyxb.binding.content.ContentModelState(state=883, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1025, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 884 : pyxb.binding.content.ContentModelState(state=884, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1308, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 885 : pyxb.binding.content.ContentModelState(state=885, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1168, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 886 : pyxb.binding.content.ContentModelState(state=886, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1169, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 887 : pyxb.binding.content.ContentModelState(state=887, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1029, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 888 : pyxb.binding.content.ContentModelState(state=888, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1051, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 889 : pyxb.binding.content.ContentModelState(state=889, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=910, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 890 : pyxb.binding.content.ContentModelState(state=890, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=911, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 891 : pyxb.binding.content.ContentModelState(state=891, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
    ])
    , 892 : pyxb.binding.content.ContentModelState(state=892, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1174, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 893 : pyxb.binding.content.ContentModelState(state=893, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1316, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 894 : pyxb.binding.content.ContentModelState(state=894, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1036, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 895 : pyxb.binding.content.ContentModelState(state=895, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1037, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 896 : pyxb.binding.content.ContentModelState(state=896, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1319, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 897 : pyxb.binding.content.ContentModelState(state=897, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1039, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 898 : pyxb.binding.content.ContentModelState(state=898, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1060, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 899 : pyxb.binding.content.ContentModelState(state=899, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=919, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 900 : pyxb.binding.content.ContentModelState(state=900, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=920, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 901 : pyxb.binding.content.ContentModelState(state=901, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1183, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 902 : pyxb.binding.content.ContentModelState(state=902, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1326, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 903 : pyxb.binding.content.ContentModelState(state=903, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1186, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 904 : pyxb.binding.content.ContentModelState(state=904, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1187, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 905 : pyxb.binding.content.ContentModelState(state=905, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1329, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 906 : pyxb.binding.content.ContentModelState(state=906, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=927, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 907 : pyxb.binding.content.ContentModelState(state=907, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1070, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 908 : pyxb.binding.content.ContentModelState(state=908, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1050, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 909 : pyxb.binding.content.ContentModelState(state=909, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=930, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 910 : pyxb.binding.content.ContentModelState(state=910, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1193, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 911 : pyxb.binding.content.ContentModelState(state=911, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1194, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 912 : pyxb.binding.content.ContentModelState(state=912, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1195, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 913 : pyxb.binding.content.ContentModelState(state=913, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1196, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 914 : pyxb.binding.content.ContentModelState(state=914, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1056, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 915 : pyxb.binding.content.ContentModelState(state=915, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=936, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 916 : pyxb.binding.content.ContentModelState(state=916, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1199, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 917 : pyxb.binding.content.ContentModelState(state=917, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1059, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 918 : pyxb.binding.content.ContentModelState(state=918, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1081, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 919 : pyxb.binding.content.ContentModelState(state=919, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1343, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 920 : pyxb.binding.content.ContentModelState(state=920, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1062, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 921 : pyxb.binding.content.ContentModelState(state=921, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1345, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 922 : pyxb.binding.content.ContentModelState(state=922, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1064, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 923 : pyxb.binding.content.ContentModelState(state=923, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1086, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 924 : pyxb.binding.content.ContentModelState(state=924, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1207, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 925 : pyxb.binding.content.ContentModelState(state=925, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=946, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 926 : pyxb.binding.content.ContentModelState(state=926, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=526, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 927 : pyxb.binding.content.ContentModelState(state=927, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1069, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 928 : pyxb.binding.content.ContentModelState(state=928, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1278, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 929 : pyxb.binding.content.ContentModelState(state=929, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1212, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 930 : pyxb.binding.content.ContentModelState(state=930, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1354, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 931 : pyxb.binding.content.ContentModelState(state=931, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1214, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 932 : pyxb.binding.content.ContentModelState(state=932, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1215, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 933 : pyxb.binding.content.ContentModelState(state=933, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1216, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 934 : pyxb.binding.content.ContentModelState(state=934, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=956, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 935 : pyxb.binding.content.ContentModelState(state=935, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=957, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 936 : pyxb.binding.content.ContentModelState(state=936, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1219, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 937 : pyxb.binding.content.ContentModelState(state=937, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1100, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 938 : pyxb.binding.content.ContentModelState(state=938, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1080, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 939 : pyxb.binding.content.ContentModelState(state=939, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1363, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 940 : pyxb.binding.content.ContentModelState(state=940, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1223, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 941 : pyxb.binding.content.ContentModelState(state=941, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1224, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 942 : pyxb.binding.content.ContentModelState(state=942, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1225, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 943 : pyxb.binding.content.ContentModelState(state=943, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1226, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 944 : pyxb.binding.content.ContentModelState(state=944, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1107, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 945 : pyxb.binding.content.ContentModelState(state=945, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1087, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 946 : pyxb.binding.content.ContentModelState(state=946, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1229, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 947 : pyxb.binding.content.ContentModelState(state=947, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=969, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 948 : pyxb.binding.content.ContentModelState(state=948, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1090, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 949 : pyxb.binding.content.ContentModelState(state=949, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1373, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 950 : pyxb.binding.content.ContentModelState(state=950, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1092, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 951 : pyxb.binding.content.ContentModelState(state=951, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1234, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 952 : pyxb.binding.content.ContentModelState(state=952, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1115, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 953 : pyxb.binding.content.ContentModelState(state=953, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1095, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 954 : pyxb.binding.content.ContentModelState(state=954, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=976, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 955 : pyxb.binding.content.ContentModelState(state=955, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=977, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 956 : pyxb.binding.content.ContentModelState(state=956, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1238, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 957 : pyxb.binding.content.ContentModelState(state=957, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1239, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 958 : pyxb.binding.content.ContentModelState(state=958, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1099, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 959 : pyxb.binding.content.ContentModelState(state=959, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1382, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 960 : pyxb.binding.content.ContentModelState(state=960, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1101, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 961 : pyxb.binding.content.ContentModelState(state=961, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1384, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 962 : pyxb.binding.content.ContentModelState(state=962, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1244, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 963 : pyxb.binding.content.ContentModelState(state=963, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1104, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 964 : pyxb.binding.content.ContentModelState(state=964, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=985, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 965 : pyxb.binding.content.ContentModelState(state=965, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1106, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 966 : pyxb.binding.content.ContentModelState(state=966, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1389, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 967 : pyxb.binding.content.ContentModelState(state=967, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1108, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 968 : pyxb.binding.content.ContentModelState(state=968, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1250, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 969 : pyxb.binding.content.ContentModelState(state=969, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1251, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 970 : pyxb.binding.content.ContentModelState(state=970, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1111, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 971 : pyxb.binding.content.ContentModelState(state=971, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1394, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 972 : pyxb.binding.content.ContentModelState(state=972, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=993, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 973 : pyxb.binding.content.ContentModelState(state=973, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1255, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 974 : pyxb.binding.content.ContentModelState(state=974, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1136, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 975 : pyxb.binding.content.ContentModelState(state=975, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1116, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 976 : pyxb.binding.content.ContentModelState(state=976, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1399, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 977 : pyxb.binding.content.ContentModelState(state=977, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1118, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 978 : pyxb.binding.content.ContentModelState(state=978, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1119, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 979 : pyxb.binding.content.ContentModelState(state=979, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1261, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 980 : pyxb.binding.content.ContentModelState(state=980, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1403, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 981 : pyxb.binding.content.ContentModelState(state=981, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1122, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 982 : pyxb.binding.content.ContentModelState(state=982, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1144, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 983 : pyxb.binding.content.ContentModelState(state=983, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1145, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 984 : pyxb.binding.content.ContentModelState(state=984, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1005, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 985 : pyxb.binding.content.ContentModelState(state=985, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1408, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 986 : pyxb.binding.content.ContentModelState(state=986, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1268, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 987 : pyxb.binding.content.ContentModelState(state=987, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1410, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 988 : pyxb.binding.content.ContentModelState(state=988, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1270, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 989 : pyxb.binding.content.ContentModelState(state=989, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1271, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 990 : pyxb.binding.content.ContentModelState(state=990, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1413, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 991 : pyxb.binding.content.ContentModelState(state=991, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1012, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 992 : pyxb.binding.content.ContentModelState(state=992, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1274, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 993 : pyxb.binding.content.ContentModelState(state=993, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1275, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 994 : pyxb.binding.content.ContentModelState(state=994, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1156, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 995 : pyxb.binding.content.ContentModelState(state=995, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1418, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 996 : pyxb.binding.content.ContentModelState(state=996, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1137, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 997 : pyxb.binding.content.ContentModelState(state=997, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1420, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 998 : pyxb.binding.content.ContentModelState(state=998, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1139, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 999 : pyxb.binding.content.ContentModelState(state=999, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1281, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1000 : pyxb.binding.content.ContentModelState(state=1000, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1021, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1001 : pyxb.binding.content.ContentModelState(state=1001, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1283, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1002 : pyxb.binding.content.ContentModelState(state=1002, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1284, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1003 : pyxb.binding.content.ContentModelState(state=1003, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1165, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1004 : pyxb.binding.content.ContentModelState(state=1004, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1286, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1005 : pyxb.binding.content.ContentModelState(state=1005, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1146, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1006 : pyxb.binding.content.ContentModelState(state=1006, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1429, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1007 : pyxb.binding.content.ContentModelState(state=1007, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1148, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1008 : pyxb.binding.content.ContentModelState(state=1008, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1290, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1009 : pyxb.binding.content.ContentModelState(state=1009, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1291, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1010 : pyxb.binding.content.ContentModelState(state=1010, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1151, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1011 : pyxb.binding.content.ContentModelState(state=1011, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1293, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1012 : pyxb.binding.content.ContentModelState(state=1012, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1153, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1013 : pyxb.binding.content.ContentModelState(state=1013, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1034, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1014 : pyxb.binding.content.ContentModelState(state=1014, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1296, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1015 : pyxb.binding.content.ContentModelState(state=1015, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1297, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1016 : pyxb.binding.content.ContentModelState(state=1016, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1439, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1017 : pyxb.binding.content.ContentModelState(state=1017, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1299, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1018 : pyxb.binding.content.ContentModelState(state=1018, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1179, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1019 : pyxb.binding.content.ContentModelState(state=1019, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1301, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1020 : pyxb.binding.content.ContentModelState(state=1020, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1041, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1021 : pyxb.binding.content.ContentModelState(state=1021, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1162, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1022 : pyxb.binding.content.ContentModelState(state=1022, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1230, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1023 : pyxb.binding.content.ContentModelState(state=1023, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1305, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1024 : pyxb.binding.content.ContentModelState(state=1024, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1306, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1025 : pyxb.binding.content.ContentModelState(state=1025, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1307, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1026 : pyxb.binding.content.ContentModelState(state=1026, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1167, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1027 : pyxb.binding.content.ContentModelState(state=1027, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1309, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1028 : pyxb.binding.content.ContentModelState(state=1028, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1310, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1029 : pyxb.binding.content.ContentModelState(state=1029, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1191, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1030 : pyxb.binding.content.ContentModelState(state=1030, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1171, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1031 : pyxb.binding.content.ContentModelState(state=1031, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1172, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1032 : pyxb.binding.content.ContentModelState(state=1032, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1053, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1033 : pyxb.binding.content.ContentModelState(state=1033, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1034 : pyxb.binding.content.ContentModelState(state=1034, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1456, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1035 : pyxb.binding.content.ContentModelState(state=1035, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1175, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1036 : pyxb.binding.content.ContentModelState(state=1036, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1317, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1037 : pyxb.binding.content.ContentModelState(state=1037, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1318, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1038 : pyxb.binding.content.ContentModelState(state=1038, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1178, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1039 : pyxb.binding.content.ContentModelState(state=1039, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1200, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1040 : pyxb.binding.content.ContentModelState(state=1040, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1180, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1041 : pyxb.binding.content.ContentModelState(state=1041, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1181, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1042 : pyxb.binding.content.ContentModelState(state=1042, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1203, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1043 : pyxb.binding.content.ContentModelState(state=1043, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1324, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1044 : pyxb.binding.content.ContentModelState(state=1044, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1185, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1045 : pyxb.binding.content.ContentModelState(state=1045, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1327, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1046 : pyxb.binding.content.ContentModelState(state=1046, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1208, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1047 : pyxb.binding.content.ContentModelState(state=1047, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1188, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1048 : pyxb.binding.content.ContentModelState(state=1048, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1210, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1049 : pyxb.binding.content.ContentModelState(state=1049, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1190, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1050 : pyxb.binding.content.ContentModelState(state=1050, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1332, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1051 : pyxb.binding.content.ContentModelState(state=1051, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1192, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1052 : pyxb.binding.content.ContentModelState(state=1052, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1334, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1053 : pyxb.binding.content.ContentModelState(state=1053, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1476, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1054 : pyxb.binding.content.ContentModelState(state=1054, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1336, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1055 : pyxb.binding.content.ContentModelState(state=1055, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1076, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1056 : pyxb.binding.content.ContentModelState(state=1056, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1338, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1057 : pyxb.binding.content.ContentModelState(state=1057, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1078, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1058 : pyxb.binding.content.ContentModelState(state=1058, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1079, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1059 : pyxb.binding.content.ContentModelState(state=1059, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1482, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1060 : pyxb.binding.content.ContentModelState(state=1060, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1342, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1061 : pyxb.binding.content.ContentModelState(state=1061, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1202, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1062 : pyxb.binding.content.ContentModelState(state=1062, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1485, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1063 : pyxb.binding.content.ContentModelState(state=1063, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1204, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1064 : pyxb.binding.content.ContentModelState(state=1064, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1346, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1065 : pyxb.binding.content.ContentModelState(state=1065, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1206, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1066 : pyxb.binding.content.ContentModelState(state=1066, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1228, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1067 : pyxb.binding.content.ContentModelState(state=1067, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1088, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1068 : pyxb.binding.content.ContentModelState(state=1068, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1209, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1069 : pyxb.binding.content.ContentModelState(state=1069, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1351, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1070 : pyxb.binding.content.ContentModelState(state=1070, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1352, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1071 : pyxb.binding.content.ContentModelState(state=1071, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1353, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1072 : pyxb.binding.content.ContentModelState(state=1072, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1213, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1073 : pyxb.binding.content.ContentModelState(state=1073, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1355, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1074 : pyxb.binding.content.ContentModelState(state=1074, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1497, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1075 : pyxb.binding.content.ContentModelState(state=1075, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1357, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1076 : pyxb.binding.content.ContentModelState(state=1076, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1217, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1077 : pyxb.binding.content.ContentModelState(state=1077, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1098, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1078 : pyxb.binding.content.ContentModelState(state=1078, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1501, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1079 : pyxb.binding.content.ContentModelState(state=1079, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1361, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1080 : pyxb.binding.content.ContentModelState(state=1080, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1362, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1081 : pyxb.binding.content.ContentModelState(state=1081, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1222, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1082 : pyxb.binding.content.ContentModelState(state=1082, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1364, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1083 : pyxb.binding.content.ContentModelState(state=1083, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1506, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1084 : pyxb.binding.content.ContentModelState(state=1084, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1105, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1085 : pyxb.binding.content.ContentModelState(state=1085, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1367, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1086 : pyxb.binding.content.ContentModelState(state=1086, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1368, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1087 : pyxb.binding.content.ContentModelState(state=1087, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1249, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1088 : pyxb.binding.content.ContentModelState(state=1088, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1370, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1089 : pyxb.binding.content.ContentModelState(state=1089, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1371, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1090 : pyxb.binding.content.ContentModelState(state=1090, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1372, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1091 : pyxb.binding.content.ContentModelState(state=1091, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1232, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1092 : pyxb.binding.content.ContentModelState(state=1092, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1254, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1093 : pyxb.binding.content.ContentModelState(state=1093, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1375, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1094 : pyxb.binding.content.ContentModelState(state=1094, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1235, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1095 : pyxb.binding.content.ContentModelState(state=1095, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1377, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1096 : pyxb.binding.content.ContentModelState(state=1096, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1259, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1097 : pyxb.binding.content.ContentModelState(state=1097, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1379, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1098 : pyxb.binding.content.ContentModelState(state=1098, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1521, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1099 : pyxb.binding.content.ContentModelState(state=1099, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1381, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1100 : pyxb.binding.content.ContentModelState(state=1100, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1241, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1101 : pyxb.binding.content.ContentModelState(state=1101, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1383, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1102 : pyxb.binding.content.ContentModelState(state=1102, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1243, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1103 : pyxb.binding.content.ContentModelState(state=1103, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1124, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1104 : pyxb.binding.content.ContentModelState(state=1104, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1266, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1105 : pyxb.binding.content.ContentModelState(state=1105, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1387, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1106 : pyxb.binding.content.ContentModelState(state=1106, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1127, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1107 : pyxb.binding.content.ContentModelState(state=1107, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1248, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1108 : pyxb.binding.content.ContentModelState(state=1108, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1390, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1109 : pyxb.binding.content.ContentModelState(state=1109, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1532, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1110 : pyxb.binding.content.ContentModelState(state=1110, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1392, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1111 : pyxb.binding.content.ContentModelState(state=1111, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1273, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1112 : pyxb.binding.content.ContentModelState(state=1112, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1253, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1113 : pyxb.binding.content.ContentModelState(state=1113, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1134, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1114 : pyxb.binding.content.ContentModelState(state=1114, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1135, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1115 : pyxb.binding.content.ContentModelState(state=1115, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1256, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1116 : pyxb.binding.content.ContentModelState(state=1116, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1323, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1117 : pyxb.binding.content.ContentModelState(state=1117, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1258, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1118 : pyxb.binding.content.ContentModelState(state=1118, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1541, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1119 : pyxb.binding.content.ContentModelState(state=1119, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1401, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1120 : pyxb.binding.content.ContentModelState(state=1120, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1282, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1121 : pyxb.binding.content.ContentModelState(state=1121, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1262, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1122 : pyxb.binding.content.ContentModelState(state=1122, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1143, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1123 : pyxb.binding.content.ContentModelState(state=1123, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1264, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1124 : pyxb.binding.content.ContentModelState(state=1124, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1406, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1125 : pyxb.binding.content.ContentModelState(state=1125, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1287, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1126 : pyxb.binding.content.ContentModelState(state=1126, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1267, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1127 : pyxb.binding.content.ContentModelState(state=1127, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1409, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1128 : pyxb.binding.content.ContentModelState(state=1128, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1269, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1129 : pyxb.binding.content.ContentModelState(state=1129, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1552, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1130 : pyxb.binding.content.ContentModelState(state=1130, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1412, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1131 : pyxb.binding.content.ContentModelState(state=1131, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1272, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1132 : pyxb.binding.content.ContentModelState(state=1132, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1294, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1133 : pyxb.binding.content.ContentModelState(state=1133, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1154, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1134 : pyxb.binding.content.ContentModelState(state=1134, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1416, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1135 : pyxb.binding.content.ContentModelState(state=1135, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1276, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1136 : pyxb.binding.content.ContentModelState(state=1136, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1277, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1137 : pyxb.binding.content.ContentModelState(state=1137, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1560, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1138 : pyxb.binding.content.ContentModelState(state=1138, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1279, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1139 : pyxb.binding.content.ContentModelState(state=1139, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1421, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1140 : pyxb.binding.content.ContentModelState(state=1140, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1302, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1141 : pyxb.binding.content.ContentModelState(state=1141, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1303, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1142 : pyxb.binding.content.ContentModelState(state=1142, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1163, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1143 : pyxb.binding.content.ContentModelState(state=1143, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1566, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1144 : pyxb.binding.content.ContentModelState(state=1144, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1426, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1145 : pyxb.binding.content.ContentModelState(state=1145, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1427, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1146 : pyxb.binding.content.ContentModelState(state=1146, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1428, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1147 : pyxb.binding.content.ContentModelState(state=1147, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1288, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1148 : pyxb.binding.content.ContentModelState(state=1148, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1430, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1149 : pyxb.binding.content.ContentModelState(state=1149, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1170, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1150 : pyxb.binding.content.ContentModelState(state=1150, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1312, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1151 : pyxb.binding.content.ContentModelState(state=1151, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1313, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1152 : pyxb.binding.content.ContentModelState(state=1152, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1173, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1153 : pyxb.binding.content.ContentModelState(state=1153, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1435, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1154 : pyxb.binding.content.ContentModelState(state=1154, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1295, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1155 : pyxb.binding.content.ContentModelState(state=1155, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1578, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1156 : pyxb.binding.content.ContentModelState(state=1156, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1438, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1157 : pyxb.binding.content.ContentModelState(state=1157, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1298, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1158 : pyxb.binding.content.ContentModelState(state=1158, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1440, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1159 : pyxb.binding.content.ContentModelState(state=1159, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1300, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1160 : pyxb.binding.content.ContentModelState(state=1160, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1321, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1161 : pyxb.binding.content.ContentModelState(state=1161, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1322, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1162 : pyxb.binding.content.ContentModelState(state=1162, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1585, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1163 : pyxb.binding.content.ContentModelState(state=1163, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1304, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1164 : pyxb.binding.content.ContentModelState(state=1164, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1587, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1165 : pyxb.binding.content.ContentModelState(state=1165, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1447, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1166 : pyxb.binding.content.ContentModelState(state=1166, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1448, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1167 : pyxb.binding.content.ContentModelState(state=1167, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1590, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1168 : pyxb.binding.content.ContentModelState(state=1168, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1189, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1169 : pyxb.binding.content.ContentModelState(state=1169, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1331, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1170 : pyxb.binding.content.ContentModelState(state=1170, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1452, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1171 : pyxb.binding.content.ContentModelState(state=1171, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1333, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1172 : pyxb.binding.content.ContentModelState(state=1172, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1454, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1173 : pyxb.binding.content.ContentModelState(state=1173, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1314, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1174 : pyxb.binding.content.ContentModelState(state=1174, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1315, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1175 : pyxb.binding.content.ContentModelState(state=1175, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1337, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1176 : pyxb.binding.content.ContentModelState(state=1176, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1458, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1177 : pyxb.binding.content.ContentModelState(state=1177, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1198, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1178 : pyxb.binding.content.ContentModelState(state=1178, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1340, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1179 : pyxb.binding.content.ContentModelState(state=1179, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1320, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1180 : pyxb.binding.content.ContentModelState(state=1180, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1201, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1181 : pyxb.binding.content.ContentModelState(state=1181, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1604, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1182 : pyxb.binding.content.ContentModelState(state=1182, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1464, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1183 : pyxb.binding.content.ContentModelState(state=1183, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1606, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1184 : pyxb.binding.content.ContentModelState(state=1184, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1607, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1185 : pyxb.binding.content.ContentModelState(state=1185, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1467, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1186 : pyxb.binding.content.ContentModelState(state=1186, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1468, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1187 : pyxb.binding.content.ContentModelState(state=1187, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1328, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1188 : pyxb.binding.content.ContentModelState(state=1188, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1470, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1189 : pyxb.binding.content.ContentModelState(state=1189, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1471, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1190 : pyxb.binding.content.ContentModelState(state=1190, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1211, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1191 : pyxb.binding.content.ContentModelState(state=1191, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1473, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1192 : pyxb.binding.content.ContentModelState(state=1192, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1474, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1193 : pyxb.binding.content.ContentModelState(state=1193, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1616, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1194 : pyxb.binding.content.ContentModelState(state=1194, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1335, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1195 : pyxb.binding.content.ContentModelState(state=1195, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1477, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1196 : pyxb.binding.content.ContentModelState(state=1196, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1358, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1197 : pyxb.binding.content.ContentModelState(state=1197, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1218, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1198 : pyxb.binding.content.ContentModelState(state=1198, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1339, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1199 : pyxb.binding.content.ContentModelState(state=1199, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1220, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1200 : pyxb.binding.content.ContentModelState(state=1200, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1341, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1201 : pyxb.binding.content.ContentModelState(state=1201, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1483, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1202 : pyxb.binding.content.ContentModelState(state=1202, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1484, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1203 : pyxb.binding.content.ContentModelState(state=1203, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1344, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1204 : pyxb.binding.content.ContentModelState(state=1204, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1486, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1205 : pyxb.binding.content.ContentModelState(state=1205, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1487, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1206 : pyxb.binding.content.ContentModelState(state=1206, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1227, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1207 : pyxb.binding.content.ContentModelState(state=1207, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1348, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1208 : pyxb.binding.content.ContentModelState(state=1208, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1349, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1209 : pyxb.binding.content.ContentModelState(state=1209, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=667, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1210 : pyxb.binding.content.ContentModelState(state=1210, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1492, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1211 : pyxb.binding.content.ContentModelState(state=1211, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1493, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1212 : pyxb.binding.content.ContentModelState(state=1212, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1494, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1213 : pyxb.binding.content.ContentModelState(state=1213, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1495, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1214 : pyxb.binding.content.ContentModelState(state=1214, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1376, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1215 : pyxb.binding.content.ContentModelState(state=1215, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1356, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1216 : pyxb.binding.content.ContentModelState(state=1216, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1237, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1217 : pyxb.binding.content.ContentModelState(state=1217, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1640, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1218 : pyxb.binding.content.ContentModelState(state=1218, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1500, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1219 : pyxb.binding.content.ContentModelState(state=1219, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1360, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1220 : pyxb.binding.content.ContentModelState(state=1220, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1643, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1221 : pyxb.binding.content.ContentModelState(state=1221, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1503, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1222 : pyxb.binding.content.ContentModelState(state=1222, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1645, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1223 : pyxb.binding.content.ContentModelState(state=1223, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1505, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1224 : pyxb.binding.content.ContentModelState(state=1224, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1365, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1225 : pyxb.binding.content.ContentModelState(state=1225, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1246, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1226 : pyxb.binding.content.ContentModelState(state=1226, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1247, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1227 : pyxb.binding.content.ContentModelState(state=1227, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1650, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1228 : pyxb.binding.content.ContentModelState(state=1228, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1510, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1229 : pyxb.binding.content.ContentModelState(state=1229, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1511, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1230 : pyxb.binding.content.ContentModelState(state=1230, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1512, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1231 : pyxb.binding.content.ContentModelState(state=1231, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1513, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1232 : pyxb.binding.content.ContentModelState(state=1232, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1514, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1233 : pyxb.binding.content.ContentModelState(state=1233, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1374, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1234 : pyxb.binding.content.ContentModelState(state=1234, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1396, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1235 : pyxb.binding.content.ContentModelState(state=1235, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1397, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1236 : pyxb.binding.content.ContentModelState(state=1236, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1257, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1237 : pyxb.binding.content.ContentModelState(state=1237, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1378, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1238 : pyxb.binding.content.ContentModelState(state=1238, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1661, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1239 : pyxb.binding.content.ContentModelState(state=1239, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1380, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1240 : pyxb.binding.content.ContentModelState(state=1240, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1522, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1241 : pyxb.binding.content.ContentModelState(state=1241, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1664, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1242 : pyxb.binding.content.ContentModelState(state=1242, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1263, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1243 : pyxb.binding.content.ContentModelState(state=1243, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1525, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1244 : pyxb.binding.content.ContentModelState(state=1244, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1265, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1245 : pyxb.binding.content.ContentModelState(state=1245, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1386, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1246 : pyxb.binding.content.ContentModelState(state=1246, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1528, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1247 : pyxb.binding.content.ContentModelState(state=1247, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1388, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1248 : pyxb.binding.content.ContentModelState(state=1248, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1671, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1249 : pyxb.binding.content.ContentModelState(state=1249, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1531, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1250 : pyxb.binding.content.ContentModelState(state=1250, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1391, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1251 : pyxb.binding.content.ContentModelState(state=1251, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1533, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1252 : pyxb.binding.content.ContentModelState(state=1252, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1393, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1253 : pyxb.binding.content.ContentModelState(state=1253, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1415, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1254 : pyxb.binding.content.ContentModelState(state=1254, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1395, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1255 : pyxb.binding.content.ContentModelState(state=1255, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1417, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1256 : pyxb.binding.content.ContentModelState(state=1256, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1679, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1257 : pyxb.binding.content.ContentModelState(state=1257, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1398, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1258 : pyxb.binding.content.ContentModelState(state=1258, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1540, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1259 : pyxb.binding.content.ContentModelState(state=1259, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1400, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1260 : pyxb.binding.content.ContentModelState(state=1260, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1542, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1261 : pyxb.binding.content.ContentModelState(state=1261, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1402, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1262 : pyxb.binding.content.ContentModelState(state=1262, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1544, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1263 : pyxb.binding.content.ContentModelState(state=1263, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1404, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1264 : pyxb.binding.content.ContentModelState(state=1264, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1285, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1265 : pyxb.binding.content.ContentModelState(state=1265, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1547, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1266 : pyxb.binding.content.ContentModelState(state=1266, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1407, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1267 : pyxb.binding.content.ContentModelState(state=1267, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1690, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1268 : pyxb.binding.content.ContentModelState(state=1268, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1550, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1269 : pyxb.binding.content.ContentModelState(state=1269, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1431, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1270 : pyxb.binding.content.ContentModelState(state=1270, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1411, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1271 : pyxb.binding.content.ContentModelState(state=1271, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1292, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1272 : pyxb.binding.content.ContentModelState(state=1272, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1554, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1273 : pyxb.binding.content.ContentModelState(state=1273, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1555, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1274 : pyxb.binding.content.ContentModelState(state=1274, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1436, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1275 : pyxb.binding.content.ContentModelState(state=1275, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1557, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1276 : pyxb.binding.content.ContentModelState(state=1276, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1558, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1277 : pyxb.binding.content.ContentModelState(state=1277, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1700, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1278 : pyxb.binding.content.ContentModelState(state=1278, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1419, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1279 : pyxb.binding.content.ContentModelState(state=1279, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1561, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1280 : pyxb.binding.content.ContentModelState(state=1280, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1562, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1281 : pyxb.binding.content.ContentModelState(state=1281, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1422, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1282 : pyxb.binding.content.ContentModelState(state=1282, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1423, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1283 : pyxb.binding.content.ContentModelState(state=1283, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1445, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1284 : pyxb.binding.content.ContentModelState(state=1284, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1425, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1285 : pyxb.binding.content.ContentModelState(state=1285, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1708, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1286 : pyxb.binding.content.ContentModelState(state=1286, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1709, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1287 : pyxb.binding.content.ContentModelState(state=1287, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1569, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1288 : pyxb.binding.content.ContentModelState(state=1288, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1450, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1289 : pyxb.binding.content.ContentModelState(state=1289, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1571, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1290 : pyxb.binding.content.ContentModelState(state=1290, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1311, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1291 : pyxb.binding.content.ContentModelState(state=1291, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1432, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1292 : pyxb.binding.content.ContentModelState(state=1292, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1433, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1293 : pyxb.binding.content.ContentModelState(state=1293, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1455, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1294 : pyxb.binding.content.ContentModelState(state=1294, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1576, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1295 : pyxb.binding.content.ContentModelState(state=1295, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1577, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1296 : pyxb.binding.content.ContentModelState(state=1296, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1437, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1297 : pyxb.binding.content.ContentModelState(state=1297, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1720, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1298 : pyxb.binding.content.ContentModelState(state=1298, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1580, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1299 : pyxb.binding.content.ContentModelState(state=1299, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1581, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1300 : pyxb.binding.content.ContentModelState(state=1300, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1461, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1301 : pyxb.binding.content.ContentModelState(state=1301, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1442, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1302 : pyxb.binding.content.ContentModelState(state=1302, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1584, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1303 : pyxb.binding.content.ContentModelState(state=1303, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1444, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1304 : pyxb.binding.content.ContentModelState(state=1304, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1586, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1305 : pyxb.binding.content.ContentModelState(state=1305, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1446, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1306 : pyxb.binding.content.ContentModelState(state=1306, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1729, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1307 : pyxb.binding.content.ContentModelState(state=1307, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1469, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1308 : pyxb.binding.content.ContentModelState(state=1308, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1449, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1309 : pyxb.binding.content.ContentModelState(state=1309, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1330, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1310 : pyxb.binding.content.ContentModelState(state=1310, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1451, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1311 : pyxb.binding.content.ContentModelState(state=1311, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1593, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1312 : pyxb.binding.content.ContentModelState(state=1312, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1594, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1313 : pyxb.binding.content.ContentModelState(state=1313, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1595, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1314 : pyxb.binding.content.ContentModelState(state=1314, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1737, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1315 : pyxb.binding.content.ContentModelState(state=1315, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1597, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1316 : pyxb.binding.content.ContentModelState(state=1316, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1457, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1317 : pyxb.binding.content.ContentModelState(state=1317, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1599, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1318 : pyxb.binding.content.ContentModelState(state=1318, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1480, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1319 : pyxb.binding.content.ContentModelState(state=1319, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1460, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1320 : pyxb.binding.content.ContentModelState(state=1320, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1602, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1321 : pyxb.binding.content.ContentModelState(state=1321, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1462, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1322 : pyxb.binding.content.ContentModelState(state=1322, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1463, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1323 : pyxb.binding.content.ContentModelState(state=1323, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1746, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1324 : pyxb.binding.content.ContentModelState(state=1324, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1465, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1325 : pyxb.binding.content.ContentModelState(state=1325, is_final=True, transitions=[
    ])
    , 1326 : pyxb.binding.content.ContentModelState(state=1326, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1347, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1327 : pyxb.binding.content.ContentModelState(state=1327, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1489, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1328 : pyxb.binding.content.ContentModelState(state=1328, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1490, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1329 : pyxb.binding.content.ContentModelState(state=1329, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1350, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1330 : pyxb.binding.content.ContentModelState(state=1330, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1612, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1331 : pyxb.binding.content.ContentModelState(state=1331, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1613, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1332 : pyxb.binding.content.ContentModelState(state=1332, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1614, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1333 : pyxb.binding.content.ContentModelState(state=1333, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1615, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1334 : pyxb.binding.content.ContentModelState(state=1334, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1475, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1335 : pyxb.binding.content.ContentModelState(state=1335, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1617, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1336 : pyxb.binding.content.ContentModelState(state=1336, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1618, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1337 : pyxb.binding.content.ContentModelState(state=1337, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1478, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1338 : pyxb.binding.content.ContentModelState(state=1338, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1359, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1339 : pyxb.binding.content.ContentModelState(state=1339, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1621, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1340 : pyxb.binding.content.ContentModelState(state=1340, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1481, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1341 : pyxb.binding.content.ContentModelState(state=1341, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1764, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1342 : pyxb.binding.content.ContentModelState(state=1342, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1624, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1343 : pyxb.binding.content.ContentModelState(state=1343, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1625, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1344 : pyxb.binding.content.ContentModelState(state=1344, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1626, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1345 : pyxb.binding.content.ContentModelState(state=1345, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1366, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1346 : pyxb.binding.content.ContentModelState(state=1346, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1508, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1347 : pyxb.binding.content.ContentModelState(state=1347, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1488, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1348 : pyxb.binding.content.ContentModelState(state=1348, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1369, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1349 : pyxb.binding.content.ContentModelState(state=1349, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1772, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1350 : pyxb.binding.content.ContentModelState(state=1350, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1491, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1351 : pyxb.binding.content.ContentModelState(state=1351, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1633, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1352 : pyxb.binding.content.ContentModelState(state=1352, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1634, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1353 : pyxb.binding.content.ContentModelState(state=1353, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1515, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1354 : pyxb.binding.content.ContentModelState(state=1354, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1636, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1355 : pyxb.binding.content.ContentModelState(state=1355, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1496, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1356 : pyxb.binding.content.ContentModelState(state=1356, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1638, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1357 : pyxb.binding.content.ContentModelState(state=1357, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1519, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1358 : pyxb.binding.content.ContentModelState(state=1358, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1499, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1359 : pyxb.binding.content.ContentModelState(state=1359, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1641, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1360 : pyxb.binding.content.ContentModelState(state=1360, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1642, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1361 : pyxb.binding.content.ContentModelState(state=1361, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1502, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1362 : pyxb.binding.content.ContentModelState(state=1362, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1524, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1363 : pyxb.binding.content.ContentModelState(state=1363, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1504, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1364 : pyxb.binding.content.ContentModelState(state=1364, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1385, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1365 : pyxb.binding.content.ContentModelState(state=1365, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1527, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1366 : pyxb.binding.content.ContentModelState(state=1366, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1507, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1367 : pyxb.binding.content.ContentModelState(state=1367, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1529, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1368 : pyxb.binding.content.ContentModelState(state=1368, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1509, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1369 : pyxb.binding.content.ContentModelState(state=1369, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1792, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1370 : pyxb.binding.content.ContentModelState(state=1370, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1793, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1371 : pyxb.binding.content.ContentModelState(state=1371, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1653, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1372 : pyxb.binding.content.ContentModelState(state=1372, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1654, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1373 : pyxb.binding.content.ContentModelState(state=1373, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1655, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1374 : pyxb.binding.content.ContentModelState(state=1374, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1536, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1375 : pyxb.binding.content.ContentModelState(state=1375, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1516, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1376 : pyxb.binding.content.ContentModelState(state=1376, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1658, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1377 : pyxb.binding.content.ContentModelState(state=1377, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1539, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1378 : pyxb.binding.content.ContentModelState(state=1378, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1660, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1379 : pyxb.binding.content.ContentModelState(state=1379, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1520, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1380 : pyxb.binding.content.ContentModelState(state=1380, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1803, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1381 : pyxb.binding.content.ContentModelState(state=1381, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1543, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1382 : pyxb.binding.content.ContentModelState(state=1382, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1523, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1383 : pyxb.binding.content.ContentModelState(state=1383, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1545, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1384 : pyxb.binding.content.ContentModelState(state=1384, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1405, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1385 : pyxb.binding.content.ContentModelState(state=1385, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1526, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1386 : pyxb.binding.content.ContentModelState(state=1386, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1548, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1387 : pyxb.binding.content.ContentModelState(state=1387, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1669, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1388 : pyxb.binding.content.ContentModelState(state=1388, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1811, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1389 : pyxb.binding.content.ContentModelState(state=1389, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1530, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1390 : pyxb.binding.content.ContentModelState(state=1390, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1813, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1391 : pyxb.binding.content.ContentModelState(state=1391, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1673, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1392 : pyxb.binding.content.ContentModelState(state=1392, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1674, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1393 : pyxb.binding.content.ContentModelState(state=1393, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1414, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1394 : pyxb.binding.content.ContentModelState(state=1394, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1535, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1395 : pyxb.binding.content.ContentModelState(state=1395, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1677, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1396 : pyxb.binding.content.ContentModelState(state=1396, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1537, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1397 : pyxb.binding.content.ContentModelState(state=1397, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1538, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1398 : pyxb.binding.content.ContentModelState(state=1398, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1821, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1399 : pyxb.binding.content.ContentModelState(state=1399, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1681, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1400 : pyxb.binding.content.ContentModelState(state=1400, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1682, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1401 : pyxb.binding.content.ContentModelState(state=1401, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1683, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1402 : pyxb.binding.content.ContentModelState(state=1402, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1564, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1403 : pyxb.binding.content.ContentModelState(state=1403, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1424, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1404 : pyxb.binding.content.ContentModelState(state=1404, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1686, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1405 : pyxb.binding.content.ContentModelState(state=1405, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1687, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1406 : pyxb.binding.content.ContentModelState(state=1406, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1688, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1407 : pyxb.binding.content.ContentModelState(state=1407, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1830, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1408 : pyxb.binding.content.ContentModelState(state=1408, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1549, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1409 : pyxb.binding.content.ContentModelState(state=1409, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1691, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1410 : pyxb.binding.content.ContentModelState(state=1410, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1551, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1411 : pyxb.binding.content.ContentModelState(state=1411, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1573, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1412 : pyxb.binding.content.ContentModelState(state=1412, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1574, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1413 : pyxb.binding.content.ContentModelState(state=1413, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1434, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1414 : pyxb.binding.content.ContentModelState(state=1414, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1837, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1415 : pyxb.binding.content.ContentModelState(state=1415, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1556, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1416 : pyxb.binding.content.ContentModelState(state=1416, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1698, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1417 : pyxb.binding.content.ContentModelState(state=1417, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1699, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1418 : pyxb.binding.content.ContentModelState(state=1418, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1559, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1419 : pyxb.binding.content.ContentModelState(state=1419, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1842, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1420 : pyxb.binding.content.ContentModelState(state=1420, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1441, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1421 : pyxb.binding.content.ContentModelState(state=1421, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1583, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1422 : pyxb.binding.content.ContentModelState(state=1422, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1443, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1423 : pyxb.binding.content.ContentModelState(state=1423, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1846, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1424 : pyxb.binding.content.ContentModelState(state=1424, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1565, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1425 : pyxb.binding.content.ContentModelState(state=1425, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1848, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1426 : pyxb.binding.content.ContentModelState(state=1426, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1567, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1427 : pyxb.binding.content.ContentModelState(state=1427, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1568, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1428 : pyxb.binding.content.ContentModelState(state=1428, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1851, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1429 : pyxb.binding.content.ContentModelState(state=1429, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1570, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1430 : pyxb.binding.content.ContentModelState(state=1430, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1712, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1431 : pyxb.binding.content.ContentModelState(state=1431, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1572, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1432 : pyxb.binding.content.ContentModelState(state=1432, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1453, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1433 : pyxb.binding.content.ContentModelState(state=1433, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1715, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1434 : pyxb.binding.content.ContentModelState(state=1434, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1575, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1435 : pyxb.binding.content.ContentModelState(state=1435, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1717, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1436 : pyxb.binding.content.ContentModelState(state=1436, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1718, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1437 : pyxb.binding.content.ContentModelState(state=1437, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1719, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1438 : pyxb.binding.content.ContentModelState(state=1438, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1579, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1439 : pyxb.binding.content.ContentModelState(state=1439, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1459, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1440 : pyxb.binding.content.ContentModelState(state=1440, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1601, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1441 : pyxb.binding.content.ContentModelState(state=1441, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1723, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1442 : pyxb.binding.content.ContentModelState(state=1442, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1603, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1443 : pyxb.binding.content.ContentModelState(state=1443, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1725, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1444 : pyxb.binding.content.ContentModelState(state=1444, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1867, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1445 : pyxb.binding.content.ContentModelState(state=1445, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1727, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1446 : pyxb.binding.content.ContentModelState(state=1446, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1608, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1447 : pyxb.binding.content.ContentModelState(state=1447, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1588, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1448 : pyxb.binding.content.ContentModelState(state=1448, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1589, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1449 : pyxb.binding.content.ContentModelState(state=1449, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1611, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1450 : pyxb.binding.content.ContentModelState(state=1450, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1732, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1451 : pyxb.binding.content.ContentModelState(state=1451, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1472, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1452 : pyxb.binding.content.ContentModelState(state=1452, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1734, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1453 : pyxb.binding.content.ContentModelState(state=1453, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1876, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1454 : pyxb.binding.content.ContentModelState(state=1454, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1877, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1455 : pyxb.binding.content.ContentModelState(state=1455, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1596, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1456 : pyxb.binding.content.ContentModelState(state=1456, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1738, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1457 : pyxb.binding.content.ContentModelState(state=1457, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1619, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1458 : pyxb.binding.content.ContentModelState(state=1458, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1479, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1459 : pyxb.binding.content.ContentModelState(state=1459, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1741, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1460 : pyxb.binding.content.ContentModelState(state=1460, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1622, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1461 : pyxb.binding.content.ContentModelState(state=1461, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1743, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1462 : pyxb.binding.content.ContentModelState(state=1462, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1886, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1463 : pyxb.binding.content.ContentModelState(state=1463, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1887, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1464 : pyxb.binding.content.ContentModelState(state=1464, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1605, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1465 : pyxb.binding.content.ContentModelState(state=1465, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1747, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1466 : pyxb.binding.content.ContentModelState(state=1466, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1748, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1467 : pyxb.binding.content.ContentModelState(state=1467, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1629, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1468 : pyxb.binding.content.ContentModelState(state=1468, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1609, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1469 : pyxb.binding.content.ContentModelState(state=1469, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1751, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1470 : pyxb.binding.content.ContentModelState(state=1470, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1632, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1471 : pyxb.binding.content.ContentModelState(state=1471, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1753, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1472 : pyxb.binding.content.ContentModelState(state=1472, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1754, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1473 : pyxb.binding.content.ContentModelState(state=1473, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1755, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1474 : pyxb.binding.content.ContentModelState(state=1474, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1898, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1475 : pyxb.binding.content.ContentModelState(state=1475, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1637, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1476 : pyxb.binding.content.ContentModelState(state=1476, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1758, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1477 : pyxb.binding.content.ContentModelState(state=1477, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1498, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1478 : pyxb.binding.content.ContentModelState(state=1478, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1760, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1479 : pyxb.binding.content.ContentModelState(state=1479, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1620, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1480 : pyxb.binding.content.ContentModelState(state=1480, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1762, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1481 : pyxb.binding.content.ContentModelState(state=1481, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1763, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1482 : pyxb.binding.content.ContentModelState(state=1482, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1623, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1483 : pyxb.binding.content.ContentModelState(state=1483, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1907, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1484 : pyxb.binding.content.ContentModelState(state=1484, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1646, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1485 : pyxb.binding.content.ContentModelState(state=1485, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1767, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1486 : pyxb.binding.content.ContentModelState(state=1486, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1648, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1487 : pyxb.binding.content.ContentModelState(state=1487, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1628, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1488 : pyxb.binding.content.ContentModelState(state=1488, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1912, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1489 : pyxb.binding.content.ContentModelState(state=1489, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1771, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1490 : pyxb.binding.content.ContentModelState(state=1490, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1631, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1491 : pyxb.binding.content.ContentModelState(state=1491, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1915, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1492 : pyxb.binding.content.ContentModelState(state=1492, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1774, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1493 : pyxb.binding.content.ContentModelState(state=1493, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1917, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1494 : pyxb.binding.content.ContentModelState(state=1494, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1635, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1495 : pyxb.binding.content.ContentModelState(state=1495, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1657, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1496 : pyxb.binding.content.ContentModelState(state=1496, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1517, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1497 : pyxb.binding.content.ContentModelState(state=1497, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1518, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1498 : pyxb.binding.content.ContentModelState(state=1498, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1780, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1499 : pyxb.binding.content.ContentModelState(state=1499, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1781, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1500 : pyxb.binding.content.ContentModelState(state=1500, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1782, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1501 : pyxb.binding.content.ContentModelState(state=1501, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1783, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1502 : pyxb.binding.content.ContentModelState(state=1502, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1784, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1503 : pyxb.binding.content.ContentModelState(state=1503, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1644, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1504 : pyxb.binding.content.ContentModelState(state=1504, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1786, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1505 : pyxb.binding.content.ContentModelState(state=1505, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1667, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1506 : pyxb.binding.content.ContentModelState(state=1506, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1647, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1507 : pyxb.binding.content.ContentModelState(state=1507, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1931, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1508 : pyxb.binding.content.ContentModelState(state=1508, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1790, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1509 : pyxb.binding.content.ContentModelState(state=1509, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1791, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1510 : pyxb.binding.content.ContentModelState(state=1510, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1651, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1511 : pyxb.binding.content.ContentModelState(state=1511, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1652, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1512 : pyxb.binding.content.ContentModelState(state=1512, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1936, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1513 : pyxb.binding.content.ContentModelState(state=1513, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1534, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1514 : pyxb.binding.content.ContentModelState(state=1514, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1676, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1515 : pyxb.binding.content.ContentModelState(state=1515, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1656, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1516 : pyxb.binding.content.ContentModelState(state=1516, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1678, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1517 : pyxb.binding.content.ContentModelState(state=1517, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1799, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1518 : pyxb.binding.content.ContentModelState(state=1518, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1659, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1519 : pyxb.binding.content.ContentModelState(state=1519, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1801, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1520 : pyxb.binding.content.ContentModelState(state=1520, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1869, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1521 : pyxb.binding.content.ContentModelState(state=1521, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1662, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1522 : pyxb.binding.content.ContentModelState(state=1522, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1663, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1523 : pyxb.binding.content.ContentModelState(state=1523, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1685, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1524 : pyxb.binding.content.ContentModelState(state=1524, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1806, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1525 : pyxb.binding.content.ContentModelState(state=1525, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1546, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1526 : pyxb.binding.content.ContentModelState(state=1526, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1950, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1527 : pyxb.binding.content.ContentModelState(state=1527, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1668, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1528 : pyxb.binding.content.ContentModelState(state=1528, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1810, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1529 : pyxb.binding.content.ContentModelState(state=1529, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1670, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1530 : pyxb.binding.content.ContentModelState(state=1530, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1692, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1531 : pyxb.binding.content.ContentModelState(state=1531, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1672, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1532 : pyxb.binding.content.ContentModelState(state=1532, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1553, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1533 : pyxb.binding.content.ContentModelState(state=1533, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1695, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1534 : pyxb.binding.content.ContentModelState(state=1534, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1816, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1535 : pyxb.binding.content.ContentModelState(state=1535, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1697, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1536 : pyxb.binding.content.ContentModelState(state=1536, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1818, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1537 : pyxb.binding.content.ContentModelState(state=1537, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1961, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1538 : pyxb.binding.content.ContentModelState(state=1538, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1962, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1539 : pyxb.binding.content.ContentModelState(state=1539, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1680, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1540 : pyxb.binding.content.ContentModelState(state=1540, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1702, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1541 : pyxb.binding.content.ContentModelState(state=1541, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1823, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1542 : pyxb.binding.content.ContentModelState(state=1542, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1563, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1543 : pyxb.binding.content.ContentModelState(state=1543, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1684, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1544 : pyxb.binding.content.ContentModelState(state=1544, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1706, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1545 : pyxb.binding.content.ContentModelState(state=1545, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1827, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1546 : pyxb.binding.content.ContentModelState(state=1546, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1970, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1547 : pyxb.binding.content.ContentModelState(state=1547, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1971, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1548 : pyxb.binding.content.ContentModelState(state=1548, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1689, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1549 : pyxb.binding.content.ContentModelState(state=1549, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1711, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1550 : pyxb.binding.content.ContentModelState(state=1550, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1832, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1551 : pyxb.binding.content.ContentModelState(state=1551, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1713, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1552 : pyxb.binding.content.ContentModelState(state=1552, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1693, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1553 : pyxb.binding.content.ContentModelState(state=1553, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1694, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1554 : pyxb.binding.content.ContentModelState(state=1554, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1716, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1555 : pyxb.binding.content.ContentModelState(state=1555, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1696, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1556 : pyxb.binding.content.ContentModelState(state=1556, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1838, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1557 : pyxb.binding.content.ContentModelState(state=1557, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1839, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1558 : pyxb.binding.content.ContentModelState(state=1558, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1840, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1559 : pyxb.binding.content.ContentModelState(state=1559, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1841, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1560 : pyxb.binding.content.ContentModelState(state=1560, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1701, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1561 : pyxb.binding.content.ContentModelState(state=1561, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1582, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1562 : pyxb.binding.content.ContentModelState(state=1562, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1703, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1563 : pyxb.binding.content.ContentModelState(state=1563, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1845, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1564 : pyxb.binding.content.ContentModelState(state=1564, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1705, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1565 : pyxb.binding.content.ContentModelState(state=1565, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1847, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1566 : pyxb.binding.content.ContentModelState(state=1566, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1707, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1567 : pyxb.binding.content.ContentModelState(state=1567, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1991, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1568 : pyxb.binding.content.ContentModelState(state=1568, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1850, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1569 : pyxb.binding.content.ContentModelState(state=1569, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1710, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1570 : pyxb.binding.content.ContentModelState(state=1570, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1591, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1571 : pyxb.binding.content.ContentModelState(state=1571, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1592, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1572 : pyxb.binding.content.ContentModelState(state=1572, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1854, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1573 : pyxb.binding.content.ContentModelState(state=1573, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1714, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1574 : pyxb.binding.content.ContentModelState(state=1574, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1856, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1575 : pyxb.binding.content.ContentModelState(state=1575, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1999, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1576 : pyxb.binding.content.ContentModelState(state=1576, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1858, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1577 : pyxb.binding.content.ContentModelState(state=1577, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=2001, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1578 : pyxb.binding.content.ContentModelState(state=1578, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1598, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1579 : pyxb.binding.content.ContentModelState(state=1579, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1861, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1580 : pyxb.binding.content.ContentModelState(state=1580, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1600, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1581 : pyxb.binding.content.ContentModelState(state=1581, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1722, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1582 : pyxb.binding.content.ContentModelState(state=1582, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1583 : pyxb.binding.content.ContentModelState(state=1583, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1724, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1584 : pyxb.binding.content.ContentModelState(state=1584, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1866, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1585 : pyxb.binding.content.ContentModelState(state=1585, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1726, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1586 : pyxb.binding.content.ContentModelState(state=1586, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1587 : pyxb.binding.content.ContentModelState(state=1587, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1728, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1588 : pyxb.binding.content.ContentModelState(state=1588, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1750, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1589 : pyxb.binding.content.ContentModelState(state=1589, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1610, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1590 : pyxb.binding.content.ContentModelState(state=1590, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1731, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1591 : pyxb.binding.content.ContentModelState(state=1591, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=14, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1592 : pyxb.binding.content.ContentModelState(state=1592, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1733, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1593 : pyxb.binding.content.ContentModelState(state=1593, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=16, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1594 : pyxb.binding.content.ContentModelState(state=1594, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1735, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1595 : pyxb.binding.content.ContentModelState(state=1595, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1736, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1596 : pyxb.binding.content.ContentModelState(state=1596, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=19, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1597 : pyxb.binding.content.ContentModelState(state=1597, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1880, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1598 : pyxb.binding.content.ContentModelState(state=1598, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1739, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1599 : pyxb.binding.content.ContentModelState(state=1599, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1761, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1600 : pyxb.binding.content.ContentModelState(state=1600, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1883, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1601 : pyxb.binding.content.ContentModelState(state=1601, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1884, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1602 : pyxb.binding.content.ContentModelState(state=1602, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1885, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1603 : pyxb.binding.content.ContentModelState(state=1603, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1744, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1604 : pyxb.binding.content.ContentModelState(state=1604, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1745, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1605 : pyxb.binding.content.ContentModelState(state=1605, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=29, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1606 : pyxb.binding.content.ContentModelState(state=1606, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1627, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1607 : pyxb.binding.content.ContentModelState(state=1607, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1769, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1608 : pyxb.binding.content.ContentModelState(state=1608, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1891, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1609 : pyxb.binding.content.ContentModelState(state=1609, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1630, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1610 : pyxb.binding.content.ContentModelState(state=1610, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=34, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1611 : pyxb.binding.content.ContentModelState(state=1611, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1894, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1612 : pyxb.binding.content.ContentModelState(state=1612, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=36, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1613 : pyxb.binding.content.ContentModelState(state=1613, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1896, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1614 : pyxb.binding.content.ContentModelState(state=1614, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1897, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1615 : pyxb.binding.content.ContentModelState(state=1615, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1756, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1616 : pyxb.binding.content.ContentModelState(state=1616, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1757, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1617 : pyxb.binding.content.ContentModelState(state=1617, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1900, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1618 : pyxb.binding.content.ContentModelState(state=1618, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1639, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1619 : pyxb.binding.content.ContentModelState(state=1619, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1902, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1620 : pyxb.binding.content.ContentModelState(state=1620, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=44, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1621 : pyxb.binding.content.ContentModelState(state=1621, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1904, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1622 : pyxb.binding.content.ContentModelState(state=1622, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1905, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1623 : pyxb.binding.content.ContentModelState(state=1623, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1906, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1624 : pyxb.binding.content.ContentModelState(state=1624, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1765, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1625 : pyxb.binding.content.ContentModelState(state=1625, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1766, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1626 : pyxb.binding.content.ContentModelState(state=1626, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1788, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1627 : pyxb.binding.content.ContentModelState(state=1627, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1910, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1628 : pyxb.binding.content.ContentModelState(state=1628, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1649, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1629 : pyxb.binding.content.ContentModelState(state=1629, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1770, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1630 : pyxb.binding.content.ContentModelState(state=1630, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=54, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1631 : pyxb.binding.content.ContentModelState(state=1631, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1914, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1632 : pyxb.binding.content.ContentModelState(state=1632, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1773, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1633 : pyxb.binding.content.ContentModelState(state=1633, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1916, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1634 : pyxb.binding.content.ContentModelState(state=1634, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1775, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1635 : pyxb.binding.content.ContentModelState(state=1635, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1797, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1636 : pyxb.binding.content.ContentModelState(state=1636, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1777, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1637 : pyxb.binding.content.ContentModelState(state=1637, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1920, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1638 : pyxb.binding.content.ContentModelState(state=1638, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1800, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1639 : pyxb.binding.content.ContentModelState(state=1639, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=63, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1640 : pyxb.binding.content.ContentModelState(state=1640, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1923, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1641 : pyxb.binding.content.ContentModelState(state=1641, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1924, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1642 : pyxb.binding.content.ContentModelState(state=1642, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1804, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1643 : pyxb.binding.content.ContentModelState(state=1643, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1926, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1644 : pyxb.binding.content.ContentModelState(state=1644, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1665, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1645 : pyxb.binding.content.ContentModelState(state=1645, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1666, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1646 : pyxb.binding.content.ContentModelState(state=1646, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1929, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1647 : pyxb.binding.content.ContentModelState(state=1647, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1809, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1648 : pyxb.binding.content.ContentModelState(state=1648, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1789, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1649 : pyxb.binding.content.ContentModelState(state=1649, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=73, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1650 : pyxb.binding.content.ContentModelState(state=1650, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1933, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1651 : pyxb.binding.content.ContentModelState(state=1651, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=75, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1652 : pyxb.binding.content.ContentModelState(state=1652, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1935, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1653 : pyxb.binding.content.ContentModelState(state=1653, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1794, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1654 : pyxb.binding.content.ContentModelState(state=1654, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1675, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1655 : pyxb.binding.content.ContentModelState(state=1655, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1796, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1656 : pyxb.binding.content.ContentModelState(state=1656, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=80, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1657 : pyxb.binding.content.ContentModelState(state=1657, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1940, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1658 : pyxb.binding.content.ContentModelState(state=1658, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1941, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1659 : pyxb.binding.content.ContentModelState(state=1659, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=83, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1660 : pyxb.binding.content.ContentModelState(state=1660, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1943, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1661 : pyxb.binding.content.ContentModelState(state=1661, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1802, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1662 : pyxb.binding.content.ContentModelState(state=1662, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1945, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1663 : pyxb.binding.content.ContentModelState(state=1663, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1825, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1664 : pyxb.binding.content.ContentModelState(state=1664, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1805, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1665 : pyxb.binding.content.ContentModelState(state=1665, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=89, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1666 : pyxb.binding.content.ContentModelState(state=1666, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1949, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1667 : pyxb.binding.content.ContentModelState(state=1667, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1808, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1668 : pyxb.binding.content.ContentModelState(state=1668, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=92, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1669 : pyxb.binding.content.ContentModelState(state=1669, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1952, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1670 : pyxb.binding.content.ContentModelState(state=1670, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=94, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1671 : pyxb.binding.content.ContentModelState(state=1671, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1812, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1672 : pyxb.binding.content.ContentModelState(state=1672, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1955, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1673 : pyxb.binding.content.ContentModelState(state=1673, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1835, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1674 : pyxb.binding.content.ContentModelState(state=1674, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1815, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1675 : pyxb.binding.content.ContentModelState(state=1675, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=99, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1676 : pyxb.binding.content.ContentModelState(state=1676, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1817, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1677 : pyxb.binding.content.ContentModelState(state=1677, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=101, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1678 : pyxb.binding.content.ContentModelState(state=1678, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1819, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1679 : pyxb.binding.content.ContentModelState(state=1679, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1820, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1680 : pyxb.binding.content.ContentModelState(state=1680, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1963, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1681 : pyxb.binding.content.ContentModelState(state=1681, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1822, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1682 : pyxb.binding.content.ContentModelState(state=1682, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1844, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1683 : pyxb.binding.content.ContentModelState(state=1683, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1704, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1684 : pyxb.binding.content.ContentModelState(state=1684, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=108, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1685 : pyxb.binding.content.ContentModelState(state=1685, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1968, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1686 : pyxb.binding.content.ContentModelState(state=1686, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1969, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1687 : pyxb.binding.content.ContentModelState(state=1687, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1828, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1688 : pyxb.binding.content.ContentModelState(state=1688, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1829, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1689 : pyxb.binding.content.ContentModelState(state=1689, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=113, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1690 : pyxb.binding.content.ContentModelState(state=1690, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1831, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1691 : pyxb.binding.content.ContentModelState(state=1691, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1853, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1692 : pyxb.binding.content.ContentModelState(state=1692, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1975, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1693 : pyxb.binding.content.ContentModelState(state=1693, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1855, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1694 : pyxb.binding.content.ContentModelState(state=1694, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=118, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1695 : pyxb.binding.content.ContentModelState(state=1695, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1836, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1696 : pyxb.binding.content.ContentModelState(state=1696, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1979, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1697 : pyxb.binding.content.ContentModelState(state=1697, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1980, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1698 : pyxb.binding.content.ContentModelState(state=1698, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1981, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1699 : pyxb.binding.content.ContentModelState(state=1699, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1982, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1700 : pyxb.binding.content.ContentModelState(state=1700, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1721, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1701 : pyxb.binding.content.ContentModelState(state=1701, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1863, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1702 : pyxb.binding.content.ContentModelState(state=1702, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1985, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1703 : pyxb.binding.content.ContentModelState(state=1703, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1865, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1704 : pyxb.binding.content.ContentModelState(state=1704, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=128, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1705 : pyxb.binding.content.ContentModelState(state=1705, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1988, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1706 : pyxb.binding.content.ContentModelState(state=1706, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1989, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1707 : pyxb.binding.content.ContentModelState(state=1707, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1990, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1708 : pyxb.binding.content.ContentModelState(state=1708, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1849, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1709 : pyxb.binding.content.ContentModelState(state=1709, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1730, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1710 : pyxb.binding.content.ContentModelState(state=1710, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1993, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1711 : pyxb.binding.content.ContentModelState(state=1711, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1994, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1712 : pyxb.binding.content.ContentModelState(state=1712, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1874, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1713 : pyxb.binding.content.ContentModelState(state=1713, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1996, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1714 : pyxb.binding.content.ContentModelState(state=1714, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=138, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1715 : pyxb.binding.content.ContentModelState(state=1715, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=139, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1716 : pyxb.binding.content.ContentModelState(state=1716, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1857, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1717 : pyxb.binding.content.ContentModelState(state=1717, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=2000, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1718 : pyxb.binding.content.ContentModelState(state=1718, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1859, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1719 : pyxb.binding.content.ContentModelState(state=1719, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1881, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1720 : pyxb.binding.content.ContentModelState(state=1720, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1740, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1721 : pyxb.binding.content.ContentModelState(state=1721, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1862, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1722 : pyxb.binding.content.ContentModelState(state=1722, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1742, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1723 : pyxb.binding.content.ContentModelState(state=1723, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1864, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1724 : pyxb.binding.content.ContentModelState(state=1724, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1725 : pyxb.binding.content.ContentModelState(state=1725, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1726 : pyxb.binding.content.ContentModelState(state=1726, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1889, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1727 : pyxb.binding.content.ContentModelState(state=1727, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1868, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1728 : pyxb.binding.content.ContentModelState(state=1728, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1749, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1729 : pyxb.binding.content.ContentModelState(state=1729, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1870, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1730 : pyxb.binding.content.ContentModelState(state=1730, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1731 : pyxb.binding.content.ContentModelState(state=1731, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1752, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1732 : pyxb.binding.content.ContentModelState(state=1732, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1873, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1733 : pyxb.binding.content.ContentModelState(state=1733, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=157, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1734 : pyxb.binding.content.ContentModelState(state=1734, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1875, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1735 : pyxb.binding.content.ContentModelState(state=1735, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=17, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1736 : pyxb.binding.content.ContentModelState(state=1736, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=18, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1737 : pyxb.binding.content.ContentModelState(state=1737, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1878, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1738 : pyxb.binding.content.ContentModelState(state=1738, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1759, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1739 : pyxb.binding.content.ContentModelState(state=1739, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=22, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1740 : pyxb.binding.content.ContentModelState(state=1740, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=23, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1741 : pyxb.binding.content.ContentModelState(state=1741, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=24, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1742 : pyxb.binding.content.ContentModelState(state=1742, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=25, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1743 : pyxb.binding.content.ContentModelState(state=1743, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=26, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1744 : pyxb.binding.content.ContentModelState(state=1744, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=169, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1745 : pyxb.binding.content.ContentModelState(state=1745, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1908, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1746 : pyxb.binding.content.ContentModelState(state=1746, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1888, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1747 : pyxb.binding.content.ContentModelState(state=1747, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1768, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1748 : pyxb.binding.content.ContentModelState(state=1748, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1890, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1749 : pyxb.binding.content.ContentModelState(state=1749, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=174, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1750 : pyxb.binding.content.ContentModelState(state=1750, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1892, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1751 : pyxb.binding.content.ContentModelState(state=1751, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1893, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1752 : pyxb.binding.content.ContentModelState(state=1752, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=177, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1753 : pyxb.binding.content.ContentModelState(state=1753, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1895, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1754 : pyxb.binding.content.ContentModelState(state=1754, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=37, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1755 : pyxb.binding.content.ContentModelState(state=1755, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1964, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1756 : pyxb.binding.content.ContentModelState(state=1756, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1919, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1757 : pyxb.binding.content.ContentModelState(state=1757, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1778, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1758 : pyxb.binding.content.ContentModelState(state=1758, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1779, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1759 : pyxb.binding.content.ContentModelState(state=1759, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=42, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1760 : pyxb.binding.content.ContentModelState(state=1760, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=43, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1761 : pyxb.binding.content.ContentModelState(state=1761, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1903, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1762 : pyxb.binding.content.ContentModelState(state=1762, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=45, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1763 : pyxb.binding.content.ContentModelState(state=1763, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=46, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1764 : pyxb.binding.content.ContentModelState(state=1764, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1785, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1765 : pyxb.binding.content.ContentModelState(state=1765, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=48, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1766 : pyxb.binding.content.ContentModelState(state=1766, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1787, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1767 : pyxb.binding.content.ContentModelState(state=1767, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1909, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1768 : pyxb.binding.content.ContentModelState(state=1768, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=51, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1769 : pyxb.binding.content.ContentModelState(state=1769, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=52, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1770 : pyxb.binding.content.ContentModelState(state=1770, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=195, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1771 : pyxb.binding.content.ContentModelState(state=1771, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1913, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1772 : pyxb.binding.content.ContentModelState(state=1772, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=55, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1773 : pyxb.binding.content.ContentModelState(state=1773, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=56, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1774 : pyxb.binding.content.ContentModelState(state=1774, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1795, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1775 : pyxb.binding.content.ContentModelState(state=1775, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1938, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1776 : pyxb.binding.content.ContentModelState(state=1776, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1918, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1777 : pyxb.binding.content.ContentModelState(state=1777, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1798, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1778 : pyxb.binding.content.ContentModelState(state=1778, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=61, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1779 : pyxb.binding.content.ContentModelState(state=1779, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1921, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1780 : pyxb.binding.content.ContentModelState(state=1780, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1922, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1781 : pyxb.binding.content.ContentModelState(state=1781, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=64, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1782 : pyxb.binding.content.ContentModelState(state=1782, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=65, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1783 : pyxb.binding.content.ContentModelState(state=1783, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1925, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1784 : pyxb.binding.content.ContentModelState(state=1784, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=67, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1785 : pyxb.binding.content.ContentModelState(state=1785, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=68, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1786 : pyxb.binding.content.ContentModelState(state=1786, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1807, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1787 : pyxb.binding.content.ContentModelState(state=1787, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=212, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1788 : pyxb.binding.content.ContentModelState(state=1788, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=71, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1789 : pyxb.binding.content.ContentModelState(state=1789, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=214, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1790 : pyxb.binding.content.ContentModelState(state=1790, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1932, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1791 : pyxb.binding.content.ContentModelState(state=1791, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1954, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1792 : pyxb.binding.content.ContentModelState(state=1792, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1934, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1793 : pyxb.binding.content.ContentModelState(state=1793, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1814, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1794 : pyxb.binding.content.ContentModelState(state=1794, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=77, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1795 : pyxb.binding.content.ContentModelState(state=1795, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=78, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1796 : pyxb.binding.content.ContentModelState(state=1796, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1959, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1797 : pyxb.binding.content.ContentModelState(state=1797, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1939, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1798 : pyxb.binding.content.ContentModelState(state=1798, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=81, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1799 : pyxb.binding.content.ContentModelState(state=1799, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=82, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1800 : pyxb.binding.content.ContentModelState(state=1800, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1942, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1801 : pyxb.binding.content.ContentModelState(state=1801, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=84, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1802 : pyxb.binding.content.ContentModelState(state=1802, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=152, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1803 : pyxb.binding.content.ContentModelState(state=1803, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1824, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1804 : pyxb.binding.content.ContentModelState(state=1804, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=87, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1805 : pyxb.binding.content.ContentModelState(state=1805, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1826, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1806 : pyxb.binding.content.ContentModelState(state=1806, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1948, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1807 : pyxb.binding.content.ContentModelState(state=1807, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=90, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1808 : pyxb.binding.content.ContentModelState(state=1808, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=91, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1809 : pyxb.binding.content.ContentModelState(state=1809, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1951, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1810 : pyxb.binding.content.ContentModelState(state=1810, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1973, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1811 : pyxb.binding.content.ContentModelState(state=1811, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1953, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1812 : pyxb.binding.content.ContentModelState(state=1812, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1833, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1813 : pyxb.binding.content.ContentModelState(state=1813, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1834, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1814 : pyxb.binding.content.ContentModelState(state=1814, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=97, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1815 : pyxb.binding.content.ContentModelState(state=1815, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1978, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1816 : pyxb.binding.content.ContentModelState(state=1816, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1958, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1817 : pyxb.binding.content.ContentModelState(state=1817, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=242, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1818 : pyxb.binding.content.ContentModelState(state=1818, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1960, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1819 : pyxb.binding.content.ContentModelState(state=1819, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=244, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1820 : pyxb.binding.content.ContentModelState(state=1820, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=103, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1821 : pyxb.binding.content.ContentModelState(state=1821, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=104, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1822 : pyxb.binding.content.ContentModelState(state=1822, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1843, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1823 : pyxb.binding.content.ContentModelState(state=1823, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1965, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1824 : pyxb.binding.content.ContentModelState(state=1824, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=107, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1825 : pyxb.binding.content.ContentModelState(state=1825, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1967, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1826 : pyxb.binding.content.ContentModelState(state=1826, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=109, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1827 : pyxb.binding.content.ContentModelState(state=1827, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=110, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1828 : pyxb.binding.content.ContentModelState(state=1828, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=253, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1829 : pyxb.binding.content.ContentModelState(state=1829, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=112, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1830 : pyxb.binding.content.ContentModelState(state=1830, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1972, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1831 : pyxb.binding.content.ContentModelState(state=1831, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1852, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1832 : pyxb.binding.content.ContentModelState(state=1832, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1974, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1833 : pyxb.binding.content.ContentModelState(state=1833, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=258, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1834 : pyxb.binding.content.ContentModelState(state=1834, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=117, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1835 : pyxb.binding.content.ContentModelState(state=1835, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1977, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1836 : pyxb.binding.content.ContentModelState(state=1836, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=261, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1837 : pyxb.binding.content.ContentModelState(state=1837, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=120, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1838 : pyxb.binding.content.ContentModelState(state=1838, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=263, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1839 : pyxb.binding.content.ContentModelState(state=1839, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1860, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1840 : pyxb.binding.content.ContentModelState(state=1840, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=123, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1841 : pyxb.binding.content.ContentModelState(state=1841, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1842 : pyxb.binding.content.ContentModelState(state=1842, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1984, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1843 : pyxb.binding.content.ContentModelState(state=1843, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=268, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1844 : pyxb.binding.content.ContentModelState(state=1844, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1986, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1845 : pyxb.binding.content.ContentModelState(state=1845, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1987, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1846 : pyxb.binding.content.ContentModelState(state=1846, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=129, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1847 : pyxb.binding.content.ContentModelState(state=1847, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=130, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1848 : pyxb.binding.content.ContentModelState(state=1848, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=57, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1849 : pyxb.binding.content.ContentModelState(state=1849, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1850 : pyxb.binding.content.ContentModelState(state=1850, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1871, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1851 : pyxb.binding.content.ContentModelState(state=1851, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1872, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1852 : pyxb.binding.content.ContentModelState(state=1852, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=277, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1853 : pyxb.binding.content.ContentModelState(state=1853, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=136, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1854 : pyxb.binding.content.ContentModelState(state=1854, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=137, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1855 : pyxb.binding.content.ContentModelState(state=1855, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1997, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1856 : pyxb.binding.content.ContentModelState(state=1856, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1998, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1857 : pyxb.binding.content.ContentModelState(state=1857, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=282, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1858 : pyxb.binding.content.ContentModelState(state=1858, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1879, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1859 : pyxb.binding.content.ContentModelState(state=1859, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=142, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1860 : pyxb.binding.content.ContentModelState(state=1860, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=2002, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1861 : pyxb.binding.content.ContentModelState(state=1861, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1882, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1862 : pyxb.binding.content.ContentModelState(state=1862, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=145, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1863 : pyxb.binding.content.ContentModelState(state=1863, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=146, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1864 : pyxb.binding.content.ContentModelState(state=1864, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=147, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1865 : pyxb.binding.content.ContentModelState(state=1865, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=148, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1866 : pyxb.binding.content.ContentModelState(state=1866, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=149, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1867 : pyxb.binding.content.ContentModelState(state=1867, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1868 : pyxb.binding.content.ContentModelState(state=1868, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=151, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1869 : pyxb.binding.content.ContentModelState(state=1869, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1870 : pyxb.binding.content.ContentModelState(state=1870, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=33, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1871 : pyxb.binding.content.ContentModelState(state=1871, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=296, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1872 : pyxb.binding.content.ContentModelState(state=1872, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=155, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1873 : pyxb.binding.content.ContentModelState(state=1873, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=156, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1874 : pyxb.binding.content.ContentModelState(state=1874, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=15, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1875 : pyxb.binding.content.ContentModelState(state=1875, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=38, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1876 : pyxb.binding.content.ContentModelState(state=1876, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=159, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1877 : pyxb.binding.content.ContentModelState(state=1877, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1899, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1878 : pyxb.binding.content.ContentModelState(state=1878, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=161, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1879 : pyxb.binding.content.ContentModelState(state=1879, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=162, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1880 : pyxb.binding.content.ContentModelState(state=1880, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1901, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1881 : pyxb.binding.content.ContentModelState(state=1881, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=164, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1882 : pyxb.binding.content.ContentModelState(state=1882, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=307, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1883 : pyxb.binding.content.ContentModelState(state=1883, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=166, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1884 : pyxb.binding.content.ContentModelState(state=1884, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=167, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1885 : pyxb.binding.content.ContentModelState(state=1885, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=47, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1886 : pyxb.binding.content.ContentModelState(state=1886, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=27, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1887 : pyxb.binding.content.ContentModelState(state=1887, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=28, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1888 : pyxb.binding.content.ContentModelState(state=1888, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=171, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1889 : pyxb.binding.content.ContentModelState(state=1889, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=172, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1890 : pyxb.binding.content.ContentModelState(state=1890, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1911, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1891 : pyxb.binding.content.ContentModelState(state=1891, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=32, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1892 : pyxb.binding.content.ContentModelState(state=1892, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=175, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1893 : pyxb.binding.content.ContentModelState(state=1893, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=176, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1894 : pyxb.binding.content.ContentModelState(state=1894, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=35, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1895 : pyxb.binding.content.ContentModelState(state=1895, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=245, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1896 : pyxb.binding.content.ContentModelState(state=1896, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=179, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1897 : pyxb.binding.content.ContentModelState(state=1897, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=105, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1898 : pyxb.binding.content.ContentModelState(state=1898, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=39, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1899 : pyxb.binding.content.ContentModelState(state=1899, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=40, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1900 : pyxb.binding.content.ContentModelState(state=1900, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=62, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1901 : pyxb.binding.content.ContentModelState(state=1901, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=184, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1902 : pyxb.binding.content.ContentModelState(state=1902, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=185, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1903 : pyxb.binding.content.ContentModelState(state=1903, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=327, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1904 : pyxb.binding.content.ContentModelState(state=1904, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=66, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1905 : pyxb.binding.content.ContentModelState(state=1905, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=188, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1906 : pyxb.binding.content.ContentModelState(state=1906, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1927, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1907 : pyxb.binding.content.ContentModelState(state=1907, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1928, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1908 : pyxb.binding.content.ContentModelState(state=1908, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=191, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1909 : pyxb.binding.content.ContentModelState(state=1909, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1930, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1910 : pyxb.binding.content.ContentModelState(state=1910, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=193, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1911 : pyxb.binding.content.ContentModelState(state=1911, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=335, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1912 : pyxb.binding.content.ContentModelState(state=1912, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=53, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1913 : pyxb.binding.content.ContentModelState(state=1913, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=196, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1914 : pyxb.binding.content.ContentModelState(state=1914, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=76, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1915 : pyxb.binding.content.ContentModelState(state=1915, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=198, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1916 : pyxb.binding.content.ContentModelState(state=1916, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1937, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1917 : pyxb.binding.content.ContentModelState(state=1917, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=58, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1918 : pyxb.binding.content.ContentModelState(state=1918, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=201, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1919 : pyxb.binding.content.ContentModelState(state=1919, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=202, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1920 : pyxb.binding.content.ContentModelState(state=1920, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=203, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1921 : pyxb.binding.content.ContentModelState(state=1921, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=345, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1922 : pyxb.binding.content.ContentModelState(state=1922, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=346, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1923 : pyxb.binding.content.ContentModelState(state=1923, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1944, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1924 : pyxb.binding.content.ContentModelState(state=1924, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=207, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1925 : pyxb.binding.content.ContentModelState(state=1925, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1946, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1926 : pyxb.binding.content.ContentModelState(state=1926, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1947, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1927 : pyxb.binding.content.ContentModelState(state=1927, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=351, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1928 : pyxb.binding.content.ContentModelState(state=1928, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=69, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1929 : pyxb.binding.content.ContentModelState(state=1929, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=70, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1930 : pyxb.binding.content.ContentModelState(state=1930, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=213, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1931 : pyxb.binding.content.ContentModelState(state=1931, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=72, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1932 : pyxb.binding.content.ContentModelState(state=1932, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=215, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1933 : pyxb.binding.content.ContentModelState(state=1933, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=74, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1934 : pyxb.binding.content.ContentModelState(state=1934, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=96, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1935 : pyxb.binding.content.ContentModelState(state=1935, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1956, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1936 : pyxb.binding.content.ContentModelState(state=1936, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1957, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1937 : pyxb.binding.content.ContentModelState(state=1937, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=361, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1938 : pyxb.binding.content.ContentModelState(state=1938, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=79, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1939 : pyxb.binding.content.ContentModelState(state=1939, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=363, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1940 : pyxb.binding.content.ContentModelState(state=1940, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=223, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1941 : pyxb.binding.content.ContentModelState(state=1941, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=224, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1942 : pyxb.binding.content.ContentModelState(state=1942, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=366, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1943 : pyxb.binding.content.ContentModelState(state=1943, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=106, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1944 : pyxb.binding.content.ContentModelState(state=1944, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=227, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1945 : pyxb.binding.content.ContentModelState(state=1945, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1966, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1946 : pyxb.binding.content.ContentModelState(state=1946, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=229, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1947 : pyxb.binding.content.ContentModelState(state=1947, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=88, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1948 : pyxb.binding.content.ContentModelState(state=1948, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=231, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1949 : pyxb.binding.content.ContentModelState(state=1949, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=232, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1950 : pyxb.binding.content.ContentModelState(state=1950, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=233, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1951 : pyxb.binding.content.ContentModelState(state=1951, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=375, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1952 : pyxb.binding.content.ContentModelState(state=1952, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=93, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1953 : pyxb.binding.content.ContentModelState(state=1953, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=236, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1954 : pyxb.binding.content.ContentModelState(state=1954, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=95, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1955 : pyxb.binding.content.ContentModelState(state=1955, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1976, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1956 : pyxb.binding.content.ContentModelState(state=1956, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=239, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1957 : pyxb.binding.content.ContentModelState(state=1957, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=98, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1958 : pyxb.binding.content.ContentModelState(state=1958, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=241, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1959 : pyxb.binding.content.ContentModelState(state=1959, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=100, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1960 : pyxb.binding.content.ContentModelState(state=1960, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=122, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1961 : pyxb.binding.content.ContentModelState(state=1961, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=102, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1962 : pyxb.binding.content.ContentModelState(state=1962, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1983, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1963 : pyxb.binding.content.ContentModelState(state=1963, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=125, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1964 : pyxb.binding.content.ContentModelState(state=1964, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=247, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1965 : pyxb.binding.content.ContentModelState(state=1965, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=127, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1966 : pyxb.binding.content.ContentModelState(state=1966, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=390, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1967 : pyxb.binding.content.ContentModelState(state=1967, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=391, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1968 : pyxb.binding.content.ContentModelState(state=1968, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=251, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1969 : pyxb.binding.content.ContentModelState(state=1969, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=252, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1970 : pyxb.binding.content.ContentModelState(state=1970, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=111, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1971 : pyxb.binding.content.ContentModelState(state=1971, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1992, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1972 : pyxb.binding.content.ContentModelState(state=1972, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=134, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1973 : pyxb.binding.content.ContentModelState(state=1973, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=256, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1974 : pyxb.binding.content.ContentModelState(state=1974, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1995, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1975 : pyxb.binding.content.ContentModelState(state=1975, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=116, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1976 : pyxb.binding.content.ContentModelState(state=1976, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=400, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1977 : pyxb.binding.content.ContentModelState(state=1977, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=260, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1978 : pyxb.binding.content.ContentModelState(state=1978, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=119, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1979 : pyxb.binding.content.ContentModelState(state=1979, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=141, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1980 : pyxb.binding.content.ContentModelState(state=1980, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=121, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1981 : pyxb.binding.content.ContentModelState(state=1981, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=143, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1982 : pyxb.binding.content.ContentModelState(state=1982, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1983 : pyxb.binding.content.ContentModelState(state=1983, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=266, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1984 : pyxb.binding.content.ContentModelState(state=1984, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1985 : pyxb.binding.content.ContentModelState(state=1985, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=126, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1986 : pyxb.binding.content.ContentModelState(state=1986, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=269, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1987 : pyxb.binding.content.ContentModelState(state=1987, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=411, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1988 : pyxb.binding.content.ContentModelState(state=1988, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=271, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1989 : pyxb.binding.content.ContentModelState(state=1989, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=272, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1990 : pyxb.binding.content.ContentModelState(state=1990, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=199, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1991 : pyxb.binding.content.ContentModelState(state=1991, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=132, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1992 : pyxb.binding.content.ContentModelState(state=1992, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=275, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1993 : pyxb.binding.content.ContentModelState(state=1993, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=13, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1994 : pyxb.binding.content.ContentModelState(state=1994, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=135, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1995 : pyxb.binding.content.ContentModelState(state=1995, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=419, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1996 : pyxb.binding.content.ContentModelState(state=1996, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=279, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1997 : pyxb.binding.content.ContentModelState(state=1997, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=421, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1998 : pyxb.binding.content.ContentModelState(state=1998, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=281, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 1999 : pyxb.binding.content.ContentModelState(state=1999, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=140, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FacturaATR'))),
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=1466, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 2000 : pyxb.binding.content.ContentModelState(state=2000, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=20, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 2001 : pyxb.binding.content.ContentModelState(state=2001, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=21, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
    , 2002 : pyxb.binding.content.ContentModelState(state=2002, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=1325, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'RegistroFin'))),
        pyxb.binding.content.ContentModelTransition(next_state=285, element_use=CTD_ANON_28._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'OtrasFacturas'))),
    ])
})



DatosAPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'), pyxb.binding.datatypes.date, scope=DatosAPM))

DatosAPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ApmAportado'), Indicativo, scope=DatosAPM))

DatosAPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstAT'), Potencia, scope=DatosAPM))

DatosAPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionApm'), pyxb.binding.datatypes.date, scope=DatosAPM))

DatosAPM._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'CodigoApm'), X20, scope=DatosAPM))
DatosAPM._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'))),
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ApmAportado'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoApm'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstAT'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionApm'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=True, transitions=[
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionApm'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstAT'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionApm'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'CodigoApm'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaCaducidadApm'))),
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'PotenciaInstAT'))),
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=DatosAPM._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'FechaEmisionApm'))),
    ])
})



CTD_ANON_29._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'), STD_ANON_38, scope=CTD_ANON_29))

CTD_ANON_29._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Periodo'), CTD_ANON_12, scope=CTD_ANON_29))
CTD_ANON_29._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=4, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=5, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 4 : pyxb.binding.content.ContentModelState(state=4, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=8, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 5 : pyxb.binding.content.ContentModelState(state=5, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=7, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 6 : pyxb.binding.content.ContentModelState(state=6, is_final=True, transitions=[
    ])
    , 7 : pyxb.binding.content.ContentModelState(state=7, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=9, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 8 : pyxb.binding.content.ContentModelState(state=8, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=10, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 9 : pyxb.binding.content.ContentModelState(state=9, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=11, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 10 : pyxb.binding.content.ContentModelState(state=10, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=12, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 11 : pyxb.binding.content.ContentModelState(state=11, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
    , 12 : pyxb.binding.content.ContentModelState(state=12, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Periodo'))),
        pyxb.binding.content.ContentModelTransition(next_state=6, element_use=CTD_ANON_29._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'ImporteTotalExcesos'))),
    ])
})



IdYNombreCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'Nombre'), NombreCliente, scope=IdYNombreCliente))

IdYNombreCliente._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'), IdCliente, scope=IdYNombreCliente))
IdYNombreCliente._ContentModel = pyxb.binding.content.ContentModel(state_map = {
      1 : pyxb.binding.content.ContentModelState(state=1, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=2, element_use=IdYNombreCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'IdCliente'))),
    ])
    , 2 : pyxb.binding.content.ContentModelState(state=2, is_final=False, transitions=[
        pyxb.binding.content.ContentModelTransition(next_state=3, element_use=IdYNombreCliente._UseForTag(pyxb.namespace.ExpandedName(Namespace, u'Nombre'))),
    ])
    , 3 : pyxb.binding.content.ContentModelState(state=3, is_final=True, transitions=[
    ])
})
